{
  "description": "Application comprised of most Folio modules not present in app-platform-minimal",
  "modules": [
    {
      "id": "mod-graphql-1.13.1000378",
      "name": "mod-graphql",
      "version": "1.13.1000378"
    },
    {
      "id": "mod-quick-marc-7.1.0-SNAPSHOT.330",
      "name": "mod-quick-marc",
      "version": "7.1.0-SNAPSHOT.330"
    },
    {
      "id": "mod-inventory-storage-30.0.0-SNAPSHOT.1190",
      "name": "mod-inventory-storage",
      "version": "30.0.0-SNAPSHOT.1190"
    },
    {
      "id": "mod-circulation-storage-17.5.0-SNAPSHOT.475",
      "name": "mod-circulation-storage",
      "version": "17.5.0-SNAPSHOT.475"
    },
    {
      "id": "mod-search-6.0.0-SNAPSHOT.728",
      "name": "mod-search",
      "version": "6.0.0-SNAPSHOT.728"
    },
    {
      "id": "mod-inventory-21.2.0-SNAPSHOT.894",
      "name": "mod-inventory",
      "version": "21.2.0-SNAPSHOT.894"
    },
    {
      "id": "mod-circulation-24.5.0-SNAPSHOT.1331",
      "name": "mod-circulation",
      "version": "24.5.0-SNAPSHOT.1331"
    },
    {
      "id": "mod-feesfines-19.4.0-SNAPSHOT.257",
      "name": "mod-feesfines",
      "version": "19.4.0-SNAPSHOT.257"
    },
    {
      "id": "mod-patron-blocks-1.13.0-SNAPSHOT.112",
      "name": "mod-patron-blocks",
      "version": "1.13.0-SNAPSHOT.112"
    },
    {
      "id": "mod-entities-links-4.1.0-SNAPSHOT.347",
      "name": "mod-entities-links",
      "version": "4.1.0-SNAPSHOT.347"
    },
    {
      "id": "mod-source-record-manager-3.11.0-SNAPSHOT.1039",
      "name": "mod-source-record-manager",
      "version": "3.11.0-SNAPSHOT.1039"
    },
    {
      "id": "mod-di-converter-storage-2.5.0-SNAPSHOT.76",
      "name": "mod-di-converter-storage",
      "version": "2.5.0-SNAPSHOT.76"
    },
    {
      "id": "mod-patron-6.4.0-SNAPSHOT.170",
      "name": "mod-patron",
      "version": "6.4.0-SNAPSHOT.170"
    },
    {
      "id": "mod-data-export-5.3.0-SNAPSHOT.477",
      "name": "mod-data-export",
      "version": "5.3.0-SNAPSHOT.477"
    },
    {
      "id": "mod-data-export-spring-3.6.0-SNAPSHOT.310",
      "name": "mod-data-export-spring",
      "version": "3.6.0-SNAPSHOT.310"
    },
    {
      "id": "mod-data-export-worker-3.5.0-SNAPSHOT.631",
      "name": "mod-data-export-worker",
      "version": "3.5.0-SNAPSHOT.631"
    },
    {
      "id": "mod-remote-storage-3.5.0-SNAPSHOT.234",
      "name": "mod-remote-storage",
      "version": "3.5.0-SNAPSHOT.234"
    },
    {
      "id": "mod-calendar-3.4.0-SNAPSHOT.187",
      "name": "mod-calendar",
      "version": "3.4.0-SNAPSHOT.187"
    },
    {
      "id": "mod-audit-3.0.0-SNAPSHOT.225",
      "name": "mod-audit",
      "version": "3.0.0-SNAPSHOT.225"
    },
    {
      "id": "mod-courses-1.5.0-SNAPSHOT.170",
      "name": "mod-courses",
      "version": "1.5.0-SNAPSHOT.170"
    },
    {
      "id": "mod-source-record-storage-5.11.0-SNAPSHOT.701",
      "name": "mod-source-record-storage",
      "version": "5.11.0-SNAPSHOT.701"
    },
    {
      "id": "mod-data-import-3.4.0-SNAPSHOT.336",
      "name": "mod-data-import",
      "version": "3.4.0-SNAPSHOT.336"
    },
    {
      "id": "mod-email-1.20.0-SNAPSHOT.93",
      "name": "mod-email",
      "version": "1.20.0-SNAPSHOT.93"
    },
    {
      "id": "mod-event-config-2.10.0-SNAPSHOT.72",
      "name": "mod-event-config",
      "version": "2.10.0-SNAPSHOT.72"
    },
    {
      "id": "mod-notify-3.5.0-SNAPSHOT.139",
      "name": "mod-notify",
      "version": "3.5.0-SNAPSHOT.139"
    },
    {
      "id": "mod-sender-1.14.1",
      "name": "mod-sender",
      "version": "1.14.1"
    },
    {
      "id": "mod-template-engine-1.23.0-SNAPSHOT.104",
      "name": "mod-template-engine",
      "version": "1.23.0-SNAPSHOT.104"
    },
    {
      "id": "mod-pubsub-2.17.0-SNAPSHOT.263",
      "name": "mod-pubsub",
      "version": "2.17.0-SNAPSHOT.263"
    },
    {
      "id": "mod-copycat-1.8.0",
      "name": "mod-copycat",
      "version": "1.8.0"
    },
    {
      "id": "mod-ncip-1.16.0-SNAPSHOT.110",
      "name": "mod-ncip",
      "version": "1.16.0-SNAPSHOT.110"
    },
    {
      "id": "mod-inventory-update-5.0.0-SNAPSHOT.143",
      "name": "mod-inventory-update",
      "version": "5.0.0-SNAPSHOT.143"
    },
    {
      "id": "mod-user-import-3.11.0-SNAPSHOT.113",
      "name": "mod-user-import",
      "version": "3.11.0-SNAPSHOT.113"
    },
    {
      "id": "mod-batch-print-1.3.1-SNAPSHOT.16",
      "name": "mod-batch-print",
      "version": "1.3.1-SNAPSHOT.16"
    },
    {
      "id": "mod-serials-management-2.1.0-SNAPSHOT.166",
      "name": "mod-serials-management",
      "version": "2.1.0-SNAPSHOT.166"
    },
    {
      "id": "mod-record-specifications-2.1.0-SNAPSHOT.110",
      "name": "mod-record-specifications",
      "version": "2.1.0-SNAPSHOT.110"
    }
  ],
  "uiModules": [
    {
      "id": "folio_marc-authorities-8.0.1099000000001046",
      "name": "folio_marc-authorities",
      "version": "8.0.1099000000001046"
    },
    {
      "id": "folio_stripes-authority-components-6.1.109900000000143",
      "name": "folio_stripes-authority-components",
      "version": "6.1.109900000000143"
    },
    {
      "id": "folio_quick-marc-10.1.109900000000372",
      "name": "folio_quick-marc",
      "version": "10.1.109900000000372"
    },
    {
      "id": "folio_inventory-14.0.1099000000001130",
      "name": "folio_inventory",
      "version": "14.0.1099000000001130"
    },
    {
      "id": "folio_servicepoints-8.0.10990000000041",
      "name": "folio_servicepoints",
      "version": "8.0.10990000000041"
    },
    {
      "id": "folio_plugin-create-inventory-records-7.0.10990000000087",
      "name": "folio_plugin-create-inventory-records",
      "version": "7.0.10990000000087"
    },
    {
      "id": "folio_plugin-find-instance-9.1.109900000000101",
      "name": "folio_plugin-find-instance",
      "version": "9.1.109900000000101"
    },
    {
      "id": "folio_plugin-find-package-title-7.0.10990000000063",
      "name": "folio_plugin-find-package-title",
      "version": "7.0.10990000000063"
    },
    {
      "id": "folio_checkin-12.0.109900000000199",
      "name": "folio_checkin",
      "version": "12.0.109900000000199"
    },
    {
      "id": "folio_checkout-13.0.109900000000169",
      "name": "folio_checkout",
      "version": "13.0.109900000000169"
    },
    {
      "id": "folio_circulation-11.1.109900000000200",
      "name": "folio_circulation",
      "version": "11.1.109900000000200"
    },
    {
      "id": "folio_plugin-find-user-8.0.10990000000086",
      "name": "folio_plugin-find-user",
      "version": "8.0.10990000000086"
    },
    {
      "id": "folio_data-export-7.0.10990000000085",
      "name": "folio_data-export",
      "version": "7.0.10990000000085"
    },
    {
      "id": "folio_export-manager-5.0.109900000000115",
      "name": "folio_export-manager",
      "version": "5.0.109900000000115"
    },
    {
      "id": "folio_plugin-bursar-export-5.0.109900000000220",
      "name": "folio_plugin-bursar-export",
      "version": "5.0.109900000000220"
    },
    {
      "id": "folio_remote-storage-7.0.10990000000057",
      "name": "folio_remote-storage",
      "version": "7.0.10990000000057"
    },
    {
      "id": "folio_circulation-log-6.0.109900000000103",
      "name": "folio_circulation-log",
      "version": "6.0.109900000000103"
    },
    {
      "id": "folio_calendar-12.0.109900000000172",
      "name": "folio_calendar",
      "version": "12.0.109900000000172"
    },
    {
      "id": "folio_courses-7.0.309900000000136",
      "name": "folio_courses",
      "version": "7.0.309900000000136"
    },
    {
      "id": "folio_requests-13.0.109900000000303",
      "name": "folio_requests",
      "version": "13.0.109900000000303"
    },
    {
      "id": "folio_data-import-9.0.109900000000155",
      "name": "folio_data-import",
      "version": "9.0.109900000000155"
    },
    {
      "id": "folio_plugin-find-import-profile-9.0.10990000000053",
      "name": "folio_plugin-find-import-profile",
      "version": "9.0.10990000000053"
    },
    {
      "id": "folio_tenant-settings-11.0.109900000000113",
      "name": "folio_tenant-settings",
      "version": "11.0.109900000000113"
    },
    {
      "id": "folio_handler-stripes-registry-3.1.10990000000089",
      "name": "folio_handler-stripes-registry",
      "version": "3.1.10990000000089"
    },
    {
      "id": "folio_myprofile-11.0.109900000000131",
      "name": "folio_myprofile",
      "version": "11.0.109900000000131"
    },
    {
      "id": "folio_plugin-find-authority-5.1.10990000000088",
      "name": "folio_plugin-find-authority",
      "version": "5.1.10990000000088"
    },
    {
      "id": "folio_users-13.0.10990000000799",
      "name": "folio_users",
      "version": "13.0.10990000000799"
    },
    {
      "id": "folio_serials-management-2.1.109900000000813",
      "name": "folio_serials-management",
      "version": "2.1.109900000000813"
    },
    {
      "id": "folio_stripes-marc-components-2.0.109900000000173",
      "name": "folio_stripes-marc-components",
      "version": "2.0.109900000000173"
    },
    {
      "id": "folio_stripes-inventory-components-2.1.109000000764",
      "name": "folio_stripes-inventory-components",
      "version": "2.1.109000000764"
    }
  ],
  "moduleDescriptors": [
    {
      "id": "mod-audit-3.0.0-SNAPSHOT.225",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
        {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
        {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
        {
          "id": "pubsub-publish",
          "version": "0.1"
        },
        {
          "id": "users",
          "version": "16.4"
        },
        {
          "id": "template-engine",
          "version": "2.2"
        },
        {
          "id": "inventory",
          "version": "14.1"
        },
        {
          "id": "cancellation-reason-storage",
          "version": "1.2"
        }
      ],
      "provides": [
        {
          "id": "audit",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data",
              "permissionsRequired": [
                "audit.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/audit-data",
              "permissionsRequired": [
                "audit.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/{id}",
              "permissionsRequired": [
                "audit.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/audit-data/{id}",
              "permissionsRequired": [
                "audit.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/audit-data/{id}",
              "permissionsRequired": [
                "audit.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "acquisition-order-events",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/acquisition/order/{id}",
              "permissionsRequired": [
                "acquisition.order.events.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "acquisition-order-line-events",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/acquisition/order-line/{id}",
              "permissionsRequired": [
                "acquisition.order-line.events.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "acquisition-piece-events",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/acquisition/piece/{id}",
              "permissionsRequired": [
                "acquisition.piece.events.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/acquisition/piece/{id}/status-change-history",
              "permissionsRequired": [
                "acquisition.piece.events.history.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "acquisition-invoice-events",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/acquisition/invoice/{id}",
              "permissionsRequired": [
                "acquisition.invoice.events.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "acquisition-invoice-line-events",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/acquisition/invoice-line/{id}",
              "permissionsRequired": [
                "acquisition.invoice-line.events.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "acquisition-organization-events",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/acquisition/organization/{id}",
              "permissionsRequired": [
                "acquisition.organization.events.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "circulation-logs",
          "version": "1.3",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/circulation/logs",
              "permissionsRequired": [
                "circulation-logs.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "audit-data-event-handlers",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/audit/handlers/log-record",
              "permissionsRequired": [
                "audit.pub-sub-handlers.log-record-event.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get",
                "users.collection.get",
                "templates.item.get",
                "inventory.items.item.get",
                "inventory-storage.holdings.item.get",
                "circulation-storage.cancellation-reasons.collection.get",
                "circulation-item.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "audit-config",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit/config/groups",
              "permissionsRequired": [
                "audit.config.groups.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit/config/groups/{groupId}/settings",
              "permissionsRequired": [
                "audit.config.groups.settings.collection.get"
              ],
              "permissionsDesired": [
                "audit.config.groups.settings.*"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/audit/config/groups/{groupId}/settings/{settingId}",
              "permissionsRequired": [
                "audit.config.groups.settings.item.put"
              ],
              "permissionsDesired": [
                "audit.config.groups.settings.*"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "audit-inventory",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/inventory/instance/{entityId}",
              "permissionsRequired": [
                "audit.inventory.instance.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/inventory/holdings/{entityId}",
              "permissionsRequired": [
                "audit.inventory.holdings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/inventory/item/{entityId}",
              "permissionsRequired": [
                "audit.inventory.item.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "audit-marc",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/marc/bib/{entityId}",
              "permissionsRequired": [
                "audit.marc.bib.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/audit-data/marc/authority/{entityId}",
              "permissionsRequired": [
                "audit.marc.authority.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/audit-data/cleanup/timer",
              "schedule": {
                "cron": "0 2 * * *"
              },
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "circulation-item",
          "version": "1.0"
        },
        {
          "id": "item-storage",
          "version": "11.0"
        },
        {
          "id": "holdings-storage",
          "version": "8.0"
        },
        {
          "id": "instance-storage",
          "version": "11.1"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "audit.collection.get",
          "replaces": [],
          "displayName": "Audit - get audit records",
          "description": "Get audit records",
          "subPermissions": []
        },
        {
          "permissionName": "audit.item.get",
          "replaces": [],
          "displayName": "Audit - get specific audit record",
          "description": "Get specific audit record",
          "subPermissions": []
        },
        {
          "permissionName": "audit.item.post",
          "replaces": [],
          "displayName": "Audit - create a new audit record",
          "description": "Create a new audit record",
          "subPermissions": []
        },
        {
          "permissionName": "audit.item.put",
          "replaces": [],
          "displayName": "Audit - update specific audit record",
          "description": "Update specific audit record",
          "subPermissions": []
        },
        {
          "permissionName": "audit.item.delete",
          "replaces": [],
          "displayName": "Audit - delete specific audit record",
          "description": "Delete specific audit record",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-logs.collection.get",
          "replaces": [],
          "displayName": "Circulation audit logs - get circulation log records",
          "description": "Get circulation audit logs records",
          "subPermissions": []
        },
        {
          "permissionName": "acquisition.order.events.get",
          "replaces": [],
          "displayName": "Acquisition order events - get order change events",
          "description": "Get order change events",
          "subPermissions": []
        },
        {
          "permissionName": "acquisition.order-line.events.get",
          "replaces": [],
          "displayName": "Acquisition order-line events - get order-line change events",
          "description": "Get order-line change events",
          "subPermissions": []
        },
        {
          "permissionName": "acquisition.piece.events.get",
          "replaces": [],
          "displayName": "Acquisition piece events - get piece change events",
          "description": "Get piece change events",
          "subPermissions": []
        },
        {
          "permissionName": "acquisition.piece.events.history.get",
          "replaces": [],
          "displayName": "Acquisition piece status change history events - get piece status change events",
          "description": "Get piece status change events",
          "subPermissions": []
        },
        {
          "permissionName": "acquisition.invoice.events.get",
          "replaces": [],
          "displayName": "Acquisition invoice events - get invoice change events",
          "description": "Get invoice change events",
          "subPermissions": []
        },
        {
          "permissionName": "acquisition.invoice-line.events.get",
          "replaces": [],
          "displayName": "Acquisition invoice-line events - get invoice-line change events",
          "description": "Get invoice-line change events",
          "subPermissions": []
        },
        {
          "permissionName": "acquisition.organization.events.get",
          "replaces": [],
          "displayName": "Acquisition organization events - get organization change events",
          "description": "Get organization change events",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.collection.get",
          "replaces": [],
          "displayName": "Audit Configuration - get settings groups",
          "description": "Get settings groups",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.collection.get",
          "replaces": [],
          "displayName": "Audit Configuration - get settings for a group",
          "description": "Get settings for a group",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.audit.inventory.collection.get",
          "replaces": [],
          "displayName": "Audit Configuration - get settings for a audit inventory group",
          "description": "Get settings for a audit inventory group",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.audit.authority.collection.get",
          "replaces": [],
          "displayName": "Audit Configuration - get settings for a audit authority group",
          "description": "Get settings for a audit authority group",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.item.put",
          "replaces": [],
          "displayName": "Audit Configuration - update setting for a group",
          "description": "Update setting for a group",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.audit.inventory.records.page.size.item.put",
          "replaces": [],
          "displayName": "Audit Configuration - update setting for a audit inventory records page size",
          "description": "Update setting for a audit inventory records page size",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.audit.authority.records.page.size.item.put",
          "replaces": [],
          "displayName": "Audit Configuration - update setting for a audit authority records page size",
          "description": "Update setting for a audit authority records page size",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.audit.inventory.records.retention.period.item.put",
          "replaces": [],
          "displayName": "Audit Configuration - update setting for a audit inventory records retention period",
          "description": "Update setting for a audit inventory records retention period",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.audit.authority.records.retention.period.item.put",
          "replaces": [],
          "displayName": "Audit Configuration - update setting for a audit authority records retention period",
          "description": "Update setting for a audit authority records retention period",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.audit.inventory.enabled.item.put",
          "replaces": [],
          "displayName": "Audit Configuration - enable/disable audit inventory records",
          "description": "Enable/disable audit inventory records",
          "subPermissions": []
        },
        {
          "permissionName": "audit.config.groups.settings.audit.authority.enabled.item.put",
          "replaces": [],
          "displayName": "Audit Configuration - enable/disable audit authority records",
          "description": "Enable/disable audit authority records",
          "subPermissions": []
        },
        {
          "permissionName": "audit.inventory.instance.collection.get",
          "replaces": [],
          "displayName": "Inventory Audit - get instance events",
          "description": "Get inventory instance audit events",
          "subPermissions": []
        },
        {
          "permissionName": "audit.inventory.holdings.collection.get",
          "replaces": [],
          "displayName": "Inventory Audit - get holdings events",
          "description": "Get inventory holdings audit events",
          "subPermissions": []
        },
        {
          "permissionName": "audit.inventory.item.collection.get",
          "replaces": [],
          "displayName": "Inventory Audit - get item events",
          "description": "Get inventory item audit events",
          "subPermissions": []
        },
        {
          "permissionName": "audit.marc.bib.collection.get",
          "replaces": [],
          "displayName": "Marc Audit - get Marc Bib events",
          "description": "Get Marc Bib audit events",
          "subPermissions": []
        },
        {
          "permissionName": "audit.marc.authority.collection.get",
          "replaces": [],
          "displayName": "Marc Audit - get Marc Authority events",
          "description": "Get Marc Authority audit events",
          "subPermissions": []
        },
        {
          "permissionName": "audit.all",
          "replaces": [],
          "displayName": "Audit - all permissions",
          "description": "Audit - all permissions",
          "subPermissions": [
            "audit.collection.get",
            "audit.item.get",
            "audit.item.post",
            "audit.item.put",
            "audit.item.delete",
            "circulation-logs.collection.get",
            "acquisition.order.events.get",
            "acquisition.order-line.events.get",
            "acquisition.piece.events.get",
            "acquisition.piece.events.history.get",
            "acquisition.invoice.events.get",
            "acquisition.invoice-line.events.get",
            "acquisition.organization.events.get",
            "audit.inventory.instance.collection.get",
            "audit.inventory.holdings.collection.get",
            "audit.inventory.item.collection.get",
            "audit.marc.bib.collection.get",
            "audit.marc.authority.collection.get"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-audit:3.0.0-SNAPSHOT.225",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 715827883,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "Audit Module"
    },
    {
      "id": "mod-batch-print-1.3.1-SNAPSHOT.16",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "batch-print",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/print/entries",
              "permissionsRequired": [
                "batch-print.entries.item.post"
              ],
              "permissionsDesired": [
                "batch-print.print.write"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/print/entries",
              "permissionsRequired": [
                "batch-print.entries.collection.get"
              ],
              "permissionsDesired": [
                "batch-print.print.read"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/print/entries",
              "permissionsRequired": [
                "batch-print.entries.collection.delete"
              ],
              "permissionsDesired": [
                "batch-print.print.write"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/print/entries/{id}",
              "permissionsRequired": [
                "batch-print.entries.item.get"
              ],
              "permissionsDesired": [
                "batch-print.print.read"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/print/entries/{id}",
              "permissionsRequired": [
                "batch-print.entries.item.put"
              ],
              "permissionsDesired": [
                "batch-print.print.write"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/print/entries/{id}",
              "permissionsRequired": [
                "batch-print.entries.item.delete"
              ],
              "permissionsDesired": [
                "batch-print.print.write"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/mail",
              "permissionsRequired": [
                "batch-print.entries.mail.post"
              ],
              "permissionsDesired": [
                "batch-print.print.write"
              ],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/print/batch-creation",
              "schedule": {
                "cron": "1 6 * * *",
                "zone": "CET"
              },
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "batch-print.print.write",
                "batch-print.print.read"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "batch-print.print.write",
          "replaces": [],
          "displayName": "batch print - write print entries",
          "description": "Write print entries",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "batch-print.print.read",
          "replaces": [],
          "displayName": "batch print - read print entries",
          "description": "Read print entries",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "batch-print.entries.mail.post",
          "replaces": [],
          "displayName": "batch print - send mail",
          "description": "Send mail to print",
          "subPermissions": []
        },
        {
          "permissionName": "batch-print.entries.item.post",
          "replaces": [],
          "displayName": "batch print - create print entry",
          "description": "Create print entry",
          "subPermissions": []
        },
        {
          "permissionName": "batch-print.entries.item.put",
          "replaces": [],
          "displayName": "batch print - update print entry",
          "description": "Update print entry",
          "subPermissions": []
        },
        {
          "permissionName": "batch-print.entries.collection.get",
          "replaces": [],
          "displayName": "batch print - get print entries",
          "description": "Get batch print",
          "subPermissions": []
        },
        {
          "permissionName": "batch-print.entries.item.get",
          "replaces": [],
          "displayName": "batch print - get print entry",
          "description": "Get print entry",
          "subPermissions": []
        },
        {
          "permissionName": "batch-print.entries.item.delete",
          "replaces": [],
          "displayName": "batch print - delete print entry",
          "description": "Delete print entry",
          "subPermissions": []
        },
        {
          "permissionName": "batch-print.entries.collection.delete",
          "replaces": [
            "batch-print.entries.item.delete"
          ],
          "displayName": "batch print - delete print entries",
          "description": "Delete print entries",
          "subPermissions": []
        },
        {
          "permissionName": "batch-print.entries.all",
          "replaces": [],
          "displayName": "batch print - all batch print permissions",
          "description": "All batch print permissions",
          "subPermissions": [
            "batch-print.entries.item.post",
            "batch-print.entries.collection.get",
            "batch-print.entries.item.get",
            "batch-print.entries.item.put",
            "batch-print.entries.item.delete",
            "batch-print.entries.collection.delete",
            "batch-print.entries.mail.post",
            "batch-print.print.write",
            "batch-print.print.read"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-batch-print:1.3.1-SNAPSHOT.16",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 2147483648,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "Batch printing"
    },
    {
      "id": "mod-calendar-3.4.0-SNAPSHOT.187",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [
        {
          "id": "calendar",
          "version": "5.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/calendar/calendars",
              "permissionsRequired": [
                "calendar.endpoint.calendars.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/calendar/calendars",
              "permissionsRequired": [
                "calendar.endpoint.calendars.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/calendar/calendars",
              "permissionsRequired": [
                "calendar.endpoint.calendars.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/calendar/calendars/{calendarId}",
              "permissionsRequired": [
                "calendar.endpoint.calendars.calendarId.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/calendar/calendars/{calendarId}",
              "permissionsRequired": [
                "calendar.endpoint.calendars.calendarId.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/calendar/calendars/{calendarId}",
              "permissionsRequired": [
                "calendar.endpoint.calendars.calendarId.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/calendar/dates/{servicePointId}/surrounding-openings",
              "permissionsRequired": [
                "calendar.endpoint.calendars.surroundingOpenings.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/calendar/dates/{servicePointId}/all-openings",
              "permissionsRequired": [
                "calendar.endpoint.calendars.allOpenings.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "calendar.view",
          "replaces": [],
          "displayName": "Access and query calendar information",
          "description": "",
          "subPermissions": [
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "calendar.endpoint.calendars.calendarId.get",
            "calendar.endpoint.calendars.get"
          ],
          "visible": false
        },
        {
          "permissionName": "calendar.create",
          "replaces": [],
          "displayName": "Create new calendars",
          "description": "",
          "subPermissions": [
            "calendar.view",
            "calendar.endpoint.calendars.post"
          ],
          "visible": false
        },
        {
          "permissionName": "calendar.update",
          "replaces": [],
          "displayName": "Edit existing calendars",
          "description": "",
          "subPermissions": [
            "calendar.view",
            "calendar.endpoint.calendars.calendarId.put"
          ],
          "visible": false
        },
        {
          "permissionName": "calendar.delete",
          "replaces": [],
          "displayName": "Delete calendars",
          "description": "",
          "subPermissions": [
            "calendar.view",
            "calendar.endpoint.calendars.delete",
            "calendar.endpoint.calendars.calendarId.delete"
          ],
          "visible": false
        },
        {
          "permissionName": "calendar.endpoint.calendars.get",
          "replaces": [],
          "displayName": "Make GET requests to /calendar/calendars",
          "description": "",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "calendar.endpoint.calendars.surroundingOpenings.get",
          "replaces": [
            "calendar.endpoint.dates.get"
          ],
          "displayName": "Make GET requests to /calendar/dates/{servicePointID}/surrounding-openings",
          "description": "",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "calendar.endpoint.calendars.allOpenings.get",
          "replaces": [
            "calendar.endpoint.dates.get"
          ],
          "displayName": "Make GET requests to /calendar/dates/{servicePointId}/all-openings",
          "description": "",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "calendar.endpoint.calendars.post",
          "replaces": [],
          "displayName": "Make POST requests to /calendar/calendars",
          "description": "",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "calendar.endpoint.calendars.delete",
          "replaces": [],
          "displayName": "Make DELETE requests to /calendar/calendars",
          "description": "",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "calendar.endpoint.calendars.calendarId.get",
          "replaces": [],
          "displayName": "Make GET requests to /calendar/calendars/{id}",
          "description": "",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "calendar.endpoint.calendars.calendarId.put",
          "replaces": [],
          "displayName": "Make PUT requests to /calendar/calendars/{id}",
          "description": "",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "calendar.endpoint.calendars.calendarId.delete",
          "replaces": [],
          "displayName": "Make DELETE requests to /calendar/calendars/{id}",
          "description": "",
          "subPermissions": [],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-calendar:3.4.0-SNAPSHOT.187",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 514572800,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "localhost"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          }
        ],
        "dockerCMD": []
      },
      "name": "Calendar for Service Point Opening Hours"
    },
    {
      "id": "mod-circulation-24.5.0-SNAPSHOT.1331",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "loan-storage",
          "version": "7.3"
        },
        {
          "id": "circulation-rules-storage",
          "version": "1.0"
        },
        {
          "id": "item-storage",
          "version": "8.7 9.0 10.0 11.0"
        },
        {
          "id": "instance-storage",
          "version": "4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0"
        },
        {
          "id": "holdings-storage",
          "version": "1.3 2.0 3.0 4.0 5.0 6.0 7.0 8.0"
        },
        {
          "id": "request-storage",
          "version": "6.2"
        },
        {
          "id": "request-storage-batch",
          "version": "2.0"
        },
        {
          "id": "users",
          "version": "14.2 15.0 16.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "material-types",
          "version": "2.0"
        },
        {
          "id": "loan-policy-storage",
          "version": "1.2 2.0"
        },
        {
          "id": "request-policy-storage",
          "version": "1.0"
        },
        {
          "id": "fixed-due-date-schedules-storage",
          "version": "2.0"
        },
        {
          "id": "service-points",
          "version": "3.0"
        },
        {
          "id": "calendar",
          "version": "5.0"
        },
        {
          "id": "patron-notice-policy-storage",
          "version": "0.11"
        },
        {
          "id": "patron-notice",
          "version": "1.0"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "cancellation-reason-storage",
          "version": "1.1"
        },
        {
          "id": "loan-types",
          "version": "2.2"
        },
        {
          "id": "scheduled-notice-storage",
          "version": "0.6"
        },
        {
          "id": "feesfines",
          "version": "19.0"
        },
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "patron-action-session-storage",
          "version": "0.3"
        },
        {
          "id": "check-in-storage",
          "version": "0.2"
        },
        {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
        {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
        {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
        {
          "id": "pubsub-publish",
          "version": "0.1"
        },
        {
          "id": "automated-patron-blocks",
          "version": "0.1"
        },
        {
          "id": "notes",
          "version": "4.0"
        },
        {
          "id": "actual-cost-record-storage",
          "version": "0.6"
        },
        {
          "id": "settings",
          "version": "1.0"
        },
        {
          "id": "circulation-settings-storage",
          "version": "1.0"
        },
        {
          "id": "print-events-storage",
          "version": "1.0"
        },
        {
          "id": "actual-cost-fee-fine",
          "version": "0.3"
        },
        {
          "id": "anonymize-storage-loans",
          "version": "0.1"
        },
        {
          "id": "identifier-types",
          "version": "1.2"
        },
        {
          "id": "template-engine",
          "version": "2.2"
        }
      ],
      "provides": [
        {
          "id": "requests-reports",
          "version": "0.8",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/requests-reports/hold-shelf-clearance/{id}",
              "permissionsRequired": [
                "circulation.requests.hold-shelf-clearance-report.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.hold-shelf-clearance-report.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-reports",
          "version": "0.4",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-reports/items-in-transit",
              "permissionsRequired": [
                "circulation.inventory.items-in-transit-report.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.inventory.items-in-transit-report.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "pick-slips",
          "version": "0.4",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/pick-slips/{servicePointId}",
              "permissionsRequired": [
                "circulation.pick-slips.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.pick-slips.get",
                "circulation.settings.collection.get",
                "circulation.settings.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "search-slips",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/search-slips/{servicePointId}",
              "permissionsRequired": [
                "circulation.search-slips.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.search-slips.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "request-move",
          "version": "0.7",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/requests/{id}/move",
              "permissionsRequired": [
                "circulation.requests.item.move.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.item.move.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "loan-anonymization",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/loan-anonymization/by-user/{userId}",
              "permissionsRequired": [
                "circulation.loans.collection.anonymize.user.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.loans.anonymize"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "declare-item-lost",
          "version": "0.3",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/loans/{id}/declare-item-lost",
              "permissionsRequired": [
                "circulation.loans.declare-item-lost.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.loans.declare-item-lost.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "change-due-date",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/loans/{id}/change-due-date",
              "permissionsRequired": [
                "circulation.loans.change-due-date.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "perms.circulation.loans.change-due-date.post",
                "configuration.entries.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "claim-item-returned",
          "version": "0.2",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/loans/{id}/claim-item-returned",
              "permissionsRequired": [
                "circulation.loans.claim-item-returned.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "perms.circulation.loans.claim-item-returned.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/loans/{id}/declare-claimed-returned-item-as-missing",
              "permissionsRequired": [
                "circulation.loans.declare-claimed-returned-item-as-missing.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.loans.declare-claimed-returned-item-as-missing.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-items",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/items-by-instance",
              "permissionsRequired": [
                "circulation.items-by-instance.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "search.instances.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "add-info",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/loans/{id}/add-info",
              "permissionsRequired": [
                "circulation.loans.add-info.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.loans.add-info.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "circulation",
          "version": "14.7",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/check-out-by-barcode",
              "permissionsRequired": [
                "circulation.check-out-by-barcode.post"
              ],
              "permissionsDesired": [
                "circulation.override-patron-block.post",
                "circulation.override-item-limit-block.post",
                "circulation.override-item-not-loanable-block.post"
              ],
              "modulePermissions": [
                "modperms.circulation.check-out-by-barcode.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/check-out-by-barcode-dry-run",
              "permissionsRequired": [
                "circulation.check-out-by-barcode-dry-run.post"
              ],
              "permissionsDesired": [
                "circulation.override-patron-block.post",
                "circulation.override-item-limit-block.post",
                "circulation.override-item-not-loanable-block.post"
              ],
              "modulePermissions": [
                "modperms.circulation.check-out-by-barcode-dry-run.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/check-in-by-barcode",
              "permissionsRequired": [
                "circulation.check-in-by-barcode.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.check-in-by-barcode.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/renew-by-barcode",
              "permissionsRequired": [
                "circulation.renew-by-barcode.post"
              ],
              "permissionsDesired": [
                "circulation.override-patron-block.post",
                "circulation.override-renewal-block.post"
              ],
              "modulePermissions": [
                "circulation.renew-loan.all"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/renew-by-id",
              "permissionsRequired": [
                "circulation.renew-by-id.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.renew-loan.all"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/pickup-by-barcode-for-use-at-location",
              "permissionsRequired": [
                "circulation.pickup-by-barcode-for-use-at-location.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.usage-at-location.all"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/hold-by-barcode-for-use-at-location",
              "permissionsRequired": [
                "circulation.hold-by-barcode-for-use-at-location.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.usage-at-location.all"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/loans",
              "permissionsRequired": [
                "circulation.loans.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.loans.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/loans",
              "permissionsRequired": [
                "circulation.loans.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.loans.item.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/circulation/loans",
              "permissionsRequired": [
                "circulation.loans.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.loans.collection.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/loans/{id}",
              "permissionsRequired": [
                "circulation.loans.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.loans.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/circulation/loans/{id}",
              "permissionsRequired": [
                "circulation.loans.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.loans.item.put",
                "overdue-fines-policies.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/circulation/loans/{id}",
              "permissionsRequired": [
                "circulation.loans.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.loans.item.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/requests",
              "permissionsRequired": [
                "circulation.requests.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/requests",
              "permissionsRequired": [
                "circulation.requests.item.post"
              ],
              "permissionsDesired": [
                "circulation.override-patron-block.post"
              ],
              "modulePermissions": [
                "modperms.circulation.requests.item.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/circulation/requests",
              "permissionsRequired": [
                "circulation.requests.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/requests/{id}",
              "permissionsRequired": [
                "circulation.requests.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/circulation/requests/{id}",
              "permissionsRequired": [
                "circulation.requests.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/circulation/requests/{id}",
              "permissionsRequired": [
                "circulation.requests.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.item.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/requests/queue/item/{id}",
              "permissionsRequired": [
                "circulation.requests.queue-item.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.queue.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/requests/queue/item/{id}/reorder",
              "permissionsRequired": [
                "circulation.requests.queue.item-reorder.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.queue.reorder.collection.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/requests/queue/instance/{id}",
              "permissionsRequired": [
                "circulation.requests.queue-instance.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.queue.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/requests/queue/instance/{id}/reorder",
              "permissionsRequired": [
                "circulation.requests.queue.instance-reorder.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.queue.reorder.collection.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/requests/instances",
              "permissionsRequired": [
                "circulation.requests.instances.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.requests.instances.item.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "circulation-rules",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules",
              "permissionsRequired": [
                "circulation.rules.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/circulation/rules",
              "permissionsRequired": [
                "circulation.rules.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/loan-policy",
              "permissionsRequired": [
                "circulation.rules.loan-policy.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/loan-policy-all",
              "permissionsRequired": [
                "circulation.rules.loan-policy-all.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/overdue-fine-policy",
              "permissionsRequired": [
                "circulation.rules.overdue-fine-policy.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/overdue-fine-policy-all",
              "permissionsRequired": [
                "circulation.rules.overdue-fine-policy-all.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/lost-item-policy",
              "permissionsRequired": [
                "circulation.rules.lost-item-policy.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/lost-item-policy-all",
              "permissionsRequired": [
                "circulation.rules.lost-item-all.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/request-policy",
              "permissionsRequired": [
                "circulation.rules.request-policy.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/request-policy-all",
              "permissionsRequired": [
                "circulation.rules.request-policy-all.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/notice-policy",
              "permissionsRequired": [
                "circulation.rules.notice-policy.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/rules/notice-policy-all",
              "permissionsRequired": [
                "circulation.rules.notice-policy-all.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-rules.get",
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "patron-action-session",
          "version": "0.2",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/end-patron-action-session",
              "permissionsRequired": [
                "circulation.end-patron-action-session.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "patron-action-session-storage.patron-action-sessions.item.get",
                "patron-action-session-storage.patron-action-sessions.collection.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation-storage.loan-policies.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.patron-notice-policies.item.get",
                "patron-notice.post",
                "patron-action-session-storage.patron-action-sessions.item.delete",
                "pubsub.publish.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "allowed-service-points",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/requests/allowed-service-points",
              "permissionsRequired": [
                "circulation.requests.allowed-service-points.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get",
                "users.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.request-policy.get",
                "circulation.rules.request-policy-all.get",
                "circulation-storage.request-policies.item.get",
                "circulation-storage.request-policies.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "mod-settings.entries.item.get",
                "mod-settings.entries.collection.get",
                "mod-settings.global.read.circulation"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "circulation-settings",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/settings",
              "permissionsRequired": [
                "circulation.settings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-settings.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation/settings/{id}",
              "permissionsRequired": [
                "circulation.settings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-settings.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/circulation/settings/{id}",
              "permissionsRequired": [
                "circulation.settings.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-settings.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/settings",
              "permissionsRequired": [
                "circulation.settings.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-settings.item.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/circulation/settings/{id}",
              "permissionsRequired": [
                "circulation.settings.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.circulation-settings.item.delete"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "print-events",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/print-events-entry",
              "permissionsRequired": [
                "circulation.print-events-entry.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "print-events-storage.print-events-entry.item.post",
                "circulation-storage.circulation-settings.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/notice-session-expiration-by-timeout",
              "unit": "minute",
              "delay": "3",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "patron-action-session-storage.expired-session-patron-ids.collection.get",
                "patron-action-session-storage.patron-action-sessions.item.get",
                "patron-action-session-storage.patron-action-sessions.collection.get",
                "circulation-storage.loans.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation-storage.loan-policies.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.patron-notice-policies.item.get",
                "patron-notice.post",
                "patron-action-session-storage.patron-action-sessions.item.delete",
                "configuration.entries.collection.get",
                "pubsub.publish.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/actual-cost-expiration-by-timeout",
              "unit": "minute",
              "delay": "20",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.loans.item.put",
                "inventory-storage.items.item.put",
                "actual-cost-record-storage.actual-cost-records.item.get",
                "actual-cost-record-storage.actual-cost-records.collection.get",
                "actual-cost-record-storage.actual-cost-records.item.put",
                "accounts.item.get",
                "accounts.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "lost-item-fees-policies.item.get",
                "lost-item-fees-policies.collection.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/loan-scheduled-notices-processing",
              "unit": "minute",
              "delay": "5",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation.rules.loan-policy.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "users.item.get",
                "addresstypes.collection.get",
                "templates.item.get",
                "pubsub.publish.post",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.fixed-due-date-schedules.item.get",
                "circulation-storage.fixed-due-date-schedules.collection.get",
                "accounts.item.get",
                "accounts.collection.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/due-date-not-real-time-scheduled-notices-processing",
              "unit": "minute",
              "delay": "2",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "circulation-storage.fixed-due-date-schedules.collection.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation.rules.loan-policy.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "users.item.get",
                "addresstypes.collection.get",
                "templates.item.get",
                "pubsub.publish.post",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.loans-history.collection.get",
                "mod-settings.global.read.stripes-core.prefs.manage"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/request-scheduled-notices-processing",
              "unit": "minute",
              "delay": "2",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation.internal.fetch-items.collection.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.requests.item.get",
                "circulation-storage.requests.collection.get",
                "patron-notice.post",
                "users.item.get",
                "addresstypes.collection.get",
                "usergroups.collection.get",
                "usergroups.item.get",
                "configuration.entries.collection.get",
                "pubsub.publish.post",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "templates.item.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/fee-fine-scheduled-notices-processing",
              "unit": "minute",
              "delay": "2",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "scheduled-notice-storage.scheduled-notices.item.get",
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "accounts.item.get",
                "accounts.collection.get",
                "feefineactions.item.get",
                "feefineactions.collection.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.internal.fetch-items.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "pubsub.publish.post",
                "templates.item.get",
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/overdue-fine-scheduled-notices-processing",
              "unit": "minute",
              "delay": "2",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "scheduled-notice-storage.scheduled-notices.item.get",
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "patron-action-session-storage.patron-action-sessions.item.get",
                "patron-action-session-storage.patron-action-sessions.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "accounts.item.get",
                "accounts.collection.get",
                "feefineactions.item.get",
                "feefineactions.collection.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation-storage.loans-history.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "pubsub.publish.post",
                "templates.item.get",
                "circulation-storage.loans-history.collection.get",
                "mod-settings.global.read.stripes-core.prefs.manage"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/fee-fine-not-real-time-scheduled-notices-processing",
              "unit": "minute",
              "delay": "2",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "scheduled-notice-storage.scheduled-notices.item.get",
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "accounts.item.get",
                "accounts.collection.get",
                "feefineactions.item.get",
                "feefineactions.collection.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation.internal.fetch-items.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "pubsub.publish.post",
                "templates.item.get",
                "circulation-storage.loans-history.collection.get",
                "mod-settings.global.read.stripes-core.prefs.manage"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/scheduled-anonymize-processing",
              "unit": "minute",
              "delay": "60",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.loans.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "circulation-storage.request-policies.item.get",
                "circulation-storage.fixed-due-date-schedules.item.get",
                "circulation-storage.fixed-due-date-schedules.collection.get",
                "circulation-storage.patron-notice-policies.item.get",
                "circulation.rules.loan-policy.get",
                "circulation.rules.request-policy.get",
                "circulation.rules.notice-policy.get",
                "inventory-storage.items.item.put",
                "circulation.internal.fetch-items.collection.get",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "proxiesfor.collection.get",
                "configuration.entries.collection.get",
                "scheduled-notice-storage.scheduled-notices.collection.delete",
                "scheduled-notice-storage.scheduled-notices.item.post",
                "patron-notice.post",
                "anonymize-storage-loans.post",
                "accounts.collection.get",
                "feefineactions.collection.get",
                "pubsub.publish.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/scheduled-age-to-lost",
              "unit": "minute",
              "delay": "30",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.loans.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation-storage.patron-notice-policies.collection.get",
                "circulation-storage.patron-notice-policies.item.get",
                "inventory-storage.items.item.put",
                "circulation.internal.fetch-items.collection.get",
                "lost-item-fees-policies.item.get",
                "lost-item-fees-policies.collection.get",
                "pubsub.publish.post",
                "users.item.get",
                "users.collection.get",
                "addresstypes.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/scheduled-age-to-lost-fee-charging",
              "unit": "minute",
              "delay": "35",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.loans.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "inventory-storage.items.item.put",
                "circulation.internal.fetch-items.collection.get",
                "lost-item-fees-policies.item.get",
                "lost-item-fees-policies.collection.get",
                "owners.collection.get",
                "feefines.collection.get",
                "accounts.item.post",
                "feefineactions.item.post",
                "pubsub.publish.post",
                "users.item.get",
                "users.collection.get",
                "usergroups.collection.get",
                "usergroups.item.get",
                "addresstypes.collection.get",
                "circulation-storage.circulation-rules.get",
                "circulation-storage.patron-notice-policies.item.get",
                "circulation-storage.patron-notice-policies.collection.get",
                "circulation.rules.notice-policy.get",
                "scheduled-notice-storage.scheduled-notices.item.post",
                "actual-cost-record-storage.actual-cost-records.item.post",
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/scheduled-digital-reminders-processing",
              "schedule": {
                "cron": "1 0 * * *",
                "zone": "CET"
              },
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "scheduled-notice-storage.scheduled-notices.collection.get",
                "scheduled-notice-storage.scheduled-notices.item.delete",
                "scheduled-notice-storage.scheduled-notices.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.item.put",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get",
                "overdue-fines-policies.item.get",
                "circulation.internal.fetch-items.collection.get",
                "circulation.rules.loan-policy.get",
                "configuration.entries.collection.get",
                "patron-notice.post",
                "users.item.get",
                "addresstypes.collection.get",
                "templates.item.get",
                "owners.collection.get",
                "pubsub.publish.post",
                "circulation-storage.circulation-rules.get",
                "circulation.rules.notice-policy.get",
                "circulation-storage.fixed-due-date-schedules.item.get",
                "circulation-storage.fixed-due-date-schedules.collection.get",
                "accounts.item.get",
                "accounts.collection.get",
                "accounts.item.post",
                "feefineactions.item.post",
                "circulation-storage.loans-history.collection.get",
                "calendar.endpoint.calendars.surroundingOpenings.get",
                "calendar.endpoint.calendars.allOpenings.get",
                "mod-settings.global.read.stripes-core.prefs.manage"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "circulation-event-handlers",
          "version": "0.2",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/handlers/loan-related-fee-fine-closed",
              "permissionsRequired": [
                "circulation.handlers.loan-related-fee-fine-closed.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.handlers.loan-related-fee-fine-closed.post",
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation/handlers/fee-fine-balance-changed",
              "permissionsRequired": [
                "circulation.handlers.fee-fine-balance-changed.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.circulation.handlers.fee-fine-balance-changed.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post",
                "circulation-storage.circulation-rules.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "circulation-item",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "circulation.print-events-entry.item.post",
          "replaces": [],
          "displayName": "circulation - create print events",
          "description": "create print event logs",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.queue.item-reorder.collection.post",
          "replaces": [
            "circulation.requests.queue.reorder.collection.post"
          ],
          "displayName": "circulation - reorder queue for an item",
          "description": "change request positions in queue for an item",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.queue.instance-reorder.collection.post",
          "replaces": [],
          "displayName": "circulation - reorder queue for an instance",
          "description": "change request positions in queue for an instance",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.check-out-by-barcode.post",
          "replaces": [],
          "displayName": "circulation - check out item by barcode",
          "description": "check out an item using barcodes for item and loanee",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.check-out-by-barcode-dry-run.post",
          "replaces": [],
          "displayName": "circulation - check out item by barcode dry run",
          "description": "dry run of check out an item using barcodes for item and user",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.check-in-by-barcode.post",
          "replaces": [],
          "displayName": "circulation - checkin loan by barcode",
          "description": "checkin a loan using barcodes for item and loanee",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.renew-by-barcode.post",
          "replaces": [],
          "displayName": "circulation - renew loan by barcode",
          "description": "renew a loan using barcodes for item and loanee",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.renew-by-id.post",
          "replaces": [],
          "displayName": "circulation - renew loan using id",
          "description": "renew a loan using IDs for item and loanee",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.pickup-by-barcode-for-use-at-location.post",
          "replaces": [],
          "displayName": "circulation - pick up from hold shelf for use at location",
          "description": "pick up item of an existing loan from hold shelf for use at location (i.e. in reading room)",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.hold-by-barcode-for-use-at-location.post",
          "replaces": [],
          "displayName": "circulation - put item on hold shelf for another use at location",
          "description": "put the item of an existing loan on the hold shelf for later use at location (i.e. in reading room)",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.collection.get",
          "replaces": [],
          "displayName": "circulation - get loan collection",
          "description": "get loan collection",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.collection.delete",
          "replaces": [],
          "displayName": "circulation - delete entire loan collection",
          "description": "delete entire loan collection",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.item.get",
          "replaces": [],
          "displayName": "circulation - get individual loan",
          "description": "get individual loan",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.item.post",
          "replaces": [],
          "displayName": "circulation - create individual loan",
          "description": "create individual loan",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.item.put",
          "replaces": [],
          "displayName": "circulation - modify loan",
          "description": "modify individual loan",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.collection.anonymize.user.post",
          "replaces": [],
          "displayName": "circulation - anonymize loans",
          "description": "anonymize loans",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.item.delete",
          "replaces": [],
          "displayName": "circulation - delete individual loan",
          "description": "delete individual loan",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.declare-item-lost.post",
          "replaces": [],
          "displayName": "circulation - declare the loaned item lost",
          "description": "declares the loaned item lost",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.change-due-date.post",
          "replaces": [],
          "displayName": "circulation - change loan due date",
          "description": "changes the due date of the loan",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.add-info.post",
          "replaces": [],
          "displayName": "circulation - add patron or staff info",
          "description": "sets action and action comment",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.claim-item-returned.post",
          "replaces": [],
          "displayName": "circulation - declare the loaned item as claimed returned",
          "description": "declares the loaned item as claimed returned",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.loans.declare-claimed-returned-item-as-missing.post",
          "replaces": [],
          "displayName": "circulation -  declare the claimed returned loaned item as missing",
          "description": "declare the claimed returned loaned item as missing",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.get",
          "replaces": [],
          "displayName": "Circulation - get circulation rules",
          "description": "Get circulation rules",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.put",
          "replaces": [],
          "displayName": "Circulation - modify circulation rules",
          "description": "Modify circulation rules",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.loan-policy.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get matching loan policy",
          "description": "Apply circulation rules to get matching loan policy",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.loan-policy-all.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get all matching loan policies",
          "description": "Apply circulation rules to get all matching loan policies",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.request-policy.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get matching request policy",
          "description": "Apply circulation rules to get matching request policy",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.request-policy-all.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get all matching request policies",
          "description": "Apply circulation rules to get all matching request policies",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.notice-policy.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get matching notice policy",
          "description": "Apply circulation rules to get matching notice policy",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.notice-policy-all.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get all matching notice policies",
          "description": "Apply circulation rules to get all matching notice policies",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.overdue-fine-policy-all.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get all matching overdue fine policies",
          "description": "Apply circulation rules to get all matching overdue fine policies",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.lost-item-all.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get all matching lost item policies",
          "description": "Apply circulation rules to get all matching lost item policies",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.overdue-fine-policy.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get matching overdue fine policy",
          "description": "Apply circulation rules to get matching overdue fine policy",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.rules.lost-item-policy.get",
          "replaces": [],
          "displayName": "Circulation - use circulation rules to get matching lost item policy",
          "description": "Apply circulation rules to get matching lost item policy",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.collection.get",
          "replaces": [],
          "displayName": "circulation - get request collection",
          "description": "get request collection",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.collection.delete",
          "replaces": [],
          "displayName": "circulation - delete entire request collection",
          "description": "delete entire request collection",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.item.get",
          "replaces": [],
          "displayName": "circulation - get individual request",
          "description": "get individual request",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.item.post",
          "replaces": [],
          "displayName": "circulation - create individual requests",
          "description": "create individual request",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.item.put",
          "replaces": [],
          "displayName": "circulation - modify request",
          "description": "modify individual request",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.item.delete",
          "replaces": [],
          "displayName": "circulation - delete individual request",
          "description": "delete individual request",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.item.move.post",
          "replaces": [],
          "displayName": "circulation - move individual requests to another item",
          "description": "move individual request to another item",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.queue-instance.collection.get",
          "replaces": [
            "circulation.requests.queue.collection.get"
          ],
          "displayName": "circulation - request queue for an instance",
          "description": "get request queue for an instance",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.queue-item.collection.get",
          "replaces": [],
          "displayName": "circulation - request queue for an item",
          "description": "get request queue for an item",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.instances.item.post",
          "replaces": [],
          "displayName": "circulation - create instance level request",
          "description": "create a request given an instance",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.hold-shelf-clearance-report.get",
          "replaces": [],
          "displayName": "circulation - request hold shelf clearance report",
          "description": "get all hold shelf clearance requests to generating a report",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.inventory.items-in-transit-report.get",
          "replaces": [],
          "displayName": "circulation - items in transit report",
          "description": "get all items in transit to generating a report",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.pick-slips.get",
          "replaces": [],
          "displayName": "circulation - pick slips",
          "description": "get items for pick slips generation",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.search-slips.get",
          "replaces": [],
          "displayName": "circulation - search slips",
          "description": "get items for search slips generation",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.end-patron-action-session.post",
          "replaces": [],
          "displayName": "circulation - end patron action session",
          "description": "end patron action session",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.override-renewal-block.post",
          "replaces": [
            "circulation.override-renewal-block"
          ],
          "displayName": "circulation - override renewal block",
          "description": "renewal block override",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.override-item-limit-block.post",
          "replaces": [
            "circulation.override-item-limit-block"
          ],
          "displayName": "circulation - override item limit block",
          "description": "item limit block override",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.override-item-not-loanable-block.post",
          "replaces": [
            "circulation.override-item-not-loanable-block.post"
          ],
          "displayName": "circulation - override item not loanable block",
          "description": "item not loanable block override",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.override-patron-block.post",
          "replaces": [
            "circulation.override-patron-block"
          ],
          "displayName": "circulation - override patron block",
          "description": "patron block override",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.requests.allowed-service-points.get",
          "replaces": [],
          "displayName": "circulation - get allowed pickup service points for request",
          "description": "get allowed pickup service points for request",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.items-by-instance.get",
          "replaces": [],
          "displayName": "circulation - get items by instance",
          "description": "get items by instance",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.settings.collection.get",
          "replaces": [],
          "displayName": "circulation - get circulation settings",
          "description": "get a collection of circulation settings",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.settings.item.get",
          "replaces": [],
          "displayName": "circulation - get an individual circulation setting",
          "description": "get an individual circulation setting by ID",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.settings.item.put",
          "replaces": [],
          "displayName": "circulation - update circulation setting",
          "description": "update circulation setting by ID",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.settings.item.post",
          "replaces": [],
          "displayName": "circulation - create circulation setting",
          "description": "create a new circulation setting",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.settings.item.delete",
          "replaces": [],
          "displayName": "circulation - delete circulation setting",
          "description": "delete circulation setting by ID",
          "subPermissions": []
        },
        {
          "permissionName": "mod-settings.global.read.mod-circulation",
          "replaces": [],
          "displayName": "mod-circulation settings - read",
          "description": "To read mod-circulation settings from mod-settings",
          "subPermissions": []
        },
        {
          "permissionName": "mod-settings.global.write.mod-circulation",
          "replaces": [],
          "displayName": "mod-circulation settings - write",
          "description": "To create and edit mod-circulation settings in mod-settings",
          "subPermissions": []
        },
        {
          "permissionName": "mod-settings.global.read.circulation",
          "replaces": [],
          "displayName": "circulation functionality settings - read",
          "description": "To read circulation functionality settings from mod-settings",
          "subPermissions": []
        },
        {
          "permissionName": "mod-settings.global.write.circulation",
          "replaces": [],
          "displayName": "circulation functionality settings - write",
          "description": "To create and edit circulation functionality settings in mod-settings",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.all",
          "replaces": [],
          "displayName": "circulation - all permissions",
          "description": "Entire set of permissions needed to use the circulation",
          "subPermissions": [
            "circulation.check-out-by-barcode.post",
            "circulation.check-in-by-barcode.post",
            "circulation.renew-by-barcode.post",
            "circulation.renew-by-id.post",
            "circulation.hold-by-barcode-for-use-at-location.post",
            "circulation.pickup-by-barcode-for-use-at-location.post",
            "circulation.loans.collection.get",
            "circulation.loans.item.get",
            "circulation.loans.item.post",
            "circulation.loans.item.put",
            "circulation.loans.item.delete",
            "circulation.loans.collection.delete",
            "circulation.loans.change-due-date.post",
            "circulation.loans.add-info.post",
            "circulation.loans.claim-item-returned.post",
            "circulation.loans.declare-claimed-returned-item-as-missing.post",
            "circulation.rules.put",
            "circulation.rules.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.loan-policy-all.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.request-policy-all.get",
            "circulation.rules.notice-policy.get",
            "circulation.rules.notice-policy-all.get",
            "circulation.requests.collection.get",
            "circulation.requests.item.get",
            "circulation.requests.item.post",
            "circulation.requests.item.put",
            "circulation.requests.item.delete",
            "circulation.requests.item.move.post",
            "circulation.requests.collection.delete",
            "circulation.requests.queue-instance.collection.get",
            "circulation.requests.queue-item.collection.get",
            "circulation.requests.queue.reorder.collection.post",
            "circulation.requests.instances.item.post",
            "circulation.requests.hold-shelf-clearance-report.get",
            "circulation.requests.allowed-service-points.get",
            "circulation.inventory.items-in-transit-report.get",
            "circulation.pick-slips.get",
            "circulation.search-slips.get",
            "circulation.handlers.loan-related-fee-fine-closed.post",
            "circulation.handlers.fee-fine-balance-changed.post",
            "circulation.items-by-instance.get"
          ]
        },
        {
          "permissionName": "modperms.circulation.requests.hold-shelf-clearance-report.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation.internal.fetch-items.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "users.collection.get",
            "users.item.get",
            "addresstypes.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.handlers.loan-related-fee-fine-closed.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "lost-item-fees-policies.item.get",
            "accounts.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-record-storage.actual-cost-records.item.post",
            "actual-cost-record-storage.actual-cost-records.item.put",
            "actual-cost-record-storage.actual-cost-records.item.delete"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.handlers.fee-fine-balance-changed.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.patron-notice-policies.collection.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "lost-item-fees-policies.item.get",
            "lost-item-fees-policies.collection.get",
            "owners.collection.get",
            "feefines.collection.get",
            "feefines.item.get",
            "accounts.item.get",
            "accounts.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "feefineactions.item.get",
            "feefineactions.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.item.move.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.post",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.cancellation-reasons.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.notice-policy.get",
            "circulation.internal.apply-rules.execute",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "configuration.entries.collection.get",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "mod-settings.global.read.stripes-core.prefs.manage",
            "calendar.endpoint.dates.get",
            "pubsub.publish.post",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.check-out-by-barcode.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.overdue-fine-policy.get",
            "circulation.rules.lost-item-policy.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation-item.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "configuration.entries.collection.get",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "patron-action-session-storage.patron-action-sessions.item.post",
            "overdue-fines-policies.item.get",
            "overdue-fines-policies.collection.get",
            "lost-item-fees-policies.item.get",
            "lost-item-fees-policies.collection.get",
            "pubsub.publish.post",
            "checkout-lock-storage.checkout-locks.item.post",
            "checkout-lock-storage.checkout-locks.item.delete",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.global.read.mod-circulation",
            "mod-settings.global.read.circulation",
            "mod-settings.global.read.stripes-core.prefs.manage",
            "manualblocks.item.get",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.check-out-by-barcode-dry-run.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.overdue-fine-policy.get",
            "circulation.rules.lost-item-policy.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation-item.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "overdue-fines-policies.item.get",
            "overdue-fines-policies.collection.get",
            "lost-item-fees-policies.item.get",
            "lost-item-fees-policies.collection.get",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.global.read.mod-circulation",
            "mod-settings.global.read.circulation",
            "manualblocks.item.get",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.check-in-by-barcode.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation.rules.notice-policy.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation-item.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "addresstypes.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "patron-action-session-storage.patron-action-sessions.item.post",
            "feefines.collection.get",
            "feefines.item.post",
            "feefineactions.collection.get",
            "feefineactions.item.post",
            "owners.collection.get",
            "check-in-storage.check-ins.item.post",
            "overdue-fines-policies.item.get",
            "lost-item-fees-policies.item.get",
            "accounts.item.put",
            "accounts.collection.get",
            "accounts.item.post",
            "pubsub.publish.post",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "feesfines.accounts.refund.post",
            "feesfines.accounts-bulk.refund.post",
            "feesfines.accounts.cancel.post",
            "feesfines.accounts-bulk.cancel.post",
            "configuration.entries.collection.get",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-fee-fine-cancel.post",
            "departments.item.get",
            "departments.collection.get",
            "circulation-storage.loans-history.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "mod-settings.global.read.stripes-core.prefs.manage"
          ],
          "visible": false
        },
        {
          "permissionName": "circulation.renew-loan.all",
          "replaces": [
            "circulation.renew-loan"
          ],
          "displayName": "Renew a loan",
          "description": "Permissions needed to renew a loan",
          "subPermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "proxiesfor.collection.get",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "configuration.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "mod-settings.global.read.stripes-core.prefs.manage",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "patron-notice.post",
            "feefines.collection.get",
            "feefines.item.post",
            "feefineactions.collection.get",
            "feefineactions.item.post",
            "feefineactions.item.get",
            "owners.collection.get",
            "accounts.item.post",
            "feesfines.accounts.cancel.post",
            "feesfines.accounts-bulk.cancel.post",
            "pubsub.publish.post",
            "patron-blocks.automated-patron-blocks.collection.get",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "overdue-fines-policies.item.get",
            "lost-item-fees-policies.item.get",
            "manualblocks.collection.get",
            "manualblocks.item.get",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-fee-fine-cancel.post",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "circulation.usage-at-location.all",
          "replaces": [],
          "displayName": "Put item on hold or pick it up for use at location",
          "description": "Permissions needed to take an item on or off hold shelf for use at location",
          "subPermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
        {
          "permissionName": "perms.circulation.loans.anonymize.all",
          "replaces": [
            "modperms.circulation.loans.anonymize"
          ],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "proxiesfor.collection.get",
            "configuration.entries.collection.get",
            "circulation.rules.notice-policy.get",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "patron-notice.post",
            "anonymize-storage-loans.post",
            "feefineactions.collection.get",
            "pubsub.publish.post",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.loans.item.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "proxiesfor.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.loans.collection.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation.internal.fetch-items.collection.get",
            "users.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "accounts.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "feefineactions.collection.get",
            "feefineactions.item.get",
            "overdue-fines-policies.collection.get",
            "lost-item-fees-policies.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.loans.item.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation.internal.fetch-items.collection.get",
            "accounts.collection.get",
            "accounts.item.get",
            "feefineactions.collection.get",
            "feefineactions.item.get",
            "users.collection.get",
            "users.item.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "addresstypes.collection.get",
            "overdue-fines-policies.collection.get",
            "overdue-fines-policies.item.get",
            "lost-item-fees-policies.collection.get",
            "lost-item-fees-policies.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.collection.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.item.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.item.post",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.notice-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.internal.fetch-items.collection.get",
            "inventory-storage.items.item.put",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "configuration.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "mod-settings.global.read.stripes-core.prefs.manage",
            "manualblocks.collection.get",
            "pubsub.publish.post",
            "patron-blocks.automated-patron-blocks.collection.get",
            "circulation-storage.loans-history.collection.get",
            "overdue-fines-policies.item.get",
            "overdue-fines-policies.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.item.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.item.delete",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "circulation-storage.requests.item.delete",
            "circulation-storage.request-batch.item.post"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.item.put",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.post",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.cancellation-reasons.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "configuration.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "mod-settings.global.read.stripes-core.prefs.manage",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "pubsub.publish.post",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.queue.collection.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.queue.reorder.collection.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.requests.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "pubsub.publish.post",
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.requests.instances.item.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.requests.item.post",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.request-batch.item.post",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "proxiesfor.collection.get",
            "patron-notice.post",
            "calendar.endpoint.calendars.surroundingOpenings.get",
            "calendar.endpoint.calendars.allOpenings.get",
            "configuration.entries.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation",
            "mod-settings.global.read.stripes-core.prefs.manage",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get",
            "pubsub.publish.post",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.loans-history.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.loans.declare-item-lost.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "lost-item-fees-policies.item.get",
            "owners.collection.get",
            "feefines.collection.get",
            "accounts.item.post",
            "users.item.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "usergroups.item.get",
            "feefineactions.item.post",
            "pubsub.publish.post",
            "note.types.collection.get",
            "notes.item.post",
            "actual-cost-record-storage.actual-cost-records.item.post",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-fee-fine-cancel.post"
          ],
          "visible": false
        },
        {
          "permissionName": "perms.circulation.loans.change-due-date.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation.rules.loan-policy.get",
            "circulation.rules.notice-policy.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation-storage.patron-notice-policies.item.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "users.item.get",
            "addresstypes.collection.get",
            "pubsub.publish.post",
            "patron-notice.post",
            "circulation-storage.loans-history.collection.get",
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.loans.add-info.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
        {
          "permissionName": "perms.circulation.loans.claim-item-returned.post",
          "replaces": [
            "modperms.circulation.loans.claim-item-returned.post"
          ],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "notes.collection.get",
            "notes.item.post",
            "note.types.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.loans.declare-claimed-returned-item-as-missing.post",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.put",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "notes.item.post",
            "note.types.collection.get",
            "pubsub.publish.post"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.loans.item.put",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation.rules.loan-policy.get",
            "circulation.rules.request-policy.get",
            "circulation.rules.notice-policy.get",
            "inventory-storage.items.item.put",
            "circulation.internal.fetch-items.collection.get",
            "proxiesfor.collection.get",
            "proxiesfor.collection.get",
            "users.item.get",
            "addresstypes.collection.get",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "pubsub.publish.post",
            "configuration.entries.collection.get",
            "patron-notice.post",
            "circulation-storage.loans-history.collection.get",
            "overdue-fines-policies.item.get",
            "overdue-fines-policies.collection.get",
            "mod-settings.global.read.stripes-core.prefs.manage"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.inventory.items-in-transit-report.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation.internal.fetch-items.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.pick-slips.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation.internal.fetch-items.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.item.get",
            "addresstypes.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "modperms.circulation.search-slips.get",
          "replaces": [],
          "displayName": "module permissions for one op",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "circulation.internal.fetch-items.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "users.item.get",
            "users.collection.get",
            "addresstypes.item.get",
            "addresstypes.collection.get",
            "mod-settings.entries.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.circulation"
          ],
          "visible": false
        },
        {
          "permissionName": "circulation.internal.fetch-items.collection.get",
          "replaces": [
            "circulation.internal.fetch-items"
          ],
          "displayName": "Fetch item(s)",
          "description": "Internal permission set for fetching item(s)",
          "subPermissions": [
            "inventory-storage.items.item.get",
            "circulation-item.collection.get",
            "circulation-item.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.identifier-types.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "circulation.internal.apply-rules.execute",
          "replaces": [
            "circulation.internal.apply-rules"
          ],
          "displayName": "Apply circulation rules",
          "description": "Internal permission set for applying circulation rules",
          "subPermissions": [
            "circulation.rules.loan-policy.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation.rules.request-policy.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation.rules.notice-policy.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.patron-notice-policies.collection.get"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-circulation:24.5.0-SNAPSHOT.1331",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 1073741824,
            "PortBindings": {
              "9801/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "SCHEDULED_ANONYMIZATION_NUMBER_OF_LOANS_TO_CHECK",
            "value": "50000"
          },
          {
            "name": "ENABLE_FLOATING_COLLECTIONS",
            "value": "true"
          },
          {
            "name": "KAFKA_HOST",
            "value": "kafka"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "REPLICATION_FACTOR",
            "value": "1"
          },
          {
            "name": "ENV",
            "value": "folio"
          }
        ],
        "dockerCMD": []
      },
      "name": "Circulation Module"
    },
    {
      "id": "mod-circulation-storage-17.5.0-SNAPSHOT.475",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "item-storage",
          "version": "5.0 6.0 7.0 8.2 9.0 10.0 11.0"
        },
        {
          "id": "holdings-storage",
          "version": "1.3 2.0 3.0 4.0 5.0 6.0 7.0 8.0"
        },
        {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
        {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
        {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
        {
          "id": "pubsub-publish",
          "version": "0.1"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "locations",
          "version": "3.1"
        },
        {
          "id": "service-points",
          "version": "3.4"
        },
        {
          "id": "settings",
          "version": "1.0"
        }
      ],
      "provides": [
        {
          "id": "request-storage-batch",
          "version": "2.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/request-storage-batch/requests",
              "permissionsRequired": [
                "circulation-storage.request-batch.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "mod-settings.entries.item.get",
                "mod-settings.entries.collection.get",
                "mod-settings.global.read.circulation"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "loan-storage",
          "version": "7.4",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/loan-storage/loans",
              "permissionsRequired": [
                "circulation-storage.loans.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/loan-storage/loans/{id}",
              "permissionsRequired": [
                "circulation-storage.loans.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/loan-storage/loans",
              "permissionsRequired": [
                "circulation-storage.loans.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/loan-storage/loans/{id}",
              "permissionsRequired": [
                "circulation-storage.loans.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/loan-storage/loans/{id}",
              "permissionsRequired": [
                "circulation-storage.loans.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/loan-storage/loans",
              "permissionsRequired": [
                "circulation-storage.loans.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/loan-storage/loan-history",
              "permissionsRequired": [
                "circulation-storage.loans-history.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/loan-storage/loans/anonymize/{userId}",
              "permissionsRequired": [
                "circulation-storage.loans.anonymize.execute"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "anonymize-storage-loans",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/anonymize-storage-loans",
              "permissionsRequired": [
                "anonymize-storage-loans.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "circulation-rules-storage",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation-rules-storage",
              "permissionsRequired": [
                "circulation-storage.circulation-rules.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/circulation-rules-storage",
              "permissionsRequired": [
                "circulation-storage.circulation-rules.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "circulation-settings-storage",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation-settings-storage/circulation-settings",
              "permissionsRequired": [
                "circulation-storage.circulation-settings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/circulation-settings-storage/circulation-settings/{id}",
              "permissionsRequired": [
                "circulation-storage.circulation-settings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/circulation-settings-storage/circulation-settings/{id}",
              "permissionsRequired": [
                "circulation-storage.circulation-settings.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/circulation-settings-storage/circulation-settings",
              "permissionsRequired": [
                "circulation-storage.circulation-settings.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/circulation-settings-storage/circulation-settings/{id}",
              "permissionsRequired": [
                "circulation-storage.circulation-settings.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "loan-policy-storage",
          "version": "2.4",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/loan-policy-storage/loan-policies",
              "permissionsRequired": [
                "circulation-storage.loan-policies.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/loan-policy-storage/loan-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.loan-policies.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/loan-policy-storage/loan-policies",
              "permissionsRequired": [
                "circulation-storage.loan-policies.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/loan-policy-storage/loan-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.loan-policies.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/loan-policy-storage/loan-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.loan-policies.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/loan-policy-storage/loan-policies",
              "permissionsRequired": [
                "circulation-storage.loan-policies.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "request-storage",
          "version": "6.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/request-storage/requests",
              "permissionsRequired": [
                "circulation-storage.requests.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/request-storage/requests/{id}",
              "permissionsRequired": [
                "circulation-storage.requests.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/request-storage/requests",
              "permissionsRequired": [
                "circulation-storage.requests.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/request-storage/requests/{id}",
              "permissionsRequired": [
                "circulation-storage.requests.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/request-storage/requests/{id}",
              "permissionsRequired": [
                "circulation-storage.requests.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/request-storage/requests",
              "permissionsRequired": [
                "circulation-storage.requests.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "fixed-due-date-schedules-storage",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
              "permissionsRequired": [
                "circulation-storage.fixed-due-date-schedules.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
              "permissionsRequired": [
                "circulation-storage.fixed-due-date-schedules.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
              "permissionsRequired": [
                "circulation-storage.fixed-due-date-schedules.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
              "permissionsRequired": [
                "circulation-storage.fixed-due-date-schedules.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
              "permissionsRequired": [
                "circulation-storage.fixed-due-date-schedules.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
              "permissionsRequired": [
                "circulation-storage.fixed-due-date-schedules.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "staff-slips-storage",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/staff-slips-storage/staff-slips",
              "permissionsRequired": [
                "circulation-storage.staff-slips.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/staff-slips-storage/staff-slips",
              "permissionsRequired": [
                "circulation-storage.staff-slips.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/staff-slips-storage/staff-slips",
              "permissionsRequired": [
                "circulation-storage.staff-slips.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/staff-slips-storage/staff-slips/{id}",
              "permissionsRequired": [
                "circulation-storage.staff-slips.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/staff-slips-storage/staff-slips/{id}",
              "permissionsRequired": [
                "circulation-storage.staff-slips.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/staff-slips-storage/staff-slips/{id}",
              "permissionsRequired": [
                "circulation-storage.staff-slips.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "cancellation-reason-storage",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
              "permissionsRequired": [
                "circulation-storage.cancellation-reasons.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
              "permissionsRequired": [
                "circulation-storage.cancellation-reasons.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
              "permissionsRequired": [
                "circulation-storage.cancellation-reasons.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
              "permissionsRequired": [
                "circulation-storage.cancellation-reasons.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
              "permissionsRequired": [
                "circulation-storage.cancellation-reasons.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
              "permissionsRequired": [
                "circulation-storage.cancellation-reasons.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "patron-notice-policy-storage",
          "version": "0.13",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies",
              "permissionsRequired": [
                "circulation-storage.patron-notice-policies.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.patron-notice-policies.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.patron-notice-policies.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies",
              "permissionsRequired": [
                "circulation-storage.patron-notice-policies.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.patron-notice-policies.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "request-policy-storage",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/request-policy-storage/request-policies",
              "permissionsRequired": [
                "circulation-storage.request-policies.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/request-policy-storage/request-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.request-policies.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/request-policy-storage/request-policies",
              "permissionsRequired": [
                "circulation-storage.request-policies.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/request-policy-storage/request-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.request-policies.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/request-policy-storage/request-policies/{id}",
              "permissionsRequired": [
                "circulation-storage.request-policies.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/request-policy-storage/request-policies",
              "permissionsRequired": [
                "circulation-storage.request-policies.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "actual-cost-record-storage",
          "version": "0.9",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records",
              "permissionsRequired": [
                "actual-cost-record-storage.actual-cost-records.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
              "permissionsRequired": [
                "actual-cost-record-storage.actual-cost-records.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records",
              "permissionsRequired": [
                "actual-cost-record-storage.actual-cost-records.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
              "permissionsRequired": [
                "actual-cost-record-storage.actual-cost-records.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
              "permissionsRequired": [
                "actual-cost-record-storage.actual-cost-records.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "request-preference-storage",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/request-preference-storage/request-preference",
              "permissionsRequired": [
                "circulation-storage.request-preferences.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/request-preference-storage/request-preference/{id}",
              "permissionsRequired": [
                "circulation-storage.request-preferences.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/request-preference-storage/request-preference/{id}",
              "permissionsRequired": [
                "circulation-storage.request-preferences.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/request-preference-storage/request-preference",
              "permissionsRequired": [
                "circulation-storage.request-preferences.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/request-preference-storage/request-preference/{id}",
              "permissionsRequired": [
                "circulation-storage.request-preferences.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "scheduled-notice-storage",
          "version": "0.6",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices",
              "permissionsRequired": [
                "scheduled-notice-storage.scheduled-notices.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
              "permissionsRequired": [
                "scheduled-notice-storage.scheduled-notices.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices",
              "permissionsRequired": [
                "scheduled-notice-storage.scheduled-notices.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
              "permissionsRequired": [
                "scheduled-notice-storage.scheduled-notices.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices",
              "permissionsRequired": [
                "scheduled-notice-storage.scheduled-notices.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
              "permissionsRequired": [
                "scheduled-notice-storage.scheduled-notices.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "tlr-feature-toggle-job-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs",
              "permissionsRequired": [
                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs",
              "permissionsRequired": [
                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
              "permissionsRequired": [
                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
              "permissionsRequired": [
                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
              "permissionsRequired": [
                "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "patron-action-session-storage",
          "version": "0.3",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions",
              "permissionsRequired": [
                "patron-action-session-storage.patron-action-sessions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
              "permissionsRequired": [
                "patron-action-session-storage.patron-action-sessions.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions",
              "permissionsRequired": [
                "patron-action-session-storage.patron-action-sessions.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
              "permissionsRequired": [
                "patron-action-session-storage.patron-action-sessions.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
              "permissionsRequired": [
                "patron-action-session-storage.patron-action-sessions.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-action-session-storage/expired-session-patron-ids",
              "permissionsRequired": [
                "patron-action-session-storage.expired-session-patron-ids.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "check-in-storage",
          "version": "0.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/check-in-storage/check-ins",
              "permissionsRequired": [
                "check-in-storage.check-ins.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/check-in-storage/check-ins",
              "permissionsRequired": [
                "check-in-storage.check-ins.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/check-in-storage/check-ins/{id}",
              "permissionsRequired": [
                "check-in-storage.check-ins.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "checkout-lock-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/check-out-lock-storage",
              "permissionsRequired": [
                "checkout-lock-storage.checkout-locks.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/check-out-lock-storage/{lockId}",
              "permissionsRequired": [
                "checkout-lock-storage.checkout-locks.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/check-out-lock-storage",
              "permissionsRequired": [
                "checkout-lock-storage.checkout-locks.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/check-out-lock-storage/{lockId}",
              "permissionsRequired": [
                "checkout-lock-storage.checkout-locks.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "print-events-storage",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/print-events-storage/print-events-entry",
              "permissionsRequired": [
                "print-events-storage.print-events-entry.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/print-events-storage/print-events-status",
              "permissionsRequired": [
                "print-events-storage.print-events-status.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/scheduled-request-expiration",
              "unit": "minute",
              "delay": "2",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "configuration.entries.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/tlr-feature-toggle-job/start",
              "unit": "minute",
              "delay": "5",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "print-events-storage.print-events-entry.item.post",
          "replaces": [],
          "displayName": "print events storage - save print event logs",
          "description": "save print event log in storage",
          "subPermissions": []
        },
        {
          "permissionName": "print-events-storage.print-events-status.item.post",
          "replaces": [],
          "displayName": "print-events-storage - Fetch print event status",
          "description": "Fetch print event details for a batch of request Ids",
          "subPermissions": []
        },
        {
          "permissionName": "check-in-storage.check-ins.collection.get",
          "replaces": [],
          "displayName": "Check-in storage - get check-ins collection",
          "description": "Get check-ins collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "check-in-storage.check-ins.item.post",
          "replaces": [],
          "displayName": "Check-in storage - create a check-in record",
          "description": "Create a check-in record",
          "subPermissions": []
        },
        {
          "permissionName": "check-in-storage.check-ins.item.get",
          "replaces": [],
          "displayName": "Check-in storage - get a check-in record by id",
          "description": "Get individual check-in by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loans.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get loan collection",
          "description": "Get loan collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loans.collection.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete entire loan collection",
          "description": "Delete entire loan collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loans.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual loan",
          "description": "Get individual loan from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loans.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create individual loan",
          "description": "Create individual loan in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loans.item.put",
          "replaces": [],
          "displayName": "Circulation storage - modify loan",
          "description": "Modify loan in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loans.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete individual loan",
          "description": "Delete individual loan from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loans.anonymize.execute",
          "replaces": [
            "circulation-storage.loans.collection.anonymize.user.post"
          ],
          "displayName": "Circulation storage - anonymize loans for a user",
          "description": "Anonymize closed loans for a single user",
          "subPermissions": []
        },
        {
          "permissionName": "anonymize-storage-loans.post",
          "replaces": [],
          "displayName": "circulation - anonymize loans",
          "description": "anonymize a list of loans",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.circulation-rules.get",
          "replaces": [],
          "displayName": "Circulation storage - get circulation rules",
          "description": "Get circulation rules from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.circulation-rules.put",
          "replaces": [],
          "displayName": "Circulation storage - modify circulation rules",
          "description": "Modify circulation rules in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loan-policies.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get loan policy collection",
          "description": "Get loan policy collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loan-policies.collection.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete entire loan collection",
          "description": "Delete entire loan collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loan-policies.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual loan policy",
          "description": "Get individual loan policy from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loan-policies.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create individual loan policy",
          "description": "Create individual loan policy in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loan-policies.item.put",
          "replaces": [],
          "displayName": "Circulation storage - modify loan policy",
          "description": "Modify loan policy in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loan-policies.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete individual loan policy",
          "description": "Delete individual loan policy from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.loans-history.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get loan history collection",
          "description": "Get loan history collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.requests.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get request collection",
          "description": "Get request collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.requests.collection.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete entire request collection",
          "description": "Delete entire request collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.requests.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual request",
          "description": "Get individual request from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.requests.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create individual request",
          "description": "Create individual request in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.requests.item.put",
          "replaces": [],
          "displayName": "Circulation storage - modify request",
          "description": "Modify request in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-batch.item.post",
          "replaces": [],
          "displayName": "Circulation storage batch - modify requests",
          "description": "Modify requests in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.requests.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete individual request",
          "description": "Delete individual request from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.fixed-due-date-schedules.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get fixed due date collection",
          "description": "Get fixed due date collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.fixed-due-date-schedules.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual fixed due date",
          "description": "Get individual fixed due date from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.fixed-due-date-schedules.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create individual fixed due date",
          "description": "Create individual fixed due date from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.fixed-due-date-schedules.item.put",
          "replaces": [],
          "displayName": "Circulation storage - modify individual fixed due date",
          "description": "Modify individual fixed due date from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.fixed-due-date-schedules.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete individual fixed due date",
          "description": "Delete individual fixed due date from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.fixed-due-date-schedules.collection.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete collection of fixed due date",
          "description": "Delete collection of fixed due date from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.staff-slips.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get staff slip collection from storage",
          "description": "Get staff slip collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.staff-slips.collection.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete entire staff slipp collection",
          "description": "Delete entire staff slip collection",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.staff-slips.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create indavidual staff slip in storage",
          "description": "Create individual staff slip in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.staff-slips.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get indavidual staff slip from storage",
          "description": "Get individual staff slip from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.staff-slips.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete indavidual staff slip from storage",
          "description": "Delete individual staff slip from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.staff-slips.item.put",
          "replaces": [],
          "displayName": "Circulation storage - modify indavidual staff slip in storage",
          "description": "Modify individual staff slip in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.cancellation-reasons.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get cancellation reasons collection",
          "description": "Get cancellation reasons from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.cancellation-reasons.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual cancellation reason",
          "description": "Get individual cancellation reason by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.cancellation-reasons.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create individual cancellation reason",
          "description": "Create individual cancellation reason",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.cancellation-reasons.item.put",
          "replaces": [],
          "displayName": "Circulation storage - put individual cancellation reason",
          "description": "Modify individual cancellation reason by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.cancellation-reasons.collection.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete cancellation reasons",
          "description": "Delete entire cancellation reasons collection",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.cancellation-reasons.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete individual cancellation reason",
          "description": "Delete individual cancellation reason by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.patron-notice-policies.item.post",
          "replaces": [],
          "displayName": "Circulation storage - post individual patron notice policy",
          "description": "Post individual patron notice policy",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.patron-notice-policies.item.put",
          "replaces": [],
          "displayName": "Circulation storage - put individual patron notice policy",
          "description": "Put individual patron notice policy by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.patron-notice-policies.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete patron notice policy",
          "description": "Delete patron notice policy by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.patron-notice-policies.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get patron notice policy collection",
          "description": "Get patron notice policy collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.patron-notice-policies.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual patron notice policy",
          "description": "Get individual patron notice policy by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-preferences.item.post",
          "replaces": [],
          "displayName": "Circulation storage - post individual request preference",
          "description": "Post individual request preference",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-preferences.item.put",
          "replaces": [],
          "displayName": "Circulation storage - put individual request preference",
          "description": "Put individual request preference by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-preferences.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete request preference",
          "description": "Delete request preference by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-preferences.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get request preference collection",
          "description": "Get request preference collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-preferences.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual request preference",
          "description": "Get individual request preference by id",
          "subPermissions": []
        },
        {
          "permissionName": "scheduled-notice-storage.scheduled-notices.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get scheduled notice collection",
          "description": "Get scheduled notice collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "scheduled-notice-storage.scheduled-notices.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual scheduled notice",
          "description": "Get individual scheduled notice by id",
          "subPermissions": []
        },
        {
          "permissionName": "scheduled-notice-storage.scheduled-notices.item.post",
          "replaces": [],
          "displayName": "Circulation storage - post individual scheduled notice",
          "description": "Create individual scheduled notice",
          "subPermissions": []
        },
        {
          "permissionName": "scheduled-notice-storage.scheduled-notices.item.put",
          "replaces": [],
          "displayName": "Circulation storage - put individual scheduled notice",
          "description": "Put individual scheduled notice by id",
          "subPermissions": []
        },
        {
          "permissionName": "scheduled-notice-storage.scheduled-notices.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete individual scheduled notice",
          "description": "Delete individual scheduled notice by id",
          "subPermissions": []
        },
        {
          "permissionName": "scheduled-notice-storage.scheduled-notices.collection.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete all scheduled notices",
          "description": "Delete all scheduled notices from storage",
          "subPermissions": []
        },
        {
          "permissionName": "patron-action-session-storage.patron-action-sessions.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get patron action session collection",
          "description": "Get patron action session collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "patron-action-session-storage.patron-action-sessions.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get patron action session",
          "description": "Get individual patron action session by id",
          "subPermissions": []
        },
        {
          "permissionName": "patron-action-session-storage.patron-action-sessions.item.post",
          "replaces": [],
          "displayName": "Circulation storage - post patron action session",
          "description": "Create individual patron action session",
          "subPermissions": []
        },
        {
          "permissionName": "patron-action-session-storage.patron-action-sessions.item.put",
          "replaces": [],
          "displayName": "Circulation storage - put patron action session",
          "description": "Put patron action session by id",
          "subPermissions": []
        },
        {
          "permissionName": "patron-action-session-storage.patron-action-sessions.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete patron action session",
          "description": "Delete patron action session by id",
          "subPermissions": []
        },
        {
          "permissionName": "patron-action-session-storage.expired-session-patron-ids.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get expired session patron ids collection",
          "description": "Get expired session patron ids collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.circulation-settings.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get circulation settings collection",
          "description": "Get circulation settings collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.circulation-settings.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get circulation setting by id",
          "description": "Get circulation setting by id from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.circulation-settings.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create circulation setting",
          "description": "Create circulation setting in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.circulation-settings.item.put",
          "replaces": [],
          "displayName": "Circulation storage - update circulation setting by id",
          "description": "Update circulation setting by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.circulation-settings.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete circulation setting by id",
          "description": "Delete circulation setting by id",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.all",
          "replaces": [],
          "displayName": "Circulation storage module - all permissions",
          "description": "Entire set of permissions needed to use the circulation storage module",
          "subPermissions": [
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.loans.item.post",
            "circulation-storage.loans.item.put",
            "circulation-storage.loans.item.delete",
            "circulation-storage.loans.collection.delete",
            "circulation-storage.loans.anonymize.execute",
            "circulation-storage.loans-history.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.circulation-rules.put",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loan-policies.item.post",
            "circulation-storage.loan-policies.item.put",
            "circulation-storage.loan-policies.item.delete",
            "circulation-storage.loan-policies.collection.delete",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.item.post",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.delete",
            "circulation-storage.requests.collection.delete",
            "circulation-storage.fixed-due-date-schedules.collection.delete",
            "circulation-storage.fixed-due-date-schedules.item.delete",
            "circulation-storage.fixed-due-date-schedules.item.put",
            "circulation-storage.fixed-due-date-schedules.item.post",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.staff-slips.item.delete",
            "circulation-storage.staff-slips.collection.delete",
            "circulation-storage.staff-slips.collection.get",
            "circulation-storage.staff-slips.item.post",
            "circulation-storage.staff-slips.item.put",
            "circulation-storage.staff-slips.item.get",
            "circulation-storage.cancellation-reasons.collection.get",
            "circulation-storage.cancellation-reasons.item.get",
            "circulation-storage.cancellation-reasons.item.post",
            "circulation-storage.cancellation-reasons.item.put",
            "circulation-storage.cancellation-reasons.collection.delete",
            "circulation-storage.cancellation-reasons.item.delete",
            "circulation-storage.patron-notice-policies.item.post",
            "circulation-storage.patron-notice-policies.item.put",
            "circulation-storage.patron-notice-policies.item.delete",
            "circulation-storage.patron-notice-policies.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "circulation-storage.request-preferences.item.post",
            "circulation-storage.request-preferences.item.put",
            "circulation-storage.request-preferences.item.delete",
            "circulation-storage.request-preferences.collection.get",
            "circulation-storage.request-preferences.item.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.request-policies.collection.delete",
            "circulation-storage.request-policies.item.delete",
            "circulation-storage.request-policies.item.post",
            "circulation-storage.request-policies.item.put",
            "circulation-storage.request-batch.item.post",
            "scheduled-notice-storage.scheduled-notices.collection.get",
            "scheduled-notice-storage.scheduled-notices.item.get",
            "scheduled-notice-storage.scheduled-notices.item.post",
            "scheduled-notice-storage.scheduled-notices.item.put",
            "scheduled-notice-storage.scheduled-notices.item.delete",
            "scheduled-notice-storage.scheduled-notices.collection.delete",
            "anonymize-storage-loans.post",
            "patron-action-session-storage.patron-action-sessions.collection.get",
            "patron-action-session-storage.patron-action-sessions.item.get",
            "patron-action-session-storage.patron-action-sessions.item.post",
            "patron-action-session-storage.patron-action-sessions.item.put",
            "patron-action-session-storage.patron-action-sessions.item.delete",
            "patron-action-session-storage.expired-session-patron-ids.collection.get",
            "check-in-storage.check-ins.collection.get",
            "check-in-storage.check-ins.item.post",
            "check-in-storage.check-ins.item.get",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put",
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-record-storage.actual-cost-records.item.get",
            "actual-cost-record-storage.actual-cost-records.item.post",
            "actual-cost-record-storage.actual-cost-records.item.put",
            "actual-cost-record-storage.actual-cost-records.item.delete",
            "checkout-lock-storage.checkout-locks.item.post",
            "checkout-lock-storage.checkout-locks.item.delete",
            "checkout-lock-storage.checkout-locks.item.get",
            "checkout-lock-storage.checkout-locks.collection.get",
            "circulation-storage.circulation-settings.collection.get",
            "circulation-storage.circulation-settings.item.get",
            "circulation-storage.circulation-settings.item.post",
            "circulation-storage.circulation-settings.item.put",
            "circulation-storage.circulation-settings.item.delete",
            "print-events-storage.print-events-entry.item.post",
            "print-events-storage.print-events-status.item.post"
          ]
        },
        {
          "permissionName": "circulation-storage.request-policies.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get request policy collection",
          "description": "Get request policy collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-policies.collection.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete entire request policy collection",
          "description": "Delete entire request policy collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-policies.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get individual request policy",
          "description": "Get individual request policy from storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-policies.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create individual request policy",
          "description": "Create individual request policy in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-policies.item.put",
          "replaces": [],
          "displayName": "Circulation storage - modify individual request policy",
          "description": "Modify request policy in storage",
          "subPermissions": []
        },
        {
          "permissionName": "circulation-storage.request-policies.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete individual request policy",
          "description": "Delete individual request policy from storage",
          "subPermissions": []
        },
        {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post",
          "replaces": [],
          "displayName": "Circulation storage - post tlr feature toggle job",
          "description": "Create tlr feature toggle job",
          "subPermissions": []
        },
        {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get tlr feature toggle job collection",
          "description": "Get tlr feature toggle job collection",
          "subPermissions": []
        },
        {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get tlr feature toggle job",
          "description": "Get tlr feature toggle job",
          "subPermissions": []
        },
        {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put",
          "replaces": [],
          "displayName": "Circulation storage - put tlr feature toggle job",
          "description": "Update tlr feature toggle job",
          "subPermissions": []
        },
        {
          "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete tlr feature toggle job",
          "description": "Delete tlr feature toggle job",
          "subPermissions": []
        },
        {
          "permissionName": "actual-cost-record-storage.actual-cost-records.item.post",
          "replaces": [],
          "displayName": "Circulation storage - post actual cost record",
          "description": "Create actual cost record",
          "subPermissions": []
        },
        {
          "permissionName": "actual-cost-record-storage.actual-cost-records.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get actual cost record collection",
          "description": "Get actual cost record collection",
          "subPermissions": []
        },
        {
          "permissionName": "actual-cost-record-storage.actual-cost-records.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get actual cost record",
          "description": "Get actual cost record",
          "subPermissions": []
        },
        {
          "permissionName": "actual-cost-record-storage.actual-cost-records.item.put",
          "replaces": [],
          "displayName": "Circulation storage - put actual cost record",
          "description": "Update actual cost record",
          "subPermissions": []
        },
        {
          "permissionName": "actual-cost-record-storage.actual-cost-records.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete actual cost record",
          "description": "Delete actual cost record",
          "subPermissions": []
        },
        {
          "permissionName": "checkout-lock-storage.checkout-locks.item.post",
          "replaces": [],
          "displayName": "Circulation storage - create lock",
          "description": "create lock for the userId",
          "subPermissions": []
        },
        {
          "permissionName": "checkout-lock-storage.checkout-locks.item.delete",
          "replaces": [],
          "displayName": "Circulation storage - delete lock",
          "description": "Delete lock for the userId",
          "subPermissions": []
        },
        {
          "permissionName": "checkout-lock-storage.checkout-locks.item.get",
          "replaces": [],
          "displayName": "Circulation storage - get lock",
          "description": "get lock for the userId",
          "subPermissions": []
        },
        {
          "permissionName": "checkout-lock-storage.checkout-locks.collection.get",
          "replaces": [],
          "displayName": "Circulation storage - get locks",
          "description": "get locks",
          "subPermissions": []
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-circulation-storage:17.5.0-SNAPSHOT.475",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 536870912,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "KAFKA_HOST",
            "value": "kafka"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "REPLICATION_FACTOR",
            "value": "1"
          },
          {
            "name": "ENV",
            "value": "folio"
          }
        ],
        "dockerCMD": []
      },
      "name": "Circulation Storage Module"
    },
    {
      "id": "mod-copycat-1.8.0",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
        {
          "id": "source-manager-records",
          "version": "2.0"
        },
        {
          "id": "source-storage-source-records",
          "version": "3.2"
        }
      ],
      "provides": [
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "copycat-imports",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/copycat/imports",
              "permissionsRequired": [
                "copycat.imports.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobexecutions.post",
                "change-manager.jobExecutions.item.get",
                "change-manager.jobExecutions.children.collection.get",
                "change-manager.jobExecutions.jobProfile.item.put",
                "change-manager.records.post",
                "source-storage.source-records.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "copycat-profiles",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/copycat/profiles",
              "permissionsRequired": [
                "copycat.profiles.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/copycat/profiles",
              "permissionsRequired": [
                "copycat.profiles.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/copycat/profiles/{id}",
              "permissionsRequired": [
                "copycat.profiles.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/copycat/profiles/{id}",
              "permissionsRequired": [
                "copycat.profiles.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/copycat/profiles/{id}",
              "permissionsRequired": [
                "copycat.profiles.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "copycat.imports.post",
          "replaces": [],
          "displayName": "CopyCat - import records from remote resource",
          "description": "Import records from remote and source",
          "subPermissions": []
        },
        {
          "permissionName": "copycat.profiles.collection.get",
          "replaces": [],
          "displayName": "CopyCat - get CopyCat profiles",
          "description": "Retrieve CopyCat profiles",
          "subPermissions": []
        },
        {
          "permissionName": "copycat.profiles.item.post",
          "replaces": [],
          "displayName": "CopyCat - create CopyCat profile",
          "description": "Create CopyCat profile",
          "subPermissions": []
        },
        {
          "permissionName": "copycat.profiles.item.get",
          "replaces": [],
          "displayName": "CopyCat - get CopyCat profile",
          "description": "Get single CopyCat profile",
          "subPermissions": []
        },
        {
          "permissionName": "copycat.profiles.item.put",
          "replaces": [],
          "displayName": "CopyCat - update CopyCat profile",
          "description": "Update single CopyCat profile",
          "subPermissions": []
        },
        {
          "permissionName": "copycat.profiles.item.delete",
          "replaces": [],
          "displayName": "CopyCat - delete CopyCat profile",
          "description": "Delete single CopyCat profile",
          "subPermissions": []
        },
        {
          "permissionName": "copycat.profiles.all",
          "replaces": [],
          "displayName": "CopyCat - all profile operations",
          "description": "Allow all operations on CopyCat profiles",
          "subPermissions": [
            "copycat.profiles.collection.get",
            "copycat.profiles.item.post",
            "copycat.profiles.item.get",
            "copycat.profiles.item.put",
            "copycat.profiles.item.delete"
          ]
        },
        {
          "permissionName": "copycat.all",
          "replaces": [],
          "displayName": "CopyCat - all permissions",
          "description": "All permissions for CopyCat",
          "subPermissions": [
            "copycat.profiles.all",
            "copycat.imports.post"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioorg/mod-copycat:1.8.0",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 536870912,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "copycat"
    },
    {
      "id": "mod-courses-1.5.0-SNAPSHOT.170",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "item-storage",
          "version": "7.0 8.0 9.0 10.0 11.0"
        },
        {
          "id": "instance-storage",
          "version": "7.2 8.0 9.0 10.0 11.0"
        },
        {
          "id": "holdings-storage",
          "version": "2.0 3.0 4.0 5.0 6.0 7.0 8.0"
        },
        {
          "id": "locations",
          "version": "2.0 3.0"
        },
        {
          "id": "service-points",
          "version": "3.0"
        },
        {
          "id": "loan-types",
          "version": "2.0"
        },
        {
          "id": "users",
          "version": "16.0"
        }
      ],
      "provides": [
        {
          "id": "course-reserves-storage",
          "version": "0.3",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courselistings",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get",
                "inventory-storage.service-points.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/courselistings",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get",
                "inventory-storage.service-points.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/courses",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.courses.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/courses",
              "permissionsRequired": [
                "course-reserves-storage.courselisting.courses.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/courses/{c_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.courses.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/courses/{c_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.courses.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/courses/{c_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.courses.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.instructors.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.instructors.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors/{i_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.instructors.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors/{i_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.instructors.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/instructors/{i_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.instructors.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.reserves.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.reserves.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves/{r_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.reserves.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves/{r_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.reserves.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/courselistings/{id}/reserves/{r_id}",
              "permissionsRequired": [
                "course-reserves-storage.courselistings.reserves.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "term-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/terms",
              "permissionsRequired": [
                "course-reserves-storage.terms.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/terms",
              "permissionsRequired": [
                "course-reserves-storage.terms.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/terms/{id}",
              "permissionsRequired": [
                "course-reserves-storage.terms.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/terms/{id}",
              "permissionsRequired": [
                "course-reserves-storage.terms.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/terms/{id}",
              "permissionsRequired": [
                "course-reserves-storage.terms.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "department-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/departments",
              "permissionsRequired": [
                "course-reserves-storage.departments.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/departments",
              "permissionsRequired": [
                "course-reserves-storage.departments.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/departments/{id}",
              "permissionsRequired": [
                "course-reserves-storage.departments.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/departments/{id}",
              "permissionsRequired": [
                "course-reserves-storage.departments.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/departments/{id}",
              "permissionsRequired": [
                "course-reserves-storage.departments.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "course-type-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/coursetypes",
              "permissionsRequired": [
                "course-reserves-storage.course-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/coursetypes",
              "permissionsRequired": [
                "course-reserves-storage.course-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/coursetypes/{id}",
              "permissionsRequired": [
                "course-reserves-storage.course-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/coursetypes/{id}",
              "permissionsRequired": [
                "course-reserves-storage.course-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/coursetypes/{id}",
              "permissionsRequired": [
                "course-reserves-storage.course-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "processing-status-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/processingstatuses",
              "permissionsRequired": [
                "course-reserves-storage.processing-statuses.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/processingstatuses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.processing-statuses.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/processingstatuses",
              "permissionsRequired": [
                "course-reserves-storage.processing-statuses.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/processingstatuses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.processing-statuses.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/processingstatuses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.processing-statuses.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "copyright-status-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/copyrightstatuses",
              "permissionsRequired": [
                "course-reserves-storage.copyright-statuses.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/copyrightstatuses",
              "permissionsRequired": [
                "course-reserves-storage.copyright-statuses.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/copyrightstatuses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.copyright-statuses.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/copyrightstatuses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.copyright-statuses.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/copyrightstatuses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.copyright-statuses.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "role-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/roles",
              "permissionsRequired": [
                "course-reserves-storage.roles.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/roles",
              "permissionsRequired": [
                "course-reserves-storage.roles.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/roles/{id}",
              "permissionsRequired": [
                "course-reserves-storage.roles.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/roles/{id}",
              "permissionsRequired": [
                "course-reserves-storage.roles.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/roles/{id}",
              "permissionsRequired": [
                "course-reserves-storage.roles.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "course-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courses",
              "permissionsRequired": [
                "course-reserves-storage.courses.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/courses",
              "permissionsRequired": [
                "course-reserves-storage.courses.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/courses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.courses.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get",
                "inventory-storage.service-points.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/courses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.courses.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/courses/{id}",
              "permissionsRequired": [
                "course-reserves-storage.courses.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "reserves-storage",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/reserves",
              "permissionsRequired": [
                "course-reserves-storage.reserves.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/coursereserves/reserves",
              "permissionsRequired": [
                "course-reserves-storage.reserves.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/coursereserves/reserves/{id}",
              "permissionsRequired": [
                "course-reserves-storage.reserves.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/coursereserves/reserves/{id}",
              "permissionsRequired": [
                "course-reserves-storage.reserves.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/coursereserves/reserves/{id}",
              "permissionsRequired": [
                "course-reserves-storage.reserves.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "course-reserves-storage.courselistings.collection.get",
          "replaces": [],
          "displayName": "course reserves get courselistings collection",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.item.post",
          "replaces": [],
          "displayName": "course reserves post courselistings item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.item.get",
          "replaces": [],
          "displayName": "course reserves get courselisting item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.item.put",
          "replaces": [],
          "displayName": "course reserves put courselisting item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.item.delete",
          "replaces": [],
          "displayName": "course reserves delete courselisting item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.courses.collection.get",
          "replaces": [],
          "displayName": "course reserves get courses collection for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselisting.courses.item.post",
          "replaces": [],
          "displayName": "course reserves post course item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.courses.item.get",
          "replaces": [],
          "displayName": "course reserves get course item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.courses.item.put",
          "replaces": [],
          "displayName": "course reserves put course item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.courses.item.delete",
          "replaces": [],
          "displayName": "course reserves delete course item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.instructors.collection.get",
          "replaces": [],
          "displayName": "course reserves get instructors collection for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.instructors.item.post",
          "replaces": [],
          "displayName": "course reserves post instructors item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.instructors.item.get",
          "replaces": [],
          "displayName": "course reserves get instructors item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.instructors.item.put",
          "replaces": [],
          "displayName": "course reserves put instructors item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.instructors.item.delete",
          "replaces": [],
          "displayName": "course reserves delete instructors item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.reserves.collection.get",
          "replaces": [],
          "displayName": "course reserves get reserves collection for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.reserves.item.post",
          "replaces": [],
          "displayName": "course reserves post reserves item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.reserves.item.get",
          "replaces": [],
          "displayName": "course reserves get reserves item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.reserves.item.put",
          "replaces": [],
          "displayName": "course reserves put reserves item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.reserves.item.delete",
          "replaces": [],
          "displayName": "course reserves delete reserves item for courselisting",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courselistings.read",
          "replaces": [],
          "displayName": "read permissions for coursereserves courselisting",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.courselistings.collection.get",
            "course-reserves-storage.courselistings.item.get",
            "course-reserves-storage.courselistings.courses.collection.get",
            "course-reserves-storage.courselistings.courses.item.get",
            "course-reserves-storage.courselistings.instructors.collection.get",
            "course-reserves-storage.courselistings.instructors.item.get",
            "course-reserves-storage.courselistings.reserves.collection.get",
            "course-reserves-storage.courselistings.reserves.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.courselistings.write",
          "replaces": [],
          "displayName": "write permissions for coursereserves courselisting",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.courselistings.read",
            "course-reserves-storage.courselistings.item.post",
            "course-reserves-storage.courselistings.item.put",
            "course-reserves-storage.courselistings.item.delete",
            "course-reserves-storage.courselisting.courses.item.post",
            "course-reserves-storage.courselistings.courses.item.put",
            "course-reserves-storage.courselistings.courses.item.delete",
            "course-reserves-storage.courselistings.instructors.item.post",
            "course-reserves-storage.courselistings.instructors.item.put",
            "course-reserves-storage.courselistings.instructors.item.delete",
            "course-reserves-storage.courselistings.reserves.item.post",
            "course-reserves-storage.courselistings.reserves.item.put",
            "course-reserves-storage.courselistings.reserves.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.terms.collection.get",
          "replaces": [],
          "displayName": "course reserves get terms collection",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.terms.item.post",
          "replaces": [],
          "displayName": "course reserves post terms item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.terms.item.get",
          "replaces": [],
          "displayName": "course reserves get terms item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.terms.item.put",
          "replaces": [],
          "displayName": "course reserves put terms item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.terms.item.delete",
          "replaces": [],
          "displayName": "course reserves delete terms item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.terms.read",
          "replaces": [],
          "displayName": "course reserves terms read permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.terms.collection.get",
            "course-reserves-storage.terms.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.terms.write",
          "replaces": [],
          "displayName": "course reserves terms write permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.terms.read",
            "course-reserves-storage.terms.item.post",
            "course-reserves-storage.terms.item.put",
            "course-reserves-storage.terms.item.put",
            "course-reserves-storage.terms.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.departments.collection.get",
          "replaces": [],
          "displayName": "course reserves get departments collection",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.departments.item.post",
          "replaces": [],
          "displayName": "course reserves post departments item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.departments.item.get",
          "replaces": [],
          "displayName": "course reserves get departments item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.departments.item.put",
          "replaces": [],
          "displayName": "course reserves put departments item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.departments.item.delete",
          "replaces": [],
          "displayName": "course reserves delete departments item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.departments.read",
          "replaces": [],
          "displayName": "course reserves departments read permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.departments.collection.get",
            "course-reserves-storage.departments.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.departments.write",
          "replaces": [],
          "displayName": "course reserves departments write permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.departments.read",
            "course-reserves-storage.departments.item.post",
            "course-reserves-storage.departments.item.put",
            "course-reserves-storage.departments.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.course-types.collection.get",
          "replaces": [],
          "displayName": "course reserves get course types collection",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.course-types.item.post",
          "replaces": [],
          "displayName": "course reserves post course types item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.course-types.item.put",
          "replaces": [],
          "displayName": "course reserves put course types item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.course-types.item.get",
          "replaces": [],
          "displayName": "course reserves get course types item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.course-types.item.delete",
          "replaces": [],
          "displayName": "course reserves delete course types item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.course-types.read",
          "replaces": [],
          "displayName": "course reserves course storage read permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.course-types.collection.get",
            "course-reserves-storage.course-types.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.course-types.write",
          "replaces": [],
          "displayName": "course reserves course storage write permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.course-types.read",
            "course-reserves-storage.course-types.item.post",
            "course-reserves-storage.course-types.item.put",
            "course-reserves-storage.course-types.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.processing-statuses.collection.get",
          "replaces": [],
          "displayName": "course reserves get processing statuses collection",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.processing-statuses.item.put",
          "replaces": [],
          "displayName": "course reserves put processing statuses item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.processing-statuses.item.post",
          "replaces": [],
          "displayName": "course reserves post processing statuses item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.processing-statuses.item.get",
          "replaces": [],
          "displayName": "course reserves get processing statuses item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.processing-statuses.item.delete",
          "replaces": [],
          "displayName": "course reserves delete processing statuses item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.processing-statuses.read",
          "replaces": [],
          "displayName": "course reserves processing statuses read permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.processing-statuses.collection.get",
            "course-reserves-storage.processing-statuses.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.processing-statuses.write",
          "replaces": [],
          "displayName": "course reserves processing statuses write permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.processing-statuses.read",
            "course-reserves-storage.processing-statuses.item.put",
            "course-reserves-storage.processing-statuses.item.post",
            "course-reserves-storage.processing-statuses.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.copyright-statuses.collection.get",
          "replaces": [],
          "displayName": "course reserves get copyright statuses collection",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.copyright-statuses.item.put",
          "replaces": [],
          "displayName": "course reserves put copyright statuses item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.copyright-statuses.item.post",
          "replaces": [],
          "displayName": "course reserves post copyright statuses item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.copyright-statuses.item.get",
          "replaces": [],
          "displayName": "course reserves get copyright statuses item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.copyright-statuses.item.delete",
          "replaces": [],
          "displayName": "course reserves delete copyright statuses item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.copyright-statuses.read",
          "replaces": [],
          "displayName": "course reserves copyright statuses read permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.copyright-statuses.collection.get",
            "course-reserves-storage.copyright-statuses.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.copyright-statuses.write",
          "replaces": [],
          "displayName": "course reserves copyright statuses write permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.copyright-statuses.read",
            "course-reserves-storage.copyright-statuses.item.put",
            "course-reserves-storage.copyright-statuses.item.post",
            "course-reserves-storage.copyright-statuses.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.roles.collection.get",
          "replaces": [],
          "displayName": "course reserves get roles collection",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.roles.item.post",
          "replaces": [],
          "displayName": "course reserves post roles item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.roles.item.get",
          "replaces": [],
          "displayName": "course reserves get roles item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.roles.item.put",
          "replaces": [],
          "displayName": "course reserves put roles item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.roles.item.delete",
          "replaces": [],
          "displayName": "course reserves delete roles item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.roles.read",
          "replaces": [],
          "displayName": "course reserves roles read permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.roles.collection.get",
            "course-reserves-storage.roles.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.roles.write",
          "replaces": [],
          "displayName": "course reserves roles write permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.roles.read",
            "course-reserves-storage.roles.item.post",
            "course-reserves-storage.roles.item.put",
            "course-reserves-storage.roles.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.courses.collection.get",
          "replaces": [],
          "displayName": "course reserves get course listing",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courses.item.post",
          "replaces": [],
          "displayName": "course reserves post course item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courses.item.get",
          "replaces": [],
          "displayName": "course reserves get course item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courses.item.put",
          "replaces": [],
          "displayName": "course reserves put course item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courses.item.delete",
          "replaces": [],
          "displayName": "course reserves delete course item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.courses.read",
          "replaces": [],
          "displayName": "course reserves courses read permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.courses.collection.get",
            "course-reserves-storage.courses.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.courses.write",
          "replaces": [],
          "displayName": "course reserves courses write permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.courses.read",
            "course-reserves-storage.courses.item.post",
            "course-reserves-storage.courses.item.put",
            "course-reserves-storage.courses.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.reserves.collection.get",
          "replaces": [],
          "displayName": "course reserves get reserve listing",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.reserves.item.post",
          "replaces": [],
          "displayName": "course reserves post reserve item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.reserves.item.get",
          "replaces": [],
          "displayName": "course reserves get reserve item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.reserves.item.put",
          "replaces": [],
          "displayName": "course reserves put reserve item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.reserves.item.delete",
          "replaces": [],
          "displayName": "course reserves delete reserve item",
          "description": "pending",
          "subPermissions": []
        },
        {
          "permissionName": "course-reserves-storage.reserves.read",
          "replaces": [],
          "displayName": "course reserves reserves read permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.reserves.collection.get",
            "course-reserves-storage.reserves.item.get"
          ]
        },
        {
          "permissionName": "course-reserves-storage.reserves.write",
          "replaces": [],
          "displayName": "course reserves reserves write permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.reserves.read",
            "course-reserves-storage.reserves.item.post",
            "course-reserves-storage.reserves.item.put",
            "course-reserves-storage.reserves.item.delete"
          ]
        },
        {
          "permissionName": "course-reserves-storage.all",
          "replaces": [],
          "displayName": "course reserves all permissions",
          "description": "pending",
          "subPermissions": [
            "course-reserves-storage.terms.write",
            "course-reserves-storage.courselistings.write",
            "course-reserves-storage.roles.write",
            "course-reserves-storage.departments.write",
            "course-reserves-storage.course-types.write",
            "course-reserves-storage.processing-statuses.write",
            "course-reserves-storage.copyright-statuses.write",
            "course-reserves-storage.courses.write",
            "course-reserves-storage.reserves.write"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-courses:1.5.0-SNAPSHOT.170",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "Courses Storage Module"
    },
    {
      "id": "mod-data-export-5.3.0-SNAPSHOT.477",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "source-storage-source-records",
          "version": "3.2"
        },
        {
          "id": "users",
          "version": "15.3 16.0"
        },
        {
          "id": "instance-storage",
          "version": "7.7 8.0 9.0 10.0 11.0"
        },
        {
          "id": "holdings-storage",
          "version": "4.5 5.0 6.0 7.0 8.0"
        },
        {
          "id": "item-storage",
          "version": "8.9 9.0 10.0 11.0"
        },
        {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
        {
          "id": "identifier-types",
          "version": "1.2"
        },
        {
          "id": "contributor-name-types",
          "version": "1.2"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "material-types",
          "version": "2.2"
        },
        {
          "id": "instance-types",
          "version": "2.0"
        },
        {
          "id": "instance-formats",
          "version": "2.0"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "electronic-access-relationships",
          "version": "1.0"
        },
        {
          "id": "modes-of-issuance",
          "version": "1.1"
        },
        {
          "id": "holdings-note-types",
          "version": "1.0"
        },
        {
          "id": "item-note-types",
          "version": "1.0"
        },
        {
          "id": "alternative-title-types",
          "version": "1.0"
        },
        {
          "id": "authority-storage",
          "version": "2.2"
        },
        {
          "id": "loan-types",
          "version": "2.3"
        },
        {
          "id": "user-tenants",
          "version": "1.0"
        },
        {
          "id": "source-storage-stream",
          "version": "1.2"
        },
        {
          "id": "resource-ids-streaming",
          "version": "1.0"
        },
        {
          "id": "call-number-types",
          "version": "1.0"
        },
        {
          "id": "inventory-record-bulk",
          "version": "1.0"
        },
        {
          "id": "consortium-search",
          "version": "2.1"
        },
        {
          "id": "permissions",
          "version": "5.6"
        }
      ],
      "provides": [
        {
          "id": "data-export",
          "version": "5.3",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/export",
              "permissionsRequired": [
                "data-export.export.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get",
                "source-storage.stream.marc-record-identifiers.collection.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.collection.get",
                "configuration.entries.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.location-units.libraries.collection.get",
                "inventory-storage.location-units.campuses.collection.get",
                "inventory-storage.location-units.institutions.collection.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "user-tenants.collection.get",
                "search.resources.ids.jobs.post",
                "search.resources.ids.collection.get",
                "search.resources.ids.jobs.get",
                "consortium-search.holdings.collection.get",
                "consortia.user-tenants.collection.get",
                "consortium-search.holdings.item.get",
                "perms.users.get",
                "permissions.users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/quick-export",
              "permissionsRequired": [
                "data-export.quick.export.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get",
                "source-storage.sourceRecords.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.collection.get",
                "configuration.entries.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.location-units.libraries.collection.get",
                "inventory-storage.location-units.campuses.collection.get",
                "inventory-storage.location-units.institutions.collection.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "user-tenants.collection.get",
                "consortium-search.holdings.collection.get",
                "consortia.user-tenants.collection.get",
                "consortium-search.holdings.item.get",
                "perms.users.get",
                "permissions.users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/file-definitions/{fileDefinitionId}",
              "permissionsRequired": [
                "data-export.file-definitions.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/file-definitions",
              "permissionsRequired": [
                "data-export.file-definitions.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/file-definitions/{fileDefinitionId}/upload",
              "permissionsRequired": [
                "data-export.file-definitions.upload.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.record-bulk.ids.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/job-executions",
              "permissionsRequired": [
                "data-export.job-executions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-export/job-executions/{id}",
              "permissionsRequired": [
                "data-export.job-executions.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/job-executions/{jobId}/download/{fileId}",
              "permissionsRequired": [
                "data-export.job-executions.items.download.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/job-profiles",
              "permissionsRequired": [
                "data-export.job-profiles.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/job-profiles",
              "permissionsRequired": [
                "data-export.job-profiles.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/job-profiles/{jobProfileId}",
              "permissionsRequired": [
                "data-export.job-profiles.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-export/job-profiles/{jobProfileId}",
              "permissionsRequired": [
                "data-export.job-profiles.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-export/job-profiles/{jobProfileId}",
              "permissionsRequired": [
                "data-export.job-profiles.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/mapping-profiles",
              "permissionsRequired": [
                "data-export.mapping-profiles.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/mapping-profiles",
              "permissionsRequired": [
                "data-export.mapping-profiles.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/mapping-profiles/{mappingProfileId}",
              "permissionsRequired": [
                "data-export.mapping-profiles.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-export/mapping-profiles/{mappingProfileId}",
              "permissionsRequired": [
                "data-export.mapping-profiles.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-export/mapping-profiles/{mappingProfileId}",
              "permissionsRequired": [
                "data-export.mapping-profiles.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/transformation-fields",
              "permissionsRequired": [
                "data-export.transformation-fields.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.item-note-types.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/expire-jobs",
              "permissionsRequired": [
                "data-export.expire-jobs.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/logs",
              "permissionsRequired": [
                "data-export.logs.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/clean-up-files",
              "permissionsRequired": [
                "data-export.clean-up-files.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/configuration",
              "permissionsRequired": [
                "data-export.configuration.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/export-all",
              "permissionsRequired": [
                "data-export.export.all"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/related-users",
              "permissionsRequired": [
                "data-export.related-users.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/export-deleted",
              "permissionsRequired": [
                "data-export.export-deleted.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/export-authority-deleted",
              "permissionsRequired": [
                "data-export.export-authority-deleted.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.authorities.collection.get",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export/download-record/{recordId}",
              "permissionsRequired": [
                "data-export.download-record.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.collection.get",
                "okapi.proxy.self.timers.patch"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/expire-jobs",
              "unit": "hour",
              "delay": "6",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export/clean-up-files",
              "unit": "hour",
              "delay": "24",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "consortia",
          "version": "1.1"
        },
        {
          "id": "permissions-users",
          "version": "1.0"
        },
        {
          "id": "users-keycloak",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "data-export.export.post",
          "replaces": [],
          "displayName": "Starts export process",
          "description": "Entry point to start export for the given file definition using job profile",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.quick.export.post",
          "replaces": [],
          "displayName": "Starts quick export process from inventory",
          "description": "Entry point to start quick export process from inventory",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.file-definitions.item.get",
          "replaces": [],
          "displayName": "Data Export - get file definition by id",
          "description": "Entry point to get File Definition by id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-executions.collection.get",
          "replaces": [],
          "displayName": "Data Export - get job execution collection by query",
          "description": "Entry point to get Job Executions by query",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-executions.item.delete",
          "replaces": [],
          "displayName": "Data Export - delete job execution by Id",
          "description": "Permission to delete Job Executions by Id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.file-definitions.upload.post",
          "replaces": [],
          "displayName": "Data Export - upload file",
          "description": "Entry point to upload file",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.file-definitions.item.post",
          "replaces": [],
          "displayName": "Data Export - create new file definition",
          "description": "Entry point to post File Definition",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-executions.items.download.get",
          "replaces": [],
          "displayName": "Data Export - get download link for job and a file",
          "description": "Entry point to get link to download exported files",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-profiles.item.post",
          "replaces": [],
          "displayName": "Data Export - create new job profile",
          "description": "Entry point to post Job Profile",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-profiles.collection.get",
          "replaces": [],
          "displayName": "Data Export - get job profiles collection by query",
          "description": "Entry point to get Job Profiles by query",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-profiles.item.get",
          "replaces": [],
          "displayName": "Data Export - get job profile by id",
          "description": "Entry point to get Job Profiles by id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-profiles.item.put",
          "replaces": [],
          "displayName": "Data Export - update existing job profile by id",
          "description": "Entry point to update Job Profile",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-profiles.item.delete",
          "replaces": [],
          "displayName": "Data Export - delete job profile by id",
          "description": "Entry point to delete Job Profile by id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.mapping-profiles.item.post",
          "replaces": [],
          "displayName": "Data Export - create new mapping profile",
          "description": "Entry point to post Mapping Profile",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.mapping-profiles.item.get",
          "replaces": [],
          "displayName": "Data Export - get mapping profile by id",
          "description": "Entry point to get Mapping Profiles by id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.mapping-profiles.item.put",
          "replaces": [],
          "displayName": "Data Export - update existing mapping profile by id",
          "description": "Entry point to update Mapping Profile",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.mapping-profiles.item.delete",
          "replaces": [],
          "displayName": "Data Export - delete mapping profile by id",
          "description": "Entry point to delete Mapping Profile by id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.mapping-profiles.collection.get",
          "replaces": [],
          "displayName": "Data Export - create get mapping profiles collection",
          "description": "Entry point to get Mapping Profiles collection",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.transformation-fields.collection.get",
          "replaces": [],
          "displayName": "Data Export - get mapping transformation fields collection",
          "description": "Entry point to get mapping transformation fields for the fields",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.expire-jobs.post",
          "replaces": [],
          "displayName": "Data Export - call to expire hung jobs",
          "description": "Entry point to stop freezing job executions",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.logs.collection.get",
          "replaces": [],
          "displayName": "Data Export - get error logs collection",
          "description": "Entry point to get error logs by job execution id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.clean-up-files.post",
          "replaces": [],
          "displayName": "Data Export - call to clean up file definitions and related files",
          "description": "Entry point to start clean up process of file definitions and related files",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.configuration.post",
          "replaces": [],
          "displayName": "Data Export - add or update data export configuration",
          "description": "Entry point to add or update configuration using key/value pair",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.export.all",
          "replaces": [],
          "displayName": "Data Export - export all records",
          "description": "Entry point to export all records of the specific type",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.related-users.collection.get",
          "replaces": [],
          "displayName": "Data Export - related users",
          "description": "To return only users which executed export",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.export-deleted.post",
          "replaces": [],
          "displayName": "Data Export - deleted MARC IDs",
          "description": "To return deleted MARC IDs",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.export-authority-deleted.post",
          "replaces": [],
          "displayName": "Data Export - deleted authorities",
          "description": "To return deleted authorities",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.download-record.item.get",
          "replaces": [],
          "displayName": "Data Export - download record",
          "description": "Entry point to download single record file in the specified format",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.all",
          "replaces": [],
          "displayName": "Data Export - all permissions",
          "description": "Entire set of permissions needed to use the Data Export",
          "subPermissions": [
            "data-export.export.post",
            "data-export.file-definitions.item.get",
            "data-export.file-definitions.item.post",
            "data-export.file-definitions.upload.post",
            "data-export.job-executions.collection.get",
            "data-export.job-executions.item.delete",
            "data-export.job-executions.items.download.get",
            "data-export.job-profiles.item.post",
            "data-export.job-profiles.collection.get",
            "data-export.job-profiles.item.get",
            "data-export.job-profiles.item.put",
            "data-export.job-profiles.item.delete",
            "data-export.mapping-profiles.item.post",
            "data-export.mapping-profiles.collection.get",
            "data-export.mapping-profiles.item.get",
            "data-export.mapping-profiles.item.put",
            "data-export.mapping-profiles.item.delete",
            "data-export.transformation-fields.collection.get",
            "data-export.expire-jobs.post",
            "data-export.logs.collection.get",
            "data-export.clean-up-files.post",
            "data-export.quick.export.post",
            "data-export.configuration.post",
            "data-export.export.all",
            "data-export.related-users.collection.get",
            "data-export.export-deleted.post",
            "data-export.export-authority-deleted.post",
            "data-export.download-record.item.get",
            "perms.users.get",
            "permissions.users.item.get"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-data-export:5.3.0-SNAPSHOT.477",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 542293850,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "10"
          }
        ],
        "dockerCMD": []
      },
      "name": "Data Export Module"
    },
    {
      "id": "mod-data-export-spring-3.6.0-SNAPSHOT.310",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "login",
          "version": "7.0"
        },
        {
          "id": "authtoken",
          "version": "2.0"
        },
        {
          "id": "permissions",
          "version": "5.3"
        },
        {
          "id": "users",
          "version": "15.3 16.0"
        },
        {
          "id": "inventory",
          "version": "14.0"
        },
        {
          "id": "circulation-logs",
          "version": "1.2"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "bulk-edit",
          "version": "4.1"
        }
      ],
      "provides": [
        {
          "id": "data-export-spring",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export-spring/jobs",
              "permissionsRequired": [
                "data-export.job.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export-spring/jobs/{id}",
              "permissionsRequired": [
                "data-export.job.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export-spring/jobs",
              "permissionsRequired": [
                "data-export.job.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "feesfines.accounts.transfer.post",
                "feesfines.accounts-bulk.transfer.post",
                "accounts.collection.get",
                "circulation-logs.collection.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.item.post",
                "configuration.entries.item.put",
                "configuration.entries.item.delete",
                "data-export.job.collection.get",
                "data-export.config.collection.get",
                "feefineactions.collection.get",
                "finance.expense-classes.item.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.identifier-types.item.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.service-points.collection.get",
                "organizations-storage.organizations.item.get",
                "orders-storage.po-lines.collection.get",
                "orders-storage.purchase-orders.collection.get",
                "orders-storage.pieces.collection.get",
                "orders-storage.titles.item.get",
                "transfers.collection.get",
                "users.collection.get",
                "users.item.post",
                "users.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export-spring/jobs/{id}/download",
              "permissionsRequired": [
                "data-export.job.item.download"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "refresh-presigned-url.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export-spring/jobs/{id}/resend",
              "permissionsRequired": [
                "data-export.job.item.resend"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export-spring/configs",
              "permissionsRequired": [
                "data-export.config.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export-spring/configs/{id}",
              "permissionsRequired": [
                "data-export.config.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export-spring/configs",
              "permissionsRequired": [
                "data-export.config.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.item.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-export-spring/configs/{id}",
              "permissionsRequired": [
                "data-export.config.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-export-spring/configs/{id}",
              "permissionsRequired": [
                "data-export.config.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.item.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export-spring/jobs/send",
              "permissionsRequired": [
                "data-export.job.send.item.execute"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "feesfines.accounts.transfer.post",
                "feesfines.accounts-bulk.transfer.post",
                "accounts.collection.get",
                "circulation-logs.collection.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.get",
                "configuration.entries.item.post",
                "configuration.entries.item.put",
                "configuration.entries.item.delete",
                "data-export.job.collection.get",
                "data-export.config.collection.get",
                "feefineactions.collection.get",
                "finance.expense-classes.item.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.identifier-types.item.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.service-points.collection.get",
                "organizations-storage.organizations.item.get",
                "orders-storage.po-lines.collection.get",
                "orders-storage.purchase-orders.collection.get",
                "orders-storage.pieces.collection.get",
                "orders-storage.titles.item.get",
                "transfers.collection.get",
                "users.collection.get",
                "users.item.post",
                "users.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export-spring/job-deletion-intervals",
              "permissionsRequired": [
                "data-export.job-deletion-intervals.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-export-spring/job-deletion-intervals/{exportType}",
              "permissionsRequired": [
                "data-export.job-deletion-intervals.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-export-spring/job-deletion-intervals",
              "permissionsRequired": [
                "data-export.job-deletion-intervals.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-export-spring/job-deletion-intervals/{exportType}",
              "permissionsRequired": [
                "data-export.job-deletion-intervals.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-export-spring/job-deletion-intervals/{exportType}",
              "permissionsRequired": [
                "data-export.job-deletion-intervals.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "login.item.delete",
                "perms.users.item.post",
                "perms.users.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.post",
                "configuration.entries.item.put",
                "perms.users.assign.immutable",
                "data-export.job.collection.get",
                "data-export.config.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/_/jsonSchemas",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "orders",
          "version": "13.0"
        },
        {
          "id": "finance.expense-classes",
          "version": "3.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "data-export.config.collection.get",
          "replaces": [],
          "displayName": "Get data export configurations",
          "description": "Get data export configurations",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job.item.resend",
          "replaces": [],
          "displayName": "Resend EDIFACT export",
          "description": "Resend EDIFACT export",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.config.item.get",
          "replaces": [],
          "displayName": "Get data export configuration by id",
          "description": "Get data export configuration by id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job.item.download",
          "replaces": [],
          "displayName": "Download exported file by job id",
          "description": "Download exported file by job id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.config.item.post",
          "replaces": [],
          "displayName": "Create a data export configuration",
          "description": "Create a data export configuration",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.config.item.put",
          "replaces": [],
          "displayName": "Change a data export configuration",
          "description": "Change a data export configuration",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.config.item.delete",
          "replaces": [],
          "displayName": "Delete data export configuration by id",
          "description": "Delete data export configuration by id",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job.item.post",
          "replaces": [],
          "displayName": "Create/update a data export job",
          "description": "Create/update a data export job",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job.item.get",
          "replaces": [],
          "displayName": "get a data export job",
          "description": "Get a data export job",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job.collection.get",
          "replaces": [],
          "displayName": "get data export jobs",
          "description": "Get data export jobs",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job.send.item.execute",
          "replaces": [
            "data-export.job.item.send"
          ],
          "displayName": "send job to kafka",
          "description": "Send job to Kafka",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.config.all",
          "replaces": [],
          "displayName": "data export configurations - all permissions",
          "description": "All permissions for data export configurations",
          "subPermissions": [
            "data-export.config.collection.get",
            "data-export.config.item.get",
            "data-export.config.item.post",
            "data-export.config.item.put",
            "data-export.config.item.delete"
          ]
        },
        {
          "permissionName": "data-export.job.all",
          "replaces": [],
          "displayName": "data export jobs - all permissions",
          "description": "All permissions for data export jobs",
          "subPermissions": [
            "data-export.job.item.post",
            "data-export.job.item.get",
            "data-export.job.collection.get",
            "data-export.job.item.download",
            "data-export.job.item.resend",
            "data-export.job.send.item.execute"
          ]
        },
        {
          "permissionName": "data-export.edifact.orders.create",
          "replaces": [],
          "displayName": "Edifact export create permission",
          "description": "Edifact export create permission",
          "subPermissions": [
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "data-export.job.item.post",
            "finance.expense-classes.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.service-points.collection.get",
            "organizations-storage.organizations.item.get",
            "orders-storage.po-lines.collection.get",
            "orders-storage.purchase-orders.collection.get",
            "orders-storage.pieces.collection.get"
          ]
        },
        {
          "permissionName": "data-export.job-deletion-intervals.collection.get",
          "replaces": [],
          "displayName": "Get job deletion intervals",
          "description": "Get job deletion intervals",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-deletion-intervals.item.get",
          "replaces": [],
          "displayName": "Get job deletion interval",
          "description": "Get job deletion interval by export type",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-deletion-intervals.item.post",
          "replaces": [],
          "displayName": "Create/update job deletion interval",
          "description": "Create/update job deletion interval",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-deletion-intervals.item.put",
          "replaces": [],
          "displayName": "Update job deletion interval",
          "description": "Update job deletion interval",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-deletion-intervals.item.delete",
          "replaces": [],
          "displayName": "Delete job deletion interval",
          "description": "Delete job deletion interval",
          "subPermissions": []
        },
        {
          "permissionName": "data-export.job-deletion-intervals.all",
          "replaces": [],
          "displayName": "Job deletion intervals - all permissions",
          "description": "All permissions for job deletion intervals",
          "subPermissions": [
            "data-export.job-deletion-intervals.collection.get",
            "data-export.job-deletion-intervals.item.get",
            "data-export.job-deletion-intervals.item.post",
            "data-export.job-deletion-intervals.item.put",
            "data-export.job-deletion-intervals.item.delete"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-data-export-spring:3.6.0-SNAPSHOT.310",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 542293850,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "OKAPI_URL",
            "value": "http://okapi:9130"
          },
          {
            "name": "ENV",
            "value": "folio"
          },
          {
            "name": "JOB_EXPIRATION_PERIOD_DAYS",
            "value": "7"
          },
          {
            "name": "JOB_DOWNLOAD_FILE_CONNECTION_TIMEOUT_MS",
            "value": "5000"
          }
        ],
        "dockerCMD": []
      },
      "metadata": {
        "user": {
          "type": "system",
          "permissions": [
            "data-export.job.item.post",
            "data-export.job.send.item.execute",
            "feesfines.accounts.transfer.post",
            "feesfines.accounts-bulk.transfer.post",
            "accounts.collection.get",
            "circulation-logs.collection.get",
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "configuration.entries.item.delete",
            "data-export.job.collection.get",
            "data-export.config.collection.get",
            "feefineactions.collection.get",
            "finance.expense-classes.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.service-points.collection.get",
            "organizations-storage.organizations.item.get",
            "orders-storage.po-lines.collection.get",
            "orders-storage.purchase-orders.collection.get",
            "orders-storage.pieces.collection.get",
            "orders-storage.titles.item.get",
            "transfers.collection.get",
            "users.collection.get",
            "users.item.post",
            "users.item.put"
          ]
        }
      },
      "name": "Data Export Spring Module"
    },
    {
      "id": "mod-data-export-worker-3.5.0-SNAPSHOT.631",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "users",
          "version": "15.4 16.0"
        },
        {
          "id": "inventory",
          "version": "13.0 14.0"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "feesfines",
          "version": "18.0 19.1"
        },
        {
          "id": "holdings-storage",
          "version": "7.0 8.0"
        },
        {
          "id": "instance-storage",
          "version": "10.0 11.0"
        },
        {
          "id": "call-number-types",
          "version": "1.0"
        },
        {
          "id": "audit",
          "version": "1.1"
        },
        {
          "id": "item-damaged-statuses",
          "version": "1.0"
        },
        {
          "id": "electronic-access-relationships",
          "version": "1.1"
        },
        {
          "id": "instance-authority-links-statistics",
          "version": "2.0"
        },
        {
          "id": "holdings-note-types",
          "version": "1.0"
        },
        {
          "id": "holdings-sources",
          "version": "1.0"
        },
        {
          "id": "holdings-types",
          "version": "1.0"
        },
        {
          "id": "identifier-types",
          "version": "1.2"
        },
        {
          "id": "ill-policies",
          "version": "1.0"
        },
        {
          "id": "item-note-types",
          "version": "1.0"
        },
        {
          "id": "loan-types",
          "version": "2.0"
        },
        {
          "id": "locations",
          "version": "3.1"
        },
        {
          "id": "material-types",
          "version": "2.2"
        },
        {
          "id": "notes",
          "version": "4.0"
        },
        {
          "id": "service-points",
          "version": "3.3"
        },
        {
          "id": "statistical-codes",
          "version": "1.0"
        },
        {
          "id": "statistical-code-types",
          "version": "1.0"
        },
        {
          "id": "instance-note-types",
          "version": "1.0"
        },
        {
          "id": "permissions",
          "version": "5.7"
        },
        {
          "id": "user-tenants",
          "version": "1.0"
        },
        {
          "id": "instance-formats",
          "version": "2.0"
        },
        {
          "id": "instance-types",
          "version": "2.0"
        },
        {
          "id": "modes-of-issuance",
          "version": "1.1"
        },
        {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
        {
          "id": "consortium-search",
          "version": "2.1"
        },
        {
          "id": "source-storage-source-records",
          "version": "3.2"
        },
        {
          "id": "circulation-logs",
          "version": "1.2"
        },
        {
          "id": "instance-statuses",
          "version": "1.0"
        },
        {
          "id": "subject-types",
          "version": "1.0"
        },
        {
          "id": "subject-sources",
          "version": "1.0"
        },
        {
          "id": "classification-types",
          "version": "1.2"
        }
      ],
      "provides": [
        {
          "id": "bulk-edit",
          "version": "4.3",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/refresh-presigned-url",
              "permissionsRequired": [
                "refresh-presigned-url.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-logs.collection.get",
                "feesfines.accounts.transfer.post",
                "feesfines.accounts-bulk.transfer.post",
                "accounts.collection.get",
                "feefineactions.collection.get",
                "users.collection.get",
                "transfers.collection.get",
                "inventory-storage.service-points.collection.get",
                "instance-authority-links.authority-statistics.collection.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.post",
                "configuration.entries.item.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/_/jsonSchemas",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "data-export-spring",
          "version": "2.0"
        },
        {
          "id": "users-keycloak",
          "version": "1.0"
        },
        {
          "id": "permissions-users",
          "version": "1.0"
        },
        {
          "id": "consortia",
          "version": "1.1"
        },
        {
          "id": "custom-fields",
          "version": "3.0"
        },
        {
          "id": "erm",
          "version": "7.0"
        },
        {
          "id": "okapi",
          "version": "1.9"
        },
        {
          "id": "orders-storage.purchase-orders",
          "version": "8.0"
        },
        {
          "id": "order-lines",
          "version": "4.0"
        },
        {
          "id": "orders-storage.po-lines",
          "version": "13.0"
        },
        {
          "id": "orders-storage.pieces",
          "version": "5.0"
        },
        {
          "id": "organizations-storage.organizations",
          "version": "3.3"
        },
        {
          "id": "organizations.organizations",
          "version": "1.2"
        },
        {
          "id": "finance-storage.expense-classes",
          "version": "3.0"
        },
        {
          "id": "eholdings",
          "version": "4.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "refresh-presigned-url.get",
          "replaces": [],
          "displayName": "Get refreshed presigned url for export file",
          "description": "Get refreshed presigned url for export file",
          "subPermissions": []
        },
        {
          "permissionName": "refresh-presigned-url.all",
          "replaces": [],
          "displayName": "refresh-presigned-url all",
          "description": "All permissions for refresh presigned url",
          "subPermissions": [
            "refresh-presigned-url.get"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-data-export-worker:3.5.0-SNAPSHOT.631",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 3072000000,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -XX:MetaspaceSize=384m -XX:MaxMetaspaceSize=512m -Xmx2048m"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "AWS_URL",
            "value": "http://127.0.0.1:9000/"
          },
          {
            "name": "AWS_REGION",
            "value": ""
          },
          {
            "name": "AWS_BUCKET",
            "value": "test-bucket2"
          },
          {
            "name": "AWS_ACCESS_KEY_ID",
            "value": "AKIAIOSFODNN7EXAMPLE"
          },
          {
            "name": "AWS_SECRET_ACCESS_KEY",
            "value": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
          },
          {
            "name": "LOCAL_FS_URL",
            "value": "http://127.0.0.1:9000/"
          },
          {
            "name": "LOCAL_FS_REGION",
            "value": ""
          },
          {
            "name": "LOCAL_FS_BUCKET",
            "value": "local-test-bucket2"
          },
          {
            "name": "LOCAL_FS_ACCESS_KEY_ID",
            "value": "AKIAIOSFODNN7EXAMPLE"
          },
          {
            "name": "LOCAL_FS_SECRET_ACCESS_KEY",
            "value": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
          },
          {
            "name": "LOCAL_FS_COMPOSE_WITH_AWS_SDK",
            "value": "false"
          },
          {
            "name": "ENV",
            "value": "folio"
          }
        ],
        "dockerCMD": []
      },
      "name": "Data Export Worker Module"
    },
    {
      "id": "mod-data-import-3.4.0-SNAPSHOT.336",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        }
      ],
      "provides": [
        {
          "id": "data-import",
          "version": "3.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/splitStatus",
              "permissionsRequired": [
                "data-import.splitconfig.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import/uploadDefinitions",
              "permissionsRequired": [
                "data-import.uploaddefinitions.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobexecutions.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/uploadDefinitions",
              "permissionsRequired": [
                "data-import.uploadDefinitions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}",
              "permissionsRequired": [
                "data-import.uploadDefinitions.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}",
              "permissionsRequired": [
                "data-import.uploaddefinitions.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}",
              "permissionsRequired": [
                "data-import.uploaddefinitions.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobExecutions.item.get",
                "change-manager.jobExecutions.children.collection.get",
                "change-manager.jobExecutions.status.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/files/{fileId}",
              "permissionsRequired": [
                "data-import.upload.file.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobexecutions.post",
                "change-manager.jobExecutions.status.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/files",
              "permissionsRequired": [
                "data-import.uploadDefinitions.files.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobexecutions.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/files/{fileId}/assembleStorageFile",
              "permissionsRequired": [
                "data-import.assembleStorageFile.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobExecutions.status.item.put",
                "change-manager.jobExecutions.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/files/{fileId}",
              "permissionsRequired": [
                "data-import.uploaddefinitions.files.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobExecutions.status.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import/uploadDefinitions/{uploadDefinitionId}/processFiles",
              "permissionsRequired": [
                "data-import.uploadDefinitions.processFiles.item.post"
              ],
              "permissionsDesired": [
                "consortia.data-import.central-record-update.execute",
                "invoices.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.manage",
                "orders.item.approve",
                "orders.item.reopen",
                "orders.item.unopen"
              ],
              "modulePermissions": [
                "change-manager.jobExecutions.item.get",
                "change-manager.jobExecutions.children.collection.get",
                "change-manager.jobexecutions.post",
                "change-manager.jobExecutions.item.put",
                "change-manager.jobExecutions.status.item.put",
                "change-manager.jobExecutions.jobProfile.item.put",
                "mapping-metadata.item.get",
                "source-storage.records.collection.get",
                "source-storage.records.item.get",
                "source-storage.snapshots.item.get",
                "source-storage.snapshots.collection.get",
                "source-storage.snapshots.put",
                "users.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.instance-note-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.instance-statuses.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.instance-relationship-types.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-sources.collection.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.statistical-code-types.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.authority-note-types.collection.get",
                "inventory-storage.authority-source-files.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.authorities.collection.get",
                "inventory-storage.authorities.item.get",
                "inventory-storage.authorities.item.post",
                "inventory-storage.authorities.item.put",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.subject-sources.collection.get",
                "inventory-storage.subject-types.collection.get",
                "inventory-storage.instance-date-types.collection.get",
                "converter-storage.field-protection-settings.item.get",
                "converter-storage.field-protection-settings.collection.get",
                "converter-storage.jobprofilesnapshots.get",
                "invoice-storage.invoices.item.post",
                "invoice-storage.invoice-number.get",
                "acquisitions-units.units.collection.get",
                "acquisitions-units.memberships.collection.get",
                "invoice-storage.invoice-line-number.get",
                "invoice-storage.invoices.item.get",
                "invoice-storage.invoices.item.put",
                "invoice-storage.invoice-lines.item.post",
                "invoice-storage.invoice-lines.item.put",
                "invoice-storage.invoice-lines.collection.get",
                "acquisitions-units.units.collection.get",
                "acquisitions-units.memberships.collection.get",
                "orders.po-lines.item.get",
                "orders.po-lines.collection.get",
                "orders-storage.titles.item.get",
                "orders-storage.order-invoice-relationships.collection.get",
                "orders-storage.order-invoice-relationships.item.post",
                "finance.exchange-rate.item.get",
                "finance.expense-classes.collection.get",
                "finance.funds.budget.item.get",
                "finance.funds.item.get",
                "finance.fiscal-years.item.get",
                "finance.ledgers.collection.get",
                "finance.transactions.batch.execute",
                "finance.transactions.collection.get",
                "finance-storage.budgets.collection.get",
                "finance-storage.budget-expense-classes.collection.get",
                "finance-storage.fiscal-years.item.get",
                "modperms.orders.item.post",
                "modperms.orders.item.put",
                "orders-storage.purchase-orders.item.get",
                "orders-storage.po-line-number.get",
                "orders-storage.po-lines.collection.get",
                "orders-storage.po-lines.item.post",
                "orders-storage.configuration.prefixes.collection.get",
                "orders-storage.configuration.suffixes.collection.get",
                "configuration.entries.collection.get",
                "acquisitions-units-storage.units.collection.get",
                "acquisitions-units-storage.memberships.collection.get",
                "isbn-utils.convert-to-13.get",
                "instance-authority-links.instances.collection.get",
                "instance-authority-links.instances.collection.put",
                "instance-authority.linking-rules.collection.get",
                "user-tenants.collection.get",
                "organizations.organizations.collection.get",
                "source-storage.records.post",
                "source-storage.records.put",
                "source-storage.snapshots.post",
                "source-storage.records.matching.collection.post",
                "source-storage.records.formatted.item.get",
                "source-storage.records.generation.item.put",
                "finance.funds.collection.get",
                "orders-storage.acquisition-methods.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/fileExtensions",
              "permissionsRequired": [
                "data-import.fileExtensions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import/fileExtensions",
              "permissionsRequired": [
                "data-import.fileExtensions.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/fileExtensions/{id}",
              "permissionsRequired": [
                "data-import.fileExtensions.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-import/fileExtensions/{id}",
              "permissionsRequired": [
                "data-import.fileExtensions.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import/fileExtensions/{id}",
              "permissionsRequired": [
                "data-import.fileExtensions.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import/fileExtensions/restore/default",
              "permissionsRequired": [
                "data-import.fileExtensions.default.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/dataTypes",
              "permissionsRequired": [
                "data-import.datatypes.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/uploadUrl",
              "permissionsRequired": [
                "data-import.uploadUrl.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/uploadUrl/subsequent",
              "permissionsRequired": [
                "data-import.uploadUrl.subsequent.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/jobExecutions/{id}/downloadUrl",
              "permissionsRequired": [
                "data-import.downloadUrl.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import/jobExecutions/{jobExecutionId}/cancel",
              "permissionsRequired": [
                "data-import.jobexecution.cancel"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobExecutions.item.put",
                "change-manager.jobExecutions.status.item.put",
                "change-manager.records.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import/testFileSplit",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "data-import.assembleStorageFile.post",
          "replaces": [],
          "displayName": "Data Import - assemble a file out of uploaded fragments",
          "description": "Permission to assemble a file out of uploaded fragments",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.splitconfig.get",
          "replaces": [],
          "displayName": "Data Import - get the status of file splitting configuration",
          "description": "Get the status of file splitting configuration",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploaddefinitions.post",
          "replaces": [],
          "displayName": "Data Import - create new upload definition",
          "description": "Post Upload Definition",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploadDefinitions.item.get",
          "replaces": [
            "data-import.uploaddefinitions.get"
          ],
          "displayName": "Data Import - get upload definition item",
          "description": "Get Upload Definition item",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploadDefinitions.collection.get",
          "replaces": [
            "data-import.uploaddefinitions.get"
          ],
          "displayName": "Data Import - get upload definition collection",
          "description": "Get Upload Definition collection",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploaddefinitions.put",
          "replaces": [],
          "displayName": "Data Import - update upload definition",
          "description": "Put Upload Definition",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploaddefinitions.delete",
          "replaces": [],
          "displayName": "Data Import - delete upload definition",
          "description": "Delete Upload Definition",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.upload.file.post",
          "replaces": [],
          "displayName": "Data Import - upload file into the storage",
          "description": "Upload file",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploaddefinitions.files.delete",
          "replaces": [],
          "displayName": "Data Import - delete file from upload definition and storage",
          "description": "Delete file",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploadDefinitions.files.item.post",
          "replaces": [
            "data-import.uploaddefinitions.files.post"
          ],
          "displayName": "Data Import - Create new File Definition",
          "description": "Create and handle File Definition",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploadDefinitions.processFiles.item.post",
          "replaces": [
            "data-import.uploaddefinitions.files.post"
          ],
          "displayName": "Data Import - Create new Process File Definition",
          "description": "Create and handle Process File Definition",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.fileExtensions.item.get",
          "replaces": [
            "data-import.fileExtensions.get"
          ],
          "displayName": "Data Import - get file extension",
          "description": "Get FileExtension",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.fileExtensions.collection.get",
          "replaces": [
            "data-import.fileExtensions.get"
          ],
          "displayName": "Data Import - get file extensions",
          "description": "Get FileExtensions",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.fileExtensions.post",
          "replaces": [],
          "displayName": "Data Import - create new file extension",
          "description": "Post FileExtension",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.fileExtensions.put",
          "replaces": [],
          "displayName": "Data Import - update file extension",
          "description": "Put FileExtension",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.fileExtensions.delete",
          "replaces": [],
          "displayName": "Data Import - delete file extension",
          "description": "Delete FileExtension",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.fileExtensions.default.post",
          "replaces": [
            "data-import.fileExtensions.default"
          ],
          "displayName": "Data Import - restore file extensions to default",
          "description": "Restore FileExtension to default",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.datatypes.get",
          "replaces": [],
          "displayName": "Data Import - get data types",
          "description": "Get DataTypes",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploadUrl.item.get",
          "replaces": [
            "data-import.uploadUrl.get"
          ],
          "displayName": "Data Import - get S3 upload URL for the first part of a file",
          "description": "Get S3 upload URL for the first part of a file",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.uploadUrl.subsequent.item.get",
          "replaces": [
            "data-import.uploadUrl.get"
          ],
          "displayName": "Data Import - get S3 upload URL for the last part of a file",
          "description": "Get S3 upload URL for the last part of a file",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.downloadUrl.get",
          "replaces": [],
          "displayName": "Data Import - get S3 download URL",
          "description": "Get S3 download URL",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.jobexecution.cancel",
          "replaces": [],
          "displayName": "Data Import - cancel running job",
          "description": "Cancel running job",
          "subPermissions": []
        },
        {
          "permissionName": "data-import.upload.all",
          "replaces": [],
          "displayName": "Data Import File Upload - all permissions",
          "description": "Entire set of permissions needed to use file uploads",
          "subPermissions": [
            "data-import.upload.file.post",
            "data-import.uploadUrl.item.get",
            "data-import.uploadUrl.subsequent.item.get",
            "data-import.uploaddefinitions.post",
            "data-import.uploadDefinitions.item.get",
            "data-import.uploadDefinitions.collection.get",
            "data-import.uploaddefinitions.put",
            "data-import.uploaddefinitions.delete",
            "data-import.uploaddefinitions.files.delete",
            "data-import.uploadDefinitions.files.item.post",
            "data-import.uploadDefinitions.processFiles.item.post",
            "data-import.fileExtensions.item.get",
            "data-import.fileExtensions.collection.get",
            "data-import.fileExtensions.post",
            "data-import.fileExtensions.put",
            "data-import.fileExtensions.delete",
            "data-import.fileExtensions.default.post",
            "data-import.datatypes.get"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-data-import:3.4.0-SNAPSHOT.336",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 542293850,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "AWS_URL",
            "value": "http://127.0.0.1:9000/"
          },
          {
            "name": "AWS_REGION",
            "value": ""
          },
          {
            "name": "AWS_BUCKET",
            "value": "example-bucket"
          },
          {
            "name": "AWS_ACCESS_KEY_ID",
            "value": "AKIAIOSFODNN7EXAMPLE"
          },
          {
            "name": "AWS_SECRET_ACCESS_KEY",
            "value": "wJalrXUtnFEMI/K7MDENG/EXAMPLEKEY"
          },
          {
            "name": "AWS_SDK",
            "value": "false"
          },
          {
            "name": "S3_FORCEPATHSTYLE",
            "value": "false"
          },
          {
            "name": "SPLIT_FILES_ENABLED",
            "value": "false"
          },
          {
            "name": "RECORDS_PER_SPLIT_FILE",
            "value": "1000"
          },
          {
            "name": "SCORE_JOB_SMALLEST",
            "value": "40"
          },
          {
            "name": "SCORE_JOB_LARGEST",
            "value": "-40"
          },
          {
            "name": "SCORE_JOB_REFERENCE",
            "value": "100000"
          },
          {
            "name": "SCORE_AGE_NEWEST",
            "value": "0"
          },
          {
            "name": "SCORE_AGE_OLDEST",
            "value": "50"
          },
          {
            "name": "SCORE_AGE_EXTREME_THRESHOLD_MINUTES",
            "value": "480"
          },
          {
            "name": "SCORE_AGE_EXTREME_VALUE",
            "value": "10000"
          },
          {
            "name": "SCORE_TENANT_USAGE_MIN",
            "value": "100"
          },
          {
            "name": "SCORE_TENANT_USAGE_MAX",
            "value": "-200"
          },
          {
            "name": "SCORE_PART_NUMBER_FIRST",
            "value": "1"
          },
          {
            "name": "SCORE_PART_NUMBER_LAST",
            "value": "0"
          },
          {
            "name": "SCORE_PART_NUMBER_LAST_REFERENCE",
            "value": "100"
          },
          {
            "name": "ASYNC_PROCESSOR_POLL_INTERVAL_MS",
            "value": "5000"
          },
          {
            "name": "ASYNC_PROCESSOR_MAX_WORKERS_COUNT",
            "value": "1"
          }
        ],
        "dockerCMD": []
      },
      "name": "Data Import Module"
    },
    {
      "id": "mod-di-converter-storage-2.5.0-SNAPSHOT.76",
      "replaces": [
        "mod-data-import-converter-storage"
      ],
      "tags": [],
      "requires": [
        {
          "id": "users",
          "version": "16.3"
        }
      ],
      "provides": [
        {
          "id": "data-import-converter-storage",
          "version": "1.5",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/jobProfiles",
              "permissionsRequired": [
                "converter-storage.jobprofile.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import-profiles/jobProfiles",
              "permissionsRequired": [
                "converter-storage.jobprofile.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/jobProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.jobprofile.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-import-profiles/jobProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.jobprofile.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import-profiles/jobProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.jobprofile.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/matchProfiles",
              "permissionsRequired": [
                "converter-storage.matchprofile.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import-profiles/matchProfiles",
              "permissionsRequired": [
                "converter-storage.matchprofile.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/matchProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.matchprofile.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-import-profiles/matchProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.matchprofile.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import-profiles/matchProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.matchprofile.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/actionProfiles",
              "permissionsRequired": [
                "converter-storage.actionprofile.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import-profiles/actionProfiles",
              "permissionsRequired": [
                "converter-storage.actionprofile.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/actionProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.actionprofile.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-import-profiles/actionProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.actionprofile.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import-profiles/actionProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.actionprofile.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/mappingProfiles",
              "permissionsRequired": [
                "converter-storage.mappingprofile.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import-profiles/mappingProfiles",
              "permissionsRequired": [
                "converter-storage.mappingprofile.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/mappingProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.mappingprofile.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-import-profiles/mappingProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.mappingprofile.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import-profiles/mappingProfiles/{id}",
              "permissionsRequired": [
                "converter-storage.mappingprofile.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/profileAssociations",
              "permissionsRequired": [
                "converter-storage.profileassociations.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import-profiles/profileAssociations",
              "permissionsRequired": [
                "converter-storage.profileassociation.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/profileAssociations/{id}",
              "permissionsRequired": [
                "converter-storage.profileassociations.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/data-import-profiles/profileAssociations/{id}",
              "permissionsRequired": [
                "converter-storage.profileassociation.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/data-import-profiles/profileAssociations/{id}",
              "permissionsRequired": [
                "converter-storage.profileassociation.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/profileAssociations/{masterId}/details",
              "permissionsRequired": [
                "converter-storage.profileassociations.details.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/profileAssociations/{detailId}/masters",
              "permissionsRequired": [
                "converter-storage.profileassociations.masters.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/jobProfileSnapshots/{id}",
              "permissionsRequired": [
                "converter-storage.jobprofilesnapshots.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import-profiles/jobProfileSnapshots/{id}",
              "permissionsRequired": [
                "converter-storage.jobprofilesnapshots.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/entityTypes",
              "permissionsRequired": [
                "converter-storage.entitytypes.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/data-import-profiles/profileSnapshots/{profileId}",
              "permissionsRequired": [
                "converter-storage.profileSnapshots.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/data-import-profiles/profileSnapshots",
              "permissionsRequired": [
                "converter-storage.profileSnapshots.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "converter-storage-forms-configs",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/converter-storage/forms/configs",
              "permissionsRequired": [
                "converter-storage.forms-configs.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/converter-storage/forms/configs",
              "permissionsRequired": [
                "converter-storage.forms-configs.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/converter-storage/forms/configs/{formName}",
              "permissionsRequired": [
                "converter-storage.forms-configs.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/converter-storage/forms/configs/{formName}",
              "permissionsRequired": [
                "converter-storage.forms-configs.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/converter-storage/forms/configs/{formName}",
              "permissionsRequired": [
                "converter-storage.forms-configs.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "field-protection-settings",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/field-protection-settings/marc",
              "permissionsRequired": [
                "converter-storage.field-protection-settings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/field-protection-settings/marc",
              "permissionsRequired": [
                "converter-storage.field-protection-settings.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/field-protection-settings/marc/{id}",
              "permissionsRequired": [
                "converter-storage.field-protection-settings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/field-protection-settings/marc/{id}",
              "permissionsRequired": [
                "converter-storage.field-protection-settings.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/field-protection-settings/marc/{id}",
              "permissionsRequired": [
                "converter-storage.field-protection-settings.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "converter-storage.jobprofile.item.get",
          "replaces": [
            "converter-storage.jobprofile.get"
          ],
          "displayName": "Data Import Converter Storage - get Job Profile",
          "description": "Get Job Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.jobprofile.collection.get",
          "replaces": [
            "converter-storage.jobprofile.get"
          ],
          "displayName": "Data Import Converter Storage - get Job Profiles",
          "description": "Get Job Profiles",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.jobprofile.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - create Job Profile",
          "description": "Post Job Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.jobprofile.put",
          "replaces": [],
          "displayName": "Data Import Converter Storage - update Job Profile",
          "description": "Put Job Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.jobprofile.delete",
          "replaces": [],
          "displayName": "Data Import Converter Storage - delete Job Profile",
          "description": "Delete Job Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.matchprofile.item.get",
          "replaces": [
            "converter-storage.matchprofile.get"
          ],
          "displayName": "Data Import Converter Storage - get Match Profile",
          "description": "Get Match Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.matchprofile.collection.get",
          "replaces": [
            "converter-storage.matchprofile.get"
          ],
          "displayName": "Data Import Converter Storage - get Match Profiles",
          "description": "Get Match Profiles",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.matchprofile.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - create Match Profile",
          "description": "Post Match Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.matchprofile.put",
          "replaces": [],
          "displayName": "Data Import Converter Storage - update Match Profile",
          "description": "Put Match Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.matchprofile.delete",
          "replaces": [],
          "displayName": "Data Import Converter Storage - delete Match Profile",
          "description": "Delete Match Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.actionprofile.item.get",
          "replaces": [
            "converter-storage.actionprofile.get"
          ],
          "displayName": "Data Import Converter Storage - get Action Profile",
          "description": "Get Action Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.actionprofile.collection.get",
          "replaces": [
            "converter-storage.actionprofile.get"
          ],
          "displayName": "Data Import Converter Storage - get Action Profiles",
          "description": "Get Action Profiles",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.actionprofile.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - create Action Profile",
          "description": "Post Action Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.actionprofile.put",
          "replaces": [],
          "displayName": "Data Import Converter Storage - update Action Profile",
          "description": "Put Action Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.actionprofile.delete",
          "replaces": [],
          "displayName": "Data Import Converter Storage - delete Action Profile",
          "description": "Delete Action Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.mappingprofile.item.get",
          "replaces": [
            "converter-storage.mappingprofile.get"
          ],
          "displayName": "Data Import Converter Storage - get Mapping Profile(",
          "description": "Get Mapping Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.mappingprofile.collection.get",
          "replaces": [
            "converter-storage.mappingprofile.get"
          ],
          "displayName": "Data Import Converter Storage - get Mapping Profiles",
          "description": "Get Mapping Profiles",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.mappingprofile.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - create Mapping Profile",
          "description": "Post Mapping Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.mappingprofile.put",
          "replaces": [],
          "displayName": "Data Import Converter Storage - update Mapping Profile",
          "description": "Put Mapping Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.mappingprofile.delete",
          "replaces": [],
          "displayName": "Data Import Converter Storage - delete Mapping Profile",
          "description": "Delete Mapping Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.entitytypes.get",
          "replaces": [],
          "displayName": "Data Import Converter Storage - get Entity types",
          "description": "Get collection of entity types",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileassociation.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - create Profile Association",
          "description": "Post Profile Association",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileassociations.item.get",
          "replaces": [
            "converter-storage.profileassociation.get"
          ],
          "displayName": "Data Import Converter Storage - get Profile Association",
          "description": "Get Profile Association",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileassociations.collection.get",
          "replaces": [
            "converter-storage.profileassociation.get"
          ],
          "displayName": "Data Import Converter Storage - get Profile Associations",
          "description": "Get Profile Associations",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileassociations.details.item.get",
          "replaces": [
            "converter-storage.profileassociation.get"
          ],
          "displayName": "Data Import Converter Storage - get Details Profiles by Master Profile id",
          "description": "Get Details Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileassociations.masters.item.get",
          "replaces": [
            "converter-storage.profileassociation.get"
          ],
          "displayName": "Data Import Converter Storage - get Masters Profiles by Detail Profile id",
          "description": "Get Masters Profile",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileassociation.put",
          "replaces": [],
          "displayName": "Data Import Converter Storage - update Profile Association",
          "description": "Put Profile Association",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileassociation.delete",
          "replaces": [],
          "displayName": "Data Import Converter Storage - delete Profile Association",
          "description": "Delete Profile Association",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.jobprofilesnapshots.get",
          "replaces": [],
          "displayName": "Data Import Converter Storage - get Job Profile Snapshot",
          "description": "Get Job Profile Snapshot",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.jobprofilesnapshots.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - create Job Profile Snapshot",
          "description": "Post Job Profile Snapshot",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileSnapshots.get",
          "replaces": [],
          "displayName": "Data Import Converter Storage - get Profile Snapshot",
          "description": "Get Profile Snapshot",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.profileSnapshots.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - create Profile Snapshot",
          "description": "Post Profile Snapshot",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.forms-configs.item.get",
          "replaces": [
            "converter-storage.forms-configs.get"
          ],
          "displayName": "Data Import Converter Storage - get Form Config",
          "description": "Get Form Config",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.forms-configs.collection.get",
          "replaces": [
            "converter-storage.forms-configs.get"
          ],
          "displayName": "Data Import Converter Storage - get Form Configs",
          "description": "Get Form Configs",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.forms-configs.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - create Form Config",
          "description": "Post Form Config",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.forms-configs.put",
          "replaces": [],
          "displayName": "Data Import Converter Storage - update Form Config",
          "description": "Put Form Config",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.forms-configs.delete",
          "replaces": [],
          "displayName": "Data Import Converter Storage - delete Form Config",
          "description": "Delete Form Config",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.field-protection-settings.item.get",
          "replaces": [
            "converter-storage.field-protection-settings.get"
          ],
          "displayName": "Data Import Converter Storage - get field protection settings",
          "description": "Get Field Protection Settings",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.field-protection-settings.collection.get",
          "replaces": [
            "converter-storage.field-protection-settings.get"
          ],
          "displayName": "Data Import Converter Storage - get field protection settings collection",
          "description": "Get Field Protection Settings collection",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.field-protection-settings.post",
          "replaces": [],
          "displayName": "Data Import Converter Storage - save field protection setting",
          "description": "Post Field Protection Setting",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.field-protection-settings.put",
          "replaces": [],
          "displayName": "Data Import Converter Storage - update field protection setting",
          "description": "Put Field Protection Setting",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.field-protection-settings.delete",
          "replaces": [],
          "displayName": "Data Import Converter Storage - delete field protection setting",
          "description": "Delete Field Protection Setting",
          "subPermissions": []
        },
        {
          "permissionName": "converter-storage.all",
          "replaces": [],
          "displayName": "Data Import Converter Storage - all permissions",
          "description": "Entire set of permissions needed to manage Profiles",
          "subPermissions": [
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "converter-storage.jobprofile.post",
            "converter-storage.jobprofile.put",
            "converter-storage.jobprofile.delete",
            "converter-storage.matchprofile.item.get",
            "converter-storage.matchprofile.collection.get",
            "converter-storage.matchprofile.post",
            "converter-storage.matchprofile.put",
            "converter-storage.matchprofile.delete",
            "converter-storage.actionprofile.item.get",
            "converter-storage.actionprofile.collection.get",
            "converter-storage.actionprofile.post",
            "converter-storage.actionprofile.put",
            "converter-storage.actionprofile.delete",
            "converter-storage.mappingprofile.item.get",
            "converter-storage.mappingprofile.collection.get",
            "converter-storage.mappingprofile.post",
            "converter-storage.mappingprofile.put",
            "converter-storage.mappingprofile.delete",
            "converter-storage.profileassociation.post",
            "converter-storage.profileassociations.item.get",
            "converter-storage.profileassociations.collection.get",
            "converter-storage.profileassociations.details.item.get",
            "converter-storage.profileassociations.masters.item.get",
            "converter-storage.profileassociation.put",
            "converter-storage.profileassociation.delete",
            "converter-storage.jobprofilesnapshots.get",
            "converter-storage.jobprofilesnapshots.post",
            "converter-storage.entitytypes.get",
            "converter-storage.profileSnapshots.get",
            "converter-storage.profileSnapshots.post",
            "converter-storage.forms-configs.item.get",
            "converter-storage.forms-configs.collection.get",
            "converter-storage.forms-configs.post",
            "converter-storage.forms-configs.put",
            "converter-storage.forms-configs.delete",
            "converter-storage.field-protection-settings.item.get",
            "converter-storage.field-protection-settings.collection.get",
            "converter-storage.field-protection-settings.post",
            "converter-storage.field-protection-settings.put",
            "converter-storage.field-protection-settings.delete"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-di-converter-storage:2.5.0-SNAPSHOT.76",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "Data Import Converter Storage"
    },
    {
      "id": "mod-email-1.20.0-SNAPSHOT.93",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "configuration",
          "version": "2.0"
        }
      ],
      "provides": [
        {
          "id": "email",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/email",
              "permissionsRequired": [
                "email.message.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.collection.get",
                "configuration.entries.item.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/email",
              "permissionsRequired": [
                "email.message.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "delayedTasks",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/delayedTask/expiredMessages",
              "permissionsRequired": [
                "email.message.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "smtpConfiguration",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/smtp-configuration",
              "permissionsRequired": [
                "email.smtp-configuration.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/smtp-configuration/{smtpConfigurationId}",
              "permissionsRequired": [
                "email.smtp-configuration.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/smtp-configuration",
              "permissionsRequired": [
                "email.smtp-configuration.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/smtp-configuration/{smtpConfigurationId}",
              "permissionsRequired": [
                "email.smtp-configuration.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/smtp-configuration/{smtpConfigurationId}",
              "permissionsRequired": [
                "email.smtp-configuration.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/delayedTask/expiredMessages",
              "unit": "minute",
              "delay": "30",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/delayedTask/retryFailedEmails",
              "unit": "minute",
              "delay": "5",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.collection.get",
                "configuration.entries.item.delete"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "email.message.post",
          "replaces": [],
          "displayName": "message - send email notifications",
          "description": "send email notifications",
          "subPermissions": []
        },
        {
          "permissionName": "email.message.collection.get",
          "replaces": [],
          "displayName": "get email messages",
          "description": "get all email messages by query",
          "subPermissions": []
        },
        {
          "permissionName": "email.message.delete",
          "replaces": [],
          "displayName": "delete email message",
          "description": "delete email messages by expiration date or status",
          "subPermissions": []
        },
        {
          "permissionName": "email.message.all",
          "replaces": [],
          "displayName": "email entries - all permissions",
          "description": "Entire set of permissions needed to use the email module",
          "subPermissions": [
            "email.message.post",
            "email.message.collection.get",
            "email.message.delete"
          ],
          "visible": false
        },
        {
          "permissionName": "email.smtp-configuration.collection.get",
          "replaces": [],
          "displayName": "get SMTP configurations",
          "description": "get configuration of the SMTP server",
          "subPermissions": []
        },
        {
          "permissionName": "email.smtp-configuration.item.get",
          "replaces": [],
          "displayName": "get SMTP configuration",
          "description": "get configuration of the SMTP server",
          "subPermissions": []
        },
        {
          "permissionName": "email.smtp-configuration.item.post",
          "replaces": [],
          "displayName": "create SMTP configuration",
          "description": "create configuration of the SMTP server",
          "subPermissions": []
        },
        {
          "permissionName": "email.smtp-configuration.item.put",
          "replaces": [],
          "displayName": "update SMTP configuration",
          "description": "update configuration of the SMTP server",
          "subPermissions": []
        },
        {
          "permissionName": "email.smtp-configuration.item.delete",
          "replaces": [],
          "displayName": "delete SMTP configuration",
          "description": "delete configuration of the SMTP server",
          "subPermissions": []
        },
        {
          "permissionName": "email.smtp-configuration.all",
          "replaces": [],
          "displayName": "SMTP configuration - all permissions",
          "description": "Entire set of permissions needed to manage SMTP configuration",
          "subPermissions": [
            "email.smtp-configuration.collection.get",
            "email.smtp-configuration.item.get",
            "email.smtp-configuration.item.post",
            "email.smtp-configuration.item.put",
            "email.smtp-configuration.item.delete"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-email:1.20.0-SNAPSHOT.93",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "email"
    },
    {
      "id": "mod-entities-links-4.1.0-SNAPSHOT.347",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "login",
          "version": "7.0"
        },
        {
          "id": "permissions",
          "version": "5.3"
        },
        {
          "id": "users",
          "version": "16.0"
        },
        {
          "id": "source-storage-source-records",
          "version": "3.2"
        },
        {
          "id": "instance-storage",
          "version": "10.0 11.0"
        },
        {
          "id": "mapping-rules-provider",
          "version": "2.0"
        },
        {
          "id": "settings",
          "version": "1.0"
        },
        {
          "id": "source-storage-batch",
          "version": "1.3"
        }
      ],
      "provides": [
        {
          "id": "instance-authority-links",
          "version": "2.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/links/instances/{instanceId}",
              "permissionsRequired": [
                "instance-authority-links.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/links/instances/{instanceId}",
              "permissionsRequired": [
                "instance-authority-links.instances.collection.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "source-storage.parsed-records.fetch.collection.post",
                "mapping-metadata.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.put",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/links/authorities/bulk/count",
              "permissionsRequired": [
                "instance-authority-links.authorities.bulk.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-authority-linking-rules",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/linking-rules/instance-authority",
              "permissionsRequired": [
                "instance-authority.linking-rules.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/linking-rules/instance-authority/{linkId}",
              "permissionsRequired": [
                "instance-authority.linking-rules.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PATCH"
              ],
              "pathPattern": "/linking-rules/instance-authority/{linkId}",
              "permissionsRequired": [
                "instance-authority.linking-rules.item.patch"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-authority-links-statistics",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/links/stats/authority",
              "permissionsRequired": [
                "instance-authority-links.authority-statistics.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/links/stats/instance",
              "permissionsRequired": [
                "instance-authority-links.instance-statistics.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-authority-links-suggestions",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/links-suggestions/marc",
              "permissionsRequired": [
                "instance-authority-links.suggestions.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "source-storage.parsed-records.fetch.collection.post",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "authority-storage",
          "version": "2.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/authority-storage/authorities",
              "permissionsRequired": [
                "inventory-storage.authorities.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/authority-storage/authorities/{id}",
              "permissionsRequired": [
                "inventory-storage.authorities.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/authority-storage/authorities",
              "permissionsRequired": [
                "inventory-storage.authorities.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/authority-storage/authorities/bulk",
              "permissionsRequired": [
                "inventory-storage.authorities.bulk.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/authority-storage/authorities/{id}",
              "permissionsRequired": [
                "inventory-storage.authorities.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/authority-storage/authorities/{id}",
              "permissionsRequired": [
                "inventory-storage.authorities.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "authority-note-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/authority-note-types",
              "permissionsRequired": [
                "inventory-storage.authority-note-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/authority-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.authority-note-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/authority-note-types",
              "permissionsRequired": [
                "inventory-storage.authority-note-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/authority-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.authority-note-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/authority-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.authority-note-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "authority-source-files",
          "version": "2.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/authority-source-files",
              "permissionsRequired": [
                "inventory-storage.authority-source-files.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/authority-source-files/{id}",
              "permissionsRequired": [
                "inventory-storage.authority-source-files.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/authority-source-files",
              "permissionsRequired": [
                "inventory-storage.authority-source-files.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PATCH"
              ],
              "pathPattern": "/authority-source-files/{id}",
              "permissionsRequired": [
                "inventory-storage.authority-source-files.item.patch"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/authority-source-files/{id}",
              "permissionsRequired": [
                "inventory-storage.authority-source-files.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/authority-source-files/{id}/hrid",
              "permissionsRequired": [
                "inventory-storage.authority-source-files.hrid.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "login.item.delete",
                "perms.users.get",
                "perms.users.item.post",
                "perms.users.assign.immutable",
                "perms.users.assign.mutable"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "authority-reindex",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/authority-storage/reindex",
              "permissionsRequired": [
                "authority-storage.authority.reindex.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/authority-storage/reindex",
              "permissionsRequired": [
                "authority-storage.authority.reindex.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/authority-storage/reindex/{id}",
              "permissionsRequired": [
                "authority-storage.authority.reindex.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/authority-storage/reindex/{id}",
              "permissionsRequired": [
                "authority-storage.authority.reindex.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/authority-storage/expire/authorities",
              "unit": "day",
              "delay": "1",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "mod-settings.entries.collection.get",
                "mod-settings.global.read.authority-storage",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "user-tenants",
          "version": "1.0"
        },
        {
          "id": "consortia",
          "version": "1.0"
        },
        {
          "id": "specification-storage",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "mod-settings.global.write.authority-storage",
          "replaces": [],
          "displayName": "Entities links settings - Create configuration",
          "description": "To create new configuration in mod settings",
          "subPermissions": []
        },
        {
          "permissionName": "mod-settings.global.read.authority-storage",
          "replaces": [],
          "displayName": "Entities links settings - Read configuration",
          "description": "To read the configuration from mod settings.",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority-links.instances.collection.get",
          "replaces": [],
          "displayName": "Entities Links - get instance-authority links",
          "description": "Get instance-authority links collection",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority-links.instances.collection.put",
          "replaces": [],
          "displayName": "Entities Links - update instance-authority links",
          "description": "Update instance-authority links collection",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority-links.authorities.bulk.post",
          "replaces": [],
          "displayName": "Entities Links - count instance-authority links for each authority",
          "description": "Count instance-authority links for each authority",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority.linking-rules.collection.get",
          "replaces": [],
          "displayName": "Entities Links - get instance-authority linking rules",
          "description": "Get instance-authority linking rules",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority.linking-rules.item.get",
          "replaces": [],
          "displayName": "Entities Links - get instance-authority linking rule",
          "description": "Get instance-authority linking rule",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority.linking-rules.item.patch",
          "replaces": [],
          "displayName": "Entities Links - patch instance-authority linking rule",
          "description": "Patch instance-authority linking rule",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority-links.authority-statistics.collection.get",
          "replaces": [],
          "displayName": "Entities Authority Links Statistics - get instance-authority links statistics",
          "description": "Get instance-authority links statistics",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority-links.instance-statistics.collection.get",
          "replaces": [],
          "displayName": "Entities Instance Links Statistics - get instance-authority links statistics",
          "description": "Get instance-authority links (Instance) statistics",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority-links.suggestions.post",
          "replaces": [],
          "displayName": "Marc Links Suggestions - retrieve links suggestions for marc record",
          "description": "Retrieve instance-authority links suggestions",
          "subPermissions": []
        },
        {
          "permissionName": "instance-authority-links.instances.all",
          "replaces": [],
          "displayName": "Entities Links - all instance-authority links permissions",
          "description": "Entire set of permissions needed to use instance-links operations",
          "subPermissions": [
            "instance-authority-links.instances.collection.get",
            "instance-authority-links.instances.collection.put",
            "instance-authority-links.authorities.bulk.post",
            "instance-authority.linking-rules.collection.get",
            "instance-authority.linking-rules.item.get",
            "instance-authority.linking-rules.item.patch",
            "instance-authority-links.authority-statistics.collection.get",
            "instance-authority-links.instance-statistics.collection.get",
            "instance-authority-links.suggestions.post"
          ]
        },
        {
          "permissionName": "inventory-storage.authorities.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get authority collection",
          "description": "get authority collection from the storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authorities.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual authority record",
          "description": "get individual authority record from the storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authorities.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual authority record",
          "description": "create individual authority record in the storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authorities.bulk.post",
          "replaces": [],
          "displayName": "inventory storage - create authority records in bulk",
          "description": "create authority records in bulk",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authorities.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify authority record",
          "description": "modify authority record in the storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authorities.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual authority record",
          "description": "delete individual authority record from the storage",
          "subPermissions": []
        },
        {
          "permissionName": "authority-storage.authority.reindex.item.delete",
          "replaces": [],
          "displayName": "inventory storage - cancel reindex job",
          "description": "cancel a running reindexing job",
          "subPermissions": []
        },
        {
          "permissionName": "authority-storage.authority.reindex.item.get",
          "replaces": [],
          "displayName": "inventory storage - get reindex job by id",
          "description": "get reindex job by id",
          "subPermissions": []
        },
        {
          "permissionName": "authority-storage.authority.reindex.post",
          "replaces": [],
          "displayName": "inventory storage - submit reindex authority job",
          "description": "submit reindex authority job",
          "subPermissions": []
        },
        {
          "permissionName": "authority-storage.authority.reindex.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get reindex authority jobs",
          "description": "get reindex authority jobs",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authorities.all",
          "replaces": [],
          "displayName": "inventory storage module - all authorities permissions",
          "description": "Entire set of permissions needed to use authorities in the inventory storage module",
          "subPermissions": [
            "inventory-storage.authorities.collection.get",
            "inventory-storage.authorities.item.get",
            "inventory-storage.authorities.item.post",
            "inventory-storage.authorities.bulk.post",
            "inventory-storage.authorities.item.put",
            "inventory-storage.authorities.item.delete",
            "authority-storage.authority.reindex.post",
            "authority-storage.authority.reindex.item.get",
            "authority-storage.authority.reindex.item.delete",
            "authority-storage.authority.reindex.collection.get"
          ]
        },
        {
          "permissionName": "inventory-storage.authority-note-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get authority-note-type collection",
          "description": "get authority-note-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-note-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual authority-note-type",
          "description": "get individual authority-note-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-note-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual authority-note-type",
          "description": "create individual authority-note-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-note-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify authority-note-type",
          "description": "modify authority-note-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-note-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual authority-note-type",
          "description": "delete individual authority-note-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-source-files.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get authority-source-file collection",
          "description": "get authority-source-file collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-source-files.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual authority-source-file",
          "description": "get individual authority-source-file from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-source-files.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual authority-source-file",
          "description": "create individual authority-source-file in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-source-files.item.patch",
          "replaces": [],
          "displayName": "inventory storage - patch authority-source-file",
          "description": "patch authority-source-file in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-source-files.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual authority-source-file",
          "description": "delete individual authority-source-file from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-source-files.hrid.post",
          "replaces": [],
          "displayName": "inventory storage - get next HRID for authority-source-file",
          "description": "get next HRID for authority-source-file",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.authority-source-files.all",
          "replaces": [],
          "displayName": "all authority source files permissions",
          "description": "Entire set of permissions needed to use authority source files",
          "subPermissions": [
            "inventory-storage.authority-source-files.collection.get",
            "inventory-storage.authority-source-files.item.get",
            "inventory-storage.authority-source-files.item.post",
            "inventory-storage.authority-source-files.item.patch",
            "inventory-storage.authority-source-files.item.delete",
            "inventory-storage.authority-source-files.hrid.post"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-entities-links:4.1.0-SNAPSHOT.347",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 1073741824,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
          {
            "name": "ENV",
            "value": "folio",
            "description": "The logical name of the deployment, must be unique across all environments using the same shared Kafka/Elasticsearch clusters, `a-z (any case)`, `0-9`, `-`, `_` symbols only allowed"
          },
          {
            "name": "DB_HOST",
            "value": "localhost",
            "description": "Postgres hostname"
          },
          {
            "name": "DB_PORT",
            "value": "5432",
            "description": "Postgres port"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin",
            "description": "Postgres username"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin",
            "description": "Postgres username password"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules",
            "description": "Postgres database name"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "10",
            "description": "This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections"
          },
          {
            "name": "DB_MINIMUM_IDLE",
            "value": "10",
            "description": "This property controls the minimum number of idle connections that HikariCP tries to maintain in the pool"
          },
          {
            "name": "DB_CONNECTION_TIMEOUT",
            "value": "30000",
            "description": "This property controls the maximum number of milliseconds that a client will wait for a connection from the pool"
          },
          {
            "name": "DB_IDLE_TIMEOUT",
            "value": "600000",
            "description": "This property controls the maximum amount of time that a connection is allowed to sit idle in the pool. This setting only applies when `DB_MINIMUM_IDLE` is defined to be less than `DB_MAXPOOLSIZE`"
          },
          {
            "name": "DB_KEEPALIVE_TIME",
            "value": "0",
            "description": "This property controls how frequently HikariCP will attempt to keep a connection alive, in order to prevent it from being timed out by the database or network infrastructure (0 - disabled)"
          },
          {
            "name": "DB_MAX_LIFETIME",
            "value": "1800000",
            "description": "This property controls the maximum lifetime of a connection in the pool"
          },
          {
            "name": "DB_VALIDATION_TIMEOUT",
            "value": "5000",
            "description": "This property controls the maximum amount of time that a connection will be tested for aliveness. This value must be less than the `DB_CONNECTION_TIMEOUT`"
          },
          {
            "name": "DB_INITIALIZATION_FAIL_TIMEOUT",
            "value": "30000",
            "description": "This property controls whether the pool will \"fail fast\" if the pool cannot be seeded with an initial connection successfully"
          },
          {
            "name": "DB_LEAK_DETECTION_THRESHOLD",
            "value": "30000",
            "description": "This property controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak (0 - disabled)"
          },
          {
            "name": "OKAPI_URL",
            "value": "okapi",
            "description": "Okapi URL"
          },
          {
            "name": "KAFKA_HOST",
            "value": "kafka",
            "description": "Kafka broker hostname"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092",
            "description": "Kafka broker port"
          },
          {
            "name": "KAFKA_SECURITY_PROTOCOL",
            "value": "PLAINTEXT",
            "description": "Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)"
          },
          {
            "name": "KAFKA_SSL_KEYSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client."
          },
          {
            "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
            "value": "",
            "description": "The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured."
          },
          {
            "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka trust store file."
          },
          {
            "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
            "value": "",
            "description": "The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled."
          },
          {
            "name": "KAFKA_CONSUMER_MAX_POLL_RECORDS",
            "value": "50",
            "description": "Maximum number of records returned in a single call to poll()."
          },
          {
            "name": "KAFKA_AUTHORITY_SOURCE_FILE_TOPIC_PARTITIONS",
            "value": "1",
            "description": "Amount of partitions for `authority-authority-source-file` topic."
          },
          {
            "name": "KAFKA_AUTHORITY_SOURCE_FILE_TOPIC_REPLICATION_FACTOR",
            "value": "",
            "description": "Replication factor for `authority-authority-source-file` topic."
          },
          {
            "name": "KAFKA_INSTANCE_AUTHORITY_TOPIC_PARTITIONS",
            "value": "10",
            "description": "Amount of partitions for `links.instance-authority` topic."
          },
          {
            "name": "KAFKA_INSTANCE_AUTHORITY_TOPIC_REPLICATION_FACTOR",
            "value": "",
            "description": "Replication factor for `links.instance-authority` topic."
          },
          {
            "name": "KAFKA_INSTANCE_AUTHORITY_STATS_TOPIC_PARTITIONS",
            "value": "10",
            "description": "Amount of partitions for `links.instance-authority-stats` topic."
          },
          {
            "name": "KAFKA_INSTANCE_AUTHORITY_STATS_TOPIC_REPLICATION_FACTOR",
            "value": "",
            "description": "Replication factor for `links.instance-authority-stats` topic."
          },
          {
            "name": "KAFKA_AUTHORITIES_CONSUMER_CONCURRENCY",
            "value": "1",
            "description": "Number of kafka concurrent threads for `inventory.authority` message consuming."
          },
          {
            "name": "KAFKA_INSTANCE_AUTHORITY_STATS_CONSUMER_CONCURRENCY",
            "value": "1",
            "description": "Number of kafka concurrent threads for `links.instance-authority-stats` message consuming."
          },
          {
            "name": "KAFKA_INSTANCE_AUTHORITY_CHANGE_PARTITIONS",
            "value": "100",
            "description": "Number of instance-authority links `links.instance-authority` event contains while processing authority link source change."
          },
          {
            "name": "INSTANCE_STORAGE_QUERY_BATCH_SIZE",
            "value": "50",
            "description": "Number of instances to retrieve from inventory storage per one request (Max 90 - based on maximum URI length)"
          },
          {
            "name": "AUTHORITY_ARCHIVES_EXPIRATION_PERIOD",
            "value": "7",
            "description": "The retention period in days for keeping the deleted authorities in authority_archive DB table"
          },
          {
            "name": "S3_URL",
            "value": "https://s3.amazonaws.com",
            "description": "S3 compatible service url"
          },
          {
            "name": "S3_REGION",
            "value": "us-west-2",
            "description": "S3 compatible service region"
          },
          {
            "name": "S3_BUCKET",
            "value": "",
            "description": "S3 compatible service bucket"
          },
          {
            "name": "S3_LOCAL_SUB_PATH",
            "value": "mod-entities-links",
            "description": "S3 subpath for local files storage"
          },
          {
            "name": "S3_ACCESS_KEY_ID",
            "value": "",
            "description": "S3 compatible service access key"
          },
          {
            "name": "S3_SECRET_ACCESS_KEY",
            "value": "",
            "description": "S3 compatible service secret key"
          },
          {
            "name": "S3_IS_AWS",
            "value": "true",
            "description": "Specify if AWS S3 is used as files storage"
          },
          {
            "name": "S3_RETRY_COUNT",
            "value": "3",
            "description": "Specify number of retries if S3 client return any kind of error"
          },
          {
            "name": "S3_RETRY_DELAY_MS",
            "value": "500",
            "description": "Specify millisecond delay between retries if S3 client return any kind of error"
          }
        ],
        "dockerCMD": []
      },
      "metadata": {
        "user": {
          "type": "system",
          "permissions": [
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.item.put",
            "mapping-metadata.type.item.get",
            "mapping-rules.get",
            "source-storage.source-records.item.get",
            "users.collection.get",
            "user-tenants.collection.get",
            "source-storage.parsed-records.fetch.collection.post"
          ]
        }
      },
      "name": "Entities Links"
    },
    {
      "id": "mod-event-config-2.10.0-SNAPSHOT.72",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [
        {
          "id": "mod-event",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/eventConfig/{id}",
              "permissionsRequired": [
                "event.config.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/eventConfig",
              "permissionsRequired": [
                "event.config.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/eventConfig",
              "permissionsRequired": [
                "event.config.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/eventConfig/{id}",
              "permissionsRequired": [
                "event.config.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/eventConfig/{id}",
              "permissionsRequired": [
                "event.config.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "event.config.item.get",
          "replaces": [],
          "displayName": "Event Config - get event configuration from storage",
          "description": "Get individual event configuration",
          "subPermissions": []
        },
        {
          "permissionName": "event.config.collection.get",
          "replaces": [],
          "displayName": "Event Config - get event configuration list",
          "description": "Get a list of event configurations",
          "subPermissions": []
        },
        {
          "permissionName": "event.config.item.post",
          "replaces": [],
          "displayName": "Event Config - create event configuration",
          "description": "Create event configuration",
          "subPermissions": []
        },
        {
          "permissionName": "event.config.item.put",
          "replaces": [],
          "displayName": "Event Config - modify event configuration",
          "description": "Modify event configuration",
          "subPermissions": []
        },
        {
          "permissionName": "event.config.item.delete",
          "replaces": [],
          "displayName": "Event Config - delete event configuration",
          "description": "Delete event configuration",
          "subPermissions": []
        },
        {
          "permissionName": "event.config.all",
          "replaces": [],
          "displayName": "Event configuration module - all permissions",
          "description": "Entire set of permissions needed to use the event configuration modules",
          "subPermissions": [
            "event.config.item.get",
            "event.config.collection.get",
            "event.config.item.post",
            "event.config.item.put",
            "event.config.item.delete"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-event-config:2.10.0-SNAPSHOT.72",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "mod-event-config"
    },
    {
      "id": "mod-feesfines-19.4.0-SNAPSHOT.257",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "patron-notice",
          "version": "1.0"
        },
        {
          "id": "holdings-storage",
          "version": "4.2 5.0 6.0 7.0 8.0"
        },
        {
          "id": "item-storage",
          "version": "8.4 9.0 10.0 11.0"
        },
        {
          "id": "instance-storage",
          "version": "7.4 8.0 9.0 10.0 11.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "users",
          "version": "15.1 16.0"
        },
        {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
        {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
        {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
        {
          "id": "pubsub-publish",
          "version": "0.1"
        },
        {
          "id": "actual-cost-record-storage",
          "version": "0.7"
        },
        {
          "id": "loan-types",
          "version": "2.3"
        },
        {
          "id": "settings",
          "version": "1.2"
        }
      ],
      "provides": [
        {
          "id": "feesfines",
          "version": "19.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/feefines",
              "permissionsRequired": [
                "feefines.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/feefines/{id}",
              "permissionsRequired": [
                "feefines.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/feefines",
              "permissionsRequired": [
                "feefines.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/feefines/{id}",
              "permissionsRequired": [
                "feefines.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/feefines/{id}",
              "permissionsRequired": [
                "feefines.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/owners",
              "permissionsRequired": [
                "owners.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/owners/{id}",
              "permissionsRequired": [
                "owners.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/owners",
              "permissionsRequired": [
                "owners.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/owners/{id}",
              "permissionsRequired": [
                "owners.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/owners/{id}",
              "permissionsRequired": [
                "owners.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/accounts",
              "permissionsRequired": [
                "accounts.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/accounts/{id}",
              "permissionsRequired": [
                "accounts.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts",
              "permissionsRequired": [
                "accounts.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "patron-notice.post",
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/accounts/{id}",
              "permissionsRequired": [
                "accounts.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "patron-notice.post",
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/accounts/{id}",
              "permissionsRequired": [
                "accounts.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/check-pay",
              "permissionsRequired": [
                "feesfines.accounts.check-pay.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/check-waive",
              "permissionsRequired": [
                "feesfines.accounts.check-waive.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/check-transfer",
              "permissionsRequired": [
                "feesfines.accounts.check-transfer.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/check-refund",
              "permissionsRequired": [
                "feesfines.accounts.check-refund.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/pay",
              "permissionsRequired": [
                "feesfines.accounts.pay.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/waive",
              "permissionsRequired": [
                "feesfines.accounts.waive.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/transfer",
              "permissionsRequired": [
                "feesfines.accounts.transfer.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/cancel",
              "permissionsRequired": [
                "feesfines.accounts.cancel.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts/{id}/refund",
              "permissionsRequired": [
                "feesfines.accounts.refund.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/check-pay",
              "permissionsRequired": [
                "feesfines.accounts-bulk.check-pay.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/check-transfer",
              "permissionsRequired": [
                "feesfines.accounts-bulk.check-transfer.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/check-refund",
              "permissionsRequired": [
                "feesfines.accounts-bulk.check-refund.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/check-waive",
              "permissionsRequired": [
                "feesfines.accounts-bulk.check-waive.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/pay",
              "permissionsRequired": [
                "feesfines.accounts-bulk.pay.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/waive",
              "permissionsRequired": [
                "feesfines.accounts-bulk.waive.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/transfer",
              "permissionsRequired": [
                "feesfines.accounts-bulk.transfer.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/cancel",
              "permissionsRequired": [
                "feesfines.accounts-bulk.cancel.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/accounts-bulk/refund",
              "permissionsRequired": [
                "feesfines.accounts-bulk.refund.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post",
                "modperms.feesfines.patron-notices.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/feefineactions",
              "permissionsRequired": [
                "feefineactions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/feefineactions/{id}",
              "permissionsRequired": [
                "feefineactions.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/feefineactions",
              "permissionsRequired": [
                "feefineactions.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "modperms.feesfines.patron-notices.post",
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/feefineactions/{id}",
              "permissionsRequired": [
                "feefineactions.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/feefineactions/{id}",
              "permissionsRequired": [
                "feefineactions.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/payments",
              "permissionsRequired": [
                "payments.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/payments/{id}",
              "permissionsRequired": [
                "payments.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/payments",
              "permissionsRequired": [
                "payments.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/payments/{id}",
              "permissionsRequired": [
                "payments.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/payments/{id}",
              "permissionsRequired": [
                "payments.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/waives",
              "permissionsRequired": [
                "waives.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/waives/{id}",
              "permissionsRequired": [
                "waives.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/waives",
              "permissionsRequired": [
                "waives.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/waives/{id}",
              "permissionsRequired": [
                "waives.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/waives/{id}",
              "permissionsRequired": [
                "waives.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/refunds",
              "permissionsRequired": [
                "refunds.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/refunds/{id}",
              "permissionsRequired": [
                "refunds.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/refunds",
              "permissionsRequired": [
                "refunds.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/refunds/{id}",
              "permissionsRequired": [
                "refunds.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/refunds/{id}",
              "permissionsRequired": [
                "refunds.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/transfers",
              "permissionsRequired": [
                "transfers.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/transfers/{id}",
              "permissionsRequired": [
                "transfers.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/transfers",
              "permissionsRequired": [
                "transfers.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/transfers/{id}",
              "permissionsRequired": [
                "transfers.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/transfers/{id}",
              "permissionsRequired": [
                "transfers.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/comments",
              "permissionsRequired": [
                "comments.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/comments/{id}",
              "permissionsRequired": [
                "comments.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/comments",
              "permissionsRequired": [
                "comments.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/comments/{id}",
              "permissionsRequired": [
                "comments.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/comments/{id}",
              "permissionsRequired": [
                "comments.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/transfer-criterias",
              "permissionsRequired": [
                "transfer-criterias.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/transfer-criterias/{id}",
              "permissionsRequired": [
                "transfer-criterias.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/transfer-criterias",
              "permissionsRequired": [
                "transfer-criterias.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/transfer-criterias/{id}",
              "permissionsRequired": [
                "transfer-criterias.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/transfer-criterias/{id}",
              "permissionsRequired": [
                "transfer-criterias.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/manualblocks",
              "permissionsRequired": [
                "manualblocks.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/manualblocks/{id}",
              "permissionsRequired": [
                "manualblocks.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/manualblocks",
              "permissionsRequired": [
                "manualblocks.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/manualblocks/{id}",
              "permissionsRequired": [
                "manualblocks.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/manualblocks/{id}",
              "permissionsRequired": [
                "manualblocks.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/overdue-fines-policies",
              "permissionsRequired": [
                "overdue-fines-policies.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/overdue-fines-policies/{id}",
              "permissionsRequired": [
                "overdue-fines-policies.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/overdue-fines-policies",
              "permissionsRequired": [
                "overdue-fines-policies.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/overdue-fines-policies/{id}",
              "permissionsRequired": [
                "overdue-fines-policies.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/overdue-fines-policies/{id}",
              "permissionsRequired": [
                "overdue-fines-policies.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/lost-item-fees-policies",
              "permissionsRequired": [
                "lost-item-fees-policies.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/lost-item-fees-policies/{id}",
              "permissionsRequired": [
                "lost-item-fees-policies.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/lost-item-fees-policies",
              "permissionsRequired": [
                "lost-item-fees-policies.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/lost-item-fees-policies/{id}",
              "permissionsRequired": [
                "lost-item-fees-policies.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/lost-item-fees-policies/{id}",
              "permissionsRequired": [
                "lost-item-fees-policies.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/manual-block-templates",
              "permissionsRequired": [
                "manual-block-templates.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/manual-block-templates/{id}",
              "permissionsRequired": [
                "manual-block-templates.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/manual-block-templates",
              "permissionsRequired": [
                "manual-block-templates.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/manual-block-templates/{id}",
              "permissionsRequired": [
                "manual-block-templates.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/manual-block-templates/{id}",
              "permissionsRequired": [
                "manual-block-templates.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "actual-cost-fee-fine",
          "version": "0.3",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/actual-cost-fee-fine/cancel",
              "permissionsRequired": [
                "actual-cost-fee-fine-cancel.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "actual-cost-record-storage.actual-cost-records.collection.get",
                "actual-cost-record-storage.actual-cost-records.item.get",
                "actual-cost-record-storage.actual-cost-records.item.put",
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/actual-cost-fee-fine/bill",
              "permissionsRequired": [
                "actual-cost-fee-fine-bill.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "actual-cost-record-storage.actual-cost-records.item.get",
                "actual-cost-record-storage.actual-cost-records.collection.get",
                "actual-cost-record-storage.actual-cost-records.item.put",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "users.item.get",
                "users.collection.get",
                "pubsub.publish.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "feefine-reports",
          "version": "2.3",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/feefine-reports/refund",
              "permissionsRequired": [
                "feefine-reports.refund.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "mod-settings.entries.item.get",
                "mod-settings.entries.collection.get",
                "users.item.get",
                "usergroups.item.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/feefine-reports/cash-drawer-reconciliation",
              "permissionsRequired": [
                "feesfines.feefine-reports.cash-drawer-reconciliation.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "mod-settings.entries.item.get",
                "mod-settings.entries.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/feefine-reports/cash-drawer-reconciliation/sources",
              "permissionsRequired": [
                "feesfines.feefine-reports.cash-drawer-reconciliation-source.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/feefine-reports/financial-transactions-detail",
              "permissionsRequired": [
                "feefine-reports.financial-transactions-detail.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "mod-settings.entries.item.get",
                "mod-settings.entries.collection.get",
                "inventory-storage.service-points.item.get",
                "inventory-storage.service-points.collection.get",
                "users.item.get",
                "users.collection.get",
                "usergroups.item.get",
                "usergroups.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "circulation-storage.loans.item.get",
                "circulation-storage.loans.collection.get",
                "circulation-storage.loan-policies.item.get",
                "circulation-storage.loan-policies.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "feefines.collection.get",
          "replaces": [],
          "displayName": "feefines collection get",
          "description": "Get a collection of feefines records",
          "subPermissions": []
        },
        {
          "permissionName": "feefines.item.get",
          "replaces": [],
          "displayName": "feefines item get",
          "description": "Read an individual record in the Feefine module",
          "subPermissions": []
        },
        {
          "permissionName": "feefines.item.post",
          "replaces": [],
          "displayName": "feefines item post",
          "description": "Create new records in the Feefine module",
          "subPermissions": []
        },
        {
          "permissionName": "feefines.item.put",
          "replaces": [],
          "displayName": "feefines item put",
          "description": "Edit existing records in the Feefine module",
          "subPermissions": []
        },
        {
          "permissionName": "feefines.item.delete",
          "replaces": [],
          "displayName": "feefines item delete",
          "description": "Delete records from the Feefine module",
          "subPermissions": []
        },
        {
          "permissionName": "owners.collection.get",
          "replaces": [],
          "displayName": "owners collection get",
          "description": "Get a list of owner records",
          "subPermissions": []
        },
        {
          "permissionName": "owners.item.get",
          "replaces": [],
          "displayName": "owners item get",
          "description": "Get a single owner item",
          "subPermissions": []
        },
        {
          "permissionName": "owners.item.post",
          "replaces": [],
          "displayName": "owners item post",
          "description": "Create new Owners",
          "subPermissions": []
        },
        {
          "permissionName": "owners.item.put",
          "replaces": [],
          "displayName": "owners item put",
          "description": "Edit existing Owners",
          "subPermissions": []
        },
        {
          "permissionName": "owners.item.delete",
          "replaces": [],
          "displayName": "owners item delete",
          "description": "Delete Owners",
          "subPermissions": []
        },
        {
          "permissionName": "accounts.collection.get",
          "replaces": [],
          "displayName": "accounts collection get",
          "description": "Get a list of account records",
          "subPermissions": []
        },
        {
          "permissionName": "accounts.item.get",
          "replaces": [],
          "displayName": "accounts item get",
          "description": "Get a single account record",
          "subPermissions": []
        },
        {
          "permissionName": "accounts.item.post",
          "replaces": [],
          "displayName": "accounts item post",
          "description": "Create a new account record",
          "subPermissions": []
        },
        {
          "permissionName": "accounts.item.put",
          "replaces": [],
          "displayName": "accounts item put",
          "description": "Edit an account record",
          "subPermissions": []
        },
        {
          "permissionName": "accounts.item.delete",
          "replaces": [],
          "displayName": "accounts item delete",
          "description": "Delete an account record",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.check-pay.post",
          "replaces": [
            "accounts.check-pay.post"
          ],
          "displayName": "accounts payment check post",
          "description": "Checks if payment is allowed",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.check-pay.post",
          "replaces": [],
          "displayName": "accounts bulk payment check post",
          "description": "Checks if payment is allowed as bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.check-waive.post",
          "replaces": [
            "accounts.check-waive.post"
          ],
          "displayName": "accounts waiver check post",
          "description": "Checks if waiver is allowed",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.check-waive.post",
          "replaces": [],
          "displayName": "accounts bulk waiver check post",
          "description": "Checks if waiver is allowed as bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.check-transfer.post",
          "replaces": [
            "accounts.check-transfer.post"
          ],
          "displayName": "accounts transfer check post",
          "description": "Checks if transfer is allowed",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.check-transfer.post",
          "replaces": [],
          "displayName": "accounts bulk transfer check post",
          "description": "Checks if transfer is allowed as bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.check-refund.post",
          "replaces": [
            "accounts.check-refund.post"
          ],
          "displayName": "accounts refund check post",
          "description": "Checks if refund is allowed",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.check-refund.post",
          "replaces": [],
          "displayName": "accounts bulk refund check post",
          "description": "Checks if refund is allowed as bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.pay.post",
          "replaces": [
            "accounts.pay.post"
          ],
          "displayName": "accounts payment post",
          "description": "Makes payment for an account",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.pay.post",
          "replaces": [],
          "displayName": "accounts bulk payment post",
          "description": "Makes payment for an account bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.waive.post",
          "replaces": [
            "accounts.waive.post"
          ],
          "displayName": "accounts waiver post",
          "description": "Waives an account",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.waive.post",
          "replaces": [],
          "displayName": "accounts bulk waiver post",
          "description": "Waives an account bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.transfer.post",
          "replaces": [
            "accounts.transfer.post"
          ],
          "displayName": "accounts transfer post",
          "description": "Transfers an account",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.transfer.post",
          "replaces": [],
          "displayName": "accounts bulk transfer post",
          "description": "Transfers an account bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.cancel.post",
          "replaces": [
            "accounts.cancel.post"
          ],
          "displayName": "accounts cancel post",
          "description": "Cancels an account",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.cancel.post",
          "replaces": [],
          "displayName": "accounts bulk cancel post",
          "description": "Cancels an account bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts.refund.post",
          "replaces": [
            "accounts.refund.post"
          ],
          "displayName": "accounts refund post",
          "description": "Refunds an account",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.accounts-bulk.refund.post",
          "replaces": [],
          "displayName": "accounts bulk refund post",
          "description": "Refunds an account bulk",
          "subPermissions": []
        },
        {
          "permissionName": "feefineactions.collection.get",
          "replaces": [],
          "displayName": "feefineactions collection get",
          "description": "Get a list of feefineaction records",
          "subPermissions": []
        },
        {
          "permissionName": "feefineactions.item.get",
          "replaces": [],
          "displayName": "feefineactions item get",
          "description": "Get a single feefineaction record",
          "subPermissions": []
        },
        {
          "permissionName": "feefineactions.item.post",
          "replaces": [],
          "displayName": "feefineactions item post",
          "description": "Create a new feefineaction record",
          "subPermissions": []
        },
        {
          "permissionName": "feefineactions.item.put",
          "replaces": [],
          "displayName": "feefineactions item put",
          "description": "Edit an feefineaction record",
          "subPermissions": []
        },
        {
          "permissionName": "feefineactions.item.delete",
          "replaces": [],
          "displayName": "feefineactions item delete",
          "description": "Delete an feefineaction record",
          "subPermissions": []
        },
        {
          "permissionName": "payments.collection.get",
          "replaces": [],
          "displayName": "payments collection get",
          "description": "Get a list of payment records",
          "subPermissions": []
        },
        {
          "permissionName": "payments.item.get",
          "replaces": [],
          "displayName": "payments item get",
          "description": "Get a single payment record",
          "subPermissions": []
        },
        {
          "permissionName": "payments.item.post",
          "replaces": [],
          "displayName": "payments item post",
          "description": "Create a new payment record",
          "subPermissions": []
        },
        {
          "permissionName": "accounts.pay.check.post",
          "replaces": [],
          "displayName": "accounts payment check post",
          "description": "Checks if payment is valid",
          "subPermissions": []
        },
        {
          "permissionName": "payments.item.put",
          "replaces": [],
          "displayName": "payments item put",
          "description": "Edit an payment record",
          "subPermissions": []
        },
        {
          "permissionName": "payments.item.delete",
          "replaces": [],
          "displayName": "payments item delete",
          "description": "Delete an payment record",
          "subPermissions": []
        },
        {
          "permissionName": "waives.collection.get",
          "replaces": [],
          "displayName": "waives collection get",
          "description": "Get a list of waive records",
          "subPermissions": []
        },
        {
          "permissionName": "waives.item.get",
          "replaces": [],
          "displayName": "waives item get",
          "description": "Get a single waive record",
          "subPermissions": []
        },
        {
          "permissionName": "waives.item.post",
          "replaces": [],
          "displayName": "waives item post",
          "description": "Create a new waive record",
          "subPermissions": []
        },
        {
          "permissionName": "waives.item.put",
          "replaces": [],
          "displayName": "waives item put",
          "description": "Edit an waive record",
          "subPermissions": []
        },
        {
          "permissionName": "waives.item.delete",
          "replaces": [],
          "displayName": "waives item delete",
          "description": "Delete an waive record",
          "subPermissions": []
        },
        {
          "permissionName": "refunds.collection.get",
          "replaces": [],
          "displayName": "refunds collection get",
          "description": "Get a list of refund records",
          "subPermissions": []
        },
        {
          "permissionName": "refunds.item.get",
          "replaces": [],
          "displayName": "refunds item get",
          "description": "Get a single refund record",
          "subPermissions": []
        },
        {
          "permissionName": "refunds.item.post",
          "replaces": [],
          "displayName": "refunds item post",
          "description": "Create a new refund record",
          "subPermissions": []
        },
        {
          "permissionName": "refunds.item.put",
          "replaces": [],
          "displayName": "refunds item put",
          "description": "Edit an refund record",
          "subPermissions": []
        },
        {
          "permissionName": "refunds.item.delete",
          "replaces": [],
          "displayName": "refunds item delete",
          "description": "Delete an refund record",
          "subPermissions": []
        },
        {
          "permissionName": "transfers.collection.get",
          "replaces": [],
          "displayName": "transfers collection get",
          "description": "Get a list of transfer records",
          "subPermissions": []
        },
        {
          "permissionName": "transfers.item.get",
          "replaces": [],
          "displayName": "transfers item get",
          "description": "Get a single transfer record",
          "subPermissions": []
        },
        {
          "permissionName": "transfers.item.post",
          "replaces": [],
          "displayName": "transfers item post",
          "description": "Create a new transfer record",
          "subPermissions": []
        },
        {
          "permissionName": "transfers.item.put",
          "replaces": [],
          "displayName": "transfers item put",
          "description": "Edit an transfer record",
          "subPermissions": []
        },
        {
          "permissionName": "transfers.item.delete",
          "replaces": [],
          "displayName": "transfers item delete",
          "description": "Delete an transfer record",
          "subPermissions": []
        },
        {
          "permissionName": "comments.collection.get",
          "replaces": [],
          "displayName": "comments collection get",
          "description": "Get a list of comment records",
          "subPermissions": []
        },
        {
          "permissionName": "comments.item.get",
          "replaces": [],
          "displayName": "comments item get",
          "description": "Get a single comment record",
          "subPermissions": []
        },
        {
          "permissionName": "comments.item.post",
          "replaces": [],
          "displayName": "comments item post",
          "description": "Create a new comment record",
          "subPermissions": []
        },
        {
          "permissionName": "comments.item.put",
          "replaces": [],
          "displayName": "comments item put",
          "description": "Edit an comment record",
          "subPermissions": []
        },
        {
          "permissionName": "comments.item.delete",
          "replaces": [],
          "displayName": "comments item delete",
          "description": "Delete an comment record",
          "subPermissions": []
        },
        {
          "permissionName": "transfer-criterias.collection.get",
          "replaces": [],
          "displayName": "transfer criteria collection get",
          "description": "Get a list of transfer criteria records",
          "subPermissions": []
        },
        {
          "permissionName": "transfer-criterias.item.get",
          "replaces": [],
          "displayName": "transfer criteria item get",
          "description": "Get a single transfer criteria record",
          "subPermissions": []
        },
        {
          "permissionName": "transfer-criterias.item.post",
          "replaces": [],
          "displayName": "transfer criteria item post",
          "description": "Create a new transfer criteria record",
          "subPermissions": []
        },
        {
          "permissionName": "transfer-criterias.item.put",
          "replaces": [],
          "displayName": "transfer criteria item put",
          "description": "Edit an transfer criteria record",
          "subPermissions": []
        },
        {
          "permissionName": "transfer-criterias.item.delete",
          "replaces": [],
          "displayName": "transfer criteria item delete",
          "description": "Delete an transfer criteria record",
          "subPermissions": []
        },
        {
          "permissionName": "manualblocks.collection.get",
          "replaces": [],
          "displayName": "manualblocks collection get",
          "description": "Get a list of manualblock records",
          "subPermissions": []
        },
        {
          "permissionName": "manualblocks.item.get",
          "replaces": [],
          "displayName": "manualblocks item get",
          "description": "Get a single manualblock record",
          "subPermissions": []
        },
        {
          "permissionName": "manualblocks.item.post",
          "replaces": [],
          "displayName": "manualblocks item post",
          "description": "Create a new manualblock record",
          "subPermissions": []
        },
        {
          "permissionName": "manualblocks.item.put",
          "replaces": [],
          "displayName": "manualblocks item put",
          "description": "Edit an manualblock record",
          "subPermissions": []
        },
        {
          "permissionName": "manualblocks.item.delete",
          "replaces": [],
          "displayName": "manualblocks item delete",
          "description": "Delete an manualblock record",
          "subPermissions": []
        },
        {
          "permissionName": "overdue-fines-policies.collection.get",
          "replaces": [],
          "displayName": "Overdue-fines-policies collection get",
          "description": "Get a list of overdue-fines-policies records",
          "subPermissions": []
        },
        {
          "permissionName": "overdue-fines-policies.item.get",
          "replaces": [],
          "displayName": "Overdue-fines-policies item get",
          "description": "Get a single overdue-fines-policies record",
          "subPermissions": []
        },
        {
          "permissionName": "overdue-fines-policies.item.post",
          "replaces": [],
          "displayName": "Overdue-fines-policies item post",
          "description": "Create a new overdue-fines-policies record",
          "subPermissions": []
        },
        {
          "permissionName": "overdue-fines-policies.item.put",
          "replaces": [],
          "displayName": "Overdue-fines-policies item put",
          "description": "Edit an overdue-fines-policies record",
          "subPermissions": []
        },
        {
          "permissionName": "overdue-fines-policies.item.delete",
          "replaces": [],
          "displayName": "Overdue-fines-policies item delete",
          "description": "Delete an overdue-fines-policies record",
          "subPermissions": []
        },
        {
          "permissionName": "lost-item-fees-policies.collection.get",
          "replaces": [],
          "displayName": "Lost-item-fees-policies collection get",
          "description": "Get a list of lost-item-fees-policies records",
          "subPermissions": []
        },
        {
          "permissionName": "lost-item-fees-policies.item.get",
          "replaces": [],
          "displayName": "Lost-item-fees-policies item get",
          "description": "Get a single lost-item-fees-policies record",
          "subPermissions": []
        },
        {
          "permissionName": "lost-item-fees-policies.item.post",
          "replaces": [],
          "displayName": "Lost-item-fees-policies item post",
          "description": "Create a new lost-item-fees-policies record",
          "subPermissions": []
        },
        {
          "permissionName": "lost-item-fees-policies.item.put",
          "replaces": [],
          "displayName": "Lost-item-fees-policies item put",
          "description": "Edit an lost-item-fees-policies record",
          "subPermissions": []
        },
        {
          "permissionName": "lost-item-fees-policies.item.delete",
          "replaces": [],
          "displayName": "Lost-item-fees-policies item delete",
          "description": "Delete an lost-item-fees-policies record",
          "subPermissions": []
        },
        {
          "permissionName": "manual-block-templates.collection.get",
          "replaces": [],
          "displayName": "manual-block-template collection get",
          "description": "Get a list of manual-block templates",
          "subPermissions": []
        },
        {
          "permissionName": "manual-block-templates.item.get",
          "replaces": [],
          "displayName": "manual-block-template item get",
          "description": "Get a single manual-block template",
          "subPermissions": []
        },
        {
          "permissionName": "manual-block-templates.item.post",
          "replaces": [],
          "displayName": "manual-block-template item post",
          "description": "Create a new manual-block template",
          "subPermissions": []
        },
        {
          "permissionName": "manual-block-templates.item.put",
          "replaces": [],
          "displayName": "manual-block-template item put",
          "description": "Edit an manual-block template",
          "subPermissions": []
        },
        {
          "permissionName": "manual-block-templates.item.delete",
          "replaces": [],
          "displayName": "manual-block-template item delete",
          "description": "Delete an manual-block template",
          "subPermissions": []
        },
        {
          "permissionName": "modperms.feesfines.patron-notices.post",
          "replaces": [],
          "displayName": "module permissions for sending patron notices",
          "description": "to reduce X-Okapi-Token size",
          "subPermissions": [
            "patron-notice.post",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.collection.get",
            "users.item.get",
            "users.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "feefine-reports.refund.post",
          "replaces": [],
          "displayName": "module permissions for loading refund report",
          "description": "Load a refund report",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.feefine-reports.cash-drawer-reconciliation.post",
          "replaces": [
            "feefine-reports.cash-drawer-reconciliation.post"
          ],
          "displayName": "module permissions for loading cash drawer reconciliation report",
          "description": "Load a cash drawer reconciliation report",
          "subPermissions": []
        },
        {
          "permissionName": "feesfines.feefine-reports.cash-drawer-reconciliation-source.post",
          "replaces": [],
          "displayName": "module permissions for loading cash drawer reconciliation source report",
          "description": "Load a cash drawer reconciliation source report",
          "subPermissions": []
        },
        {
          "permissionName": "feefine-reports.financial-transactions-detail.post",
          "replaces": [],
          "displayName": "module permissions for loading financial transactions detail report",
          "description": "Load a financial transactions detail report",
          "subPermissions": []
        },
        {
          "permissionName": "actual-cost-fee-fine-cancel.post",
          "replaces": [],
          "displayName": "module permissions for canceling actual cost fee/fine record",
          "description": "Cancel actual cost fee/fine record",
          "subPermissions": []
        },
        {
          "permissionName": "actual-cost-fee-fine-bill.post",
          "replaces": [],
          "displayName": "Actual cost fee/fine - bill",
          "description": "Bill actual cost fee/fine",
          "subPermissions": []
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-feesfines:19.4.0-SNAPSHOT.257",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "feesfines"
    },
    {
      "id": "mod-graphql-1.13.1000378",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [
        {
          "id": "graphql",
          "version": "1.4",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/graphql",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-graphql:1.13.1000378",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 402653184,
            "PortBindings": {
              "3001/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [],
        "dockerCMD": []
      },
      "name": "GraphQL API for FOLIO"
    },
    {
      "id": "mod-inventory-21.2.0-SNAPSHOT.894",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "holdings-sources",
          "version": "1.0"
        },
        {
          "id": "user-tenants",
          "version": "1.0"
        },
        {
          "id": "item-storage",
          "version": "11.0"
        },
        {
          "id": "instance-storage",
          "version": "11.2"
        },
        {
          "id": "instance-storage-batch-sync",
          "version": "3.0"
        },
        {
          "id": "holdings-storage",
          "version": "8.1"
        },
        {
          "id": "material-types",
          "version": "2.0"
        },
        {
          "id": "loan-types",
          "version": "2.0"
        },
        {
          "id": "locations",
          "version": "2.0 3.0"
        },
        {
          "id": "instance-types",
          "version": "1.0 2.0"
        },
        {
          "id": "instance-authority-links",
          "version": "2.1"
        },
        {
          "id": "identifier-types",
          "version": "1.0"
        },
        {
          "id": "contributor-name-types",
          "version": "1.0"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        },
        {
          "id": "instance-preceding-succeeding-titles",
          "version": "0.1"
        },
        {
          "id": "request-storage",
          "version": "6.0"
        },
        {
          "id": "source-storage-records",
          "version": "3.4"
        },
        {
          "id": "bound-with-parts-storage",
          "version": "2.0"
        },
        {
          "id": "authority-storage",
          "version": "2.0"
        }
      ],
      "provides": [
        {
          "id": "inventory",
          "version": "14.3",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory/items",
              "permissionsRequired": [
                "inventory.items.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.holdings.retrieve.collection.post",
                "inventory-storage.instances.retrieve.collection.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/retrieve",
              "permissionsRequired": [
                "inventory.items.retrieve.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.retrieve.collection.post",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.holdings.retrieve.collection.post",
                "inventory-storage.instances.retrieve.collection.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory/items/{id}",
              "permissionsRequired": [
                "inventory.items.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-withdrawn",
              "permissionsRequired": [
                "inventory.items.item.mark-withdrawn.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-in-process",
              "permissionsRequired": [
                "inventory.items.item.mark-in-process.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-in-process-non-requestable",
              "permissionsRequired": [
                "inventory.items.item.mark-in-process-non-requestable.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-intellectual-item",
              "permissionsRequired": [
                "inventory.items.item.mark-intellectual-item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-long-missing",
              "permissionsRequired": [
                "inventory.items.item.mark-long-missing.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-missing",
              "permissionsRequired": [
                "inventory.items.item.mark-missing.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-restricted",
              "permissionsRequired": [
                "inventory.items.item.mark-restricted.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-unavailable",
              "permissionsRequired": [
                "inventory.items.item.mark-unavailable.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/{id}/mark-unknown",
              "permissionsRequired": [
                "inventory.items.item.mark-unknown.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.requests.collection.get",
                "circulation-storage.requests.item.put",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items",
              "permissionsRequired": [
                "inventory.items.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.post",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/inventory/items/{id}",
              "permissionsRequired": [
                "inventory.items.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.put",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/inventory/items/{id}",
              "permissionsRequired": [
                "inventory.items.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/inventory/items",
              "permissionsRequired": [
                "inventory.items.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/inventory/holdings/{id}",
              "permissionsRequired": [
                "inventory.holdings.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory/instances",
              "permissionsRequired": [
                "inventory.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory/items-by-holdings-id",
              "permissionsRequired": [
                "inventory.items-by-holdings-id.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.bound-with-parts.item.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.holdings.retrieve.collection.post",
                "inventory-storage.instances.retrieve.collection.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/tenant-items",
              "permissionsRequired": [
                "inventory.tenant-items.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory/instances/{id}",
              "permissionsRequired": [
                "inventory.instances.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.bound-with-parts.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/instances",
              "permissionsRequired": [
                "inventory.instances.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/inventory/instances/{id}",
              "permissionsRequired": [
                "inventory.instances.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.delete",
                "source-storage.records.delete",
                "source-storage.records.undelete.item.post",
                "source-storage.records.update",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/inventory/instances/{id}",
              "permissionsRequired": [
                "inventory.instances.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.item.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/inventory/instances",
              "permissionsRequired": [
                "inventory.instances.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.collection.delete"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/inventory/instances/{id}/mark-deleted",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.put",
                "source-storage.records.delete"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-batch",
          "version": "3.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/instances/batch",
              "permissionsRequired": [
                "inventory.instances.batch.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-config",
          "version": "0.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory/config/instances/blocked-fields",
              "permissionsRequired": [
                "inventory.config.instances.blocked-fields.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory/config/holdings/blocked-fields",
              "permissionsRequired": [
                "inventory.config.holdings.blocked-fields.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "isbn-utils",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/isbn/convertTo13",
              "permissionsRequired": [
                "isbn-utils.convert-to-13.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/isbn/convertTo10",
              "permissionsRequired": [
                "isbn-utils.convert-to-10.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/isbn/validator",
              "permissionsRequired": [
                "isbn-utils.validator.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-move",
          "version": "0.3",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/move",
              "permissionsRequired": [
                "inventory.items.move.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.put",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/holdings/move",
              "permissionsRequired": [
                "inventory.holdings.move.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.item.get",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-update-ownership",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/items/update-ownership",
              "permissionsRequired": [
                "inventory.items.update-ownership.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory/holdings/update-ownership",
              "permissionsRequired": [
                "inventory.holdings.update-ownership.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.bound-with-parts.collection.get",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "1.2",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "mapping-metadata-provider",
          "version": "1.1"
        },
        {
          "id": "data-import-converter-storage",
          "version": "1.2"
        },
        {
          "id": "order-lines",
          "version": "4.0"
        },
        {
          "id": "consortia",
          "version": "1.0"
        },
        {
          "id": "circulation-bff-ecs-request-external",
          "version": "1.1"
        },
        {
          "id": "circulation-bff-requests",
          "version": "1.1"
        },
        {
          "id": "staging-users",
          "version": "1.1"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "inventory.items.collection.get",
          "replaces": [],
          "displayName": "Inventory - get item collection",
          "description": "Get item collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.retrieve.collection.post",
          "replaces": [],
          "displayName": "Inventory - retrieve item collection via post method",
          "description": "retrieve item collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.tenant-items.collection.get",
          "replaces": [],
          "displayName": "Inventory - get item collection from multiple tenants",
          "description": "Get item collection from multiple tenants",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.collection.delete",
          "replaces": [],
          "displayName": "Inventory - delete entire item collection",
          "description": "Delete entire item collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.get",
          "replaces": [],
          "displayName": "Inventory - get individual item",
          "description": "Get individual item",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-withdrawn.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as withdrawn",
          "description": "Mark an item as withdrawn",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.move.item.post",
          "replaces": [],
          "displayName": "Inventory - move items to another holdings record",
          "description": "Move items to another holdings record",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-in-process.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as in process",
          "description": "Mark an item as in process",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-in-process-non-requestable.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as in process (non-requestable)",
          "description": "Mark an item as in process (non-requestable)",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-intellectual-item.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as intellectual item",
          "description": "Mark an item as intellectual item",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-long-missing.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as long missing",
          "description": "Mark an item as long missing",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-missing.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as missing",
          "description": "Mark an item as missing",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-restricted.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as restricted",
          "description": "Mark an item as restricted",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-unavailable.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as unavailable",
          "description": "Mark an item as unavailable",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.mark-unknown.post",
          "replaces": [],
          "displayName": "Inventory - mark an item as unknown",
          "description": "Mark an item as unknown",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.update-ownership.item.post",
          "replaces": [],
          "displayName": "Inventory - update an item ownership",
          "description": "Update an item ownership",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items-by-holdings-id.collection.get",
          "replaces": [],
          "displayName": "Inventory - get item collection by holdings id",
          "description": "Get item collection by holdings id",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.holdings.move.item.post",
          "replaces": [],
          "displayName": "Inventory - move holdings record to another instance",
          "description": "Move holdings record to another holdings record",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.post",
          "replaces": [],
          "displayName": "Inventory - create individual item",
          "description": "Create individual item",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.put",
          "replaces": [],
          "displayName": "Inventory - modify item",
          "description": "Modify item",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.items.item.delete",
          "replaces": [],
          "displayName": "Inventory - delete individual item",
          "description": "Delete individual item",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.instances.collection.get",
          "replaces": [],
          "displayName": "Inventory - get instance collection",
          "description": "Get instance collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.instances.collection.delete",
          "replaces": [],
          "displayName": "Inventory - delete entire instance collection",
          "description": "Delete entire instance collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.holdings.item.put",
          "replaces": [],
          "displayName": "Inventory - modify holdings",
          "description": "Modify individual instance",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.holdings.update-ownership.item.post",
          "replaces": [],
          "displayName": "Inventory - update holdings ownership",
          "description": "Update holdings record ownership",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.instances.item.get",
          "replaces": [],
          "displayName": "Inventory - get individual instance",
          "description": "Get individual instance",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.instances.item.post",
          "replaces": [],
          "displayName": "Inventory - create individual instance",
          "description": "Create individual instance",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.instances.batch.post",
          "replaces": [],
          "displayName": "Inventory - create batch of individual instance",
          "description": "Create batch of individual instance",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.instances.item.put",
          "replaces": [],
          "displayName": "Inventory - modify instance",
          "description": "Modify instance",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.instances.item.delete",
          "replaces": [],
          "displayName": "Inventory - delete individual instance",
          "description": "Delete individual instance",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.config.instances.blocked-fields.get",
          "replaces": [],
          "displayName": "Inventory - get configuration for blocked fields of instances",
          "description": "Get configuration for blocked fields of instances",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.config.holdings.blocked-fields.get",
          "replaces": [],
          "displayName": "Inventory - get configuration for blocked fields of holdings",
          "description": "Get configuration for blocked fields of holdings",
          "subPermissions": []
        },
        {
          "permissionName": "inventory.all",
          "replaces": [],
          "displayName": "Inventory - all permissions",
          "description": "Entire set of permissions needed to use the inventory",
          "subPermissions": [
            "inventory.items.collection.get",
            "inventory.items.retrieve.collection.post",
            "inventory.tenant-items.collection.get",
            "inventory.items.item.get",
            "inventory.items.item.post",
            "inventory.items.item.put",
            "inventory.items.item.delete",
            "inventory.items.collection.delete",
            "inventory.instances.collection.get",
            "inventory.holdings.item.put",
            "inventory.instances.item.get",
            "inventory.instances.item.post",
            "inventory.instances.batch.post",
            "inventory.instances.item.put",
            "inventory.instances.item.delete",
            "inventory.instances.collection.delete",
            "inventory.config.instances.blocked-fields.get",
            "inventory.config.holdings.blocked-fields.get",
            "inventory.items.item.mark-withdrawn.post",
            "inventory.items.item.mark-in-process.post",
            "inventory.items.item.mark-in-process-non-requestable.post",
            "inventory.items.item.mark-missing.post",
            "inventory.items.move.item.post",
            "inventory.holdings.move.item.post",
            "inventory.items.update-ownership.item.post",
            "inventory.holdings.update-ownership.item.post",
            "inventory.items-by-holdings-id.collection.get"
          ]
        },
        {
          "permissionName": "isbn-utils.convert-to-13.get",
          "replaces": [],
          "displayName": "ISBN utils - convert to ISBN-13 format",
          "description": "Convert isbn code to ISBN-13 format",
          "subPermissions": []
        },
        {
          "permissionName": "isbn-utils.convert-to-10.get",
          "replaces": [],
          "displayName": "ISBN utils - convert to ISBN-10 format",
          "description": "Convert isbn code to ISBN-10 format",
          "subPermissions": []
        },
        {
          "permissionName": "isbn-utils.validator.get",
          "replaces": [],
          "displayName": "ISBN utils - validate ISBN code",
          "description": "Check that isbn code is valid",
          "subPermissions": []
        },
        {
          "permissionName": "isbn-utils.all",
          "replaces": [],
          "displayName": "Isbn-utils - all permissions",
          "description": "Entire set of permissions needed to use the isbn-utils",
          "subPermissions": [
            "isbn-utils.convert-to-13.get",
            "isbn-utils.convert-to-10.get",
            "isbn-utils.validator.get"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-inventory:21.2.0-SNAPSHOT.894",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 715827883,
            "PortBindings": {
              "9403/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -Dorg.folio.metadata.inventory.storage.type=okapi"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_IDLETIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          }
        ],
        "dockerCMD": []
      },
      "metadata": {
        "user": {
          "type": "system",
          "permissions": [
            "user-tenants.collection.get",
            "mapping-metadata.item.get",
            "mapping-metadata.type.item.get",
            "converter-storage.jobprofilesnapshots.get",
            "source-storage.records.put",
            "source-storage.records.post",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.records.generation.item.put",
            "source-storage.records.matching.collection.post",
            "inventory-storage.items.item.post",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.item.post",
            "inventory-storage.holdings.item.put",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.item.put",
            "inventory-storage.instances.item.post",
            "inventory-storage.instances.collection.get",
            "inventory-storage.preceding-succeeding-titles.item.post",
            "inventory-storage.preceding-succeeding-titles.collection.get",
            "inventory-storage.preceding-succeeding-titles.item.put",
            "inventory-storage.preceding-succeeding-titles.item.delete",
            "instance-authority-links.instances.collection.get",
            "instance-authority-links.instances.collection.put"
          ]
        }
      },
      "name": "Inventory Module"
    },
    {
      "id": "mod-inventory-storage-30.0.0-SNAPSHOT.1190",
      "replaces": [
        "inventory-storage"
      ],
      "tags": [],
      "requires": [
        {
          "id": "user-tenants",
          "version": "1.0"
        }
      ],
      "provides": [
        {
          "id": "item-storage-dereferenced",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/item-storage-dereferenced/items",
              "permissionsRequired": [
                "inventory-storage-dereferenced.items.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/item-storage-dereferenced/items/{id}",
              "permissionsRequired": [
                "inventory-storage-dereferenced.items.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "item-storage",
          "version": "11.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/item-storage/items",
              "permissionsRequired": [
                "inventory-storage.items.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/item-storage/items/{id}",
              "permissionsRequired": [
                "inventory-storage.items.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/item-storage/items/retrieve",
              "permissionsRequired": [
                "inventory-storage.items.retrieve.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/item-storage/items",
              "permissionsRequired": [
                "inventory-storage.items.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PATCH"
              ],
              "pathPattern": "/item-storage/items",
              "permissionsRequired": [
                "inventory-storage.items.collection.patch"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/item-storage/items/{id}",
              "permissionsRequired": [
                "inventory-storage.items.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/item-storage/items/{id}",
              "permissionsRequired": [
                "inventory-storage.items.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/item-storage/items",
              "permissionsRequired": [
                "inventory-storage.items.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-date-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-date-types",
              "permissionsRequired": [
                "inventory-storage.instance-date-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PATCH"
              ],
              "pathPattern": "/instance-date-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-date-types.item.patch"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "item-storage-batch-sync",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/item-storage/batch/synchronous",
              "permissionsRequired": [
                "inventory-storage.items.batch.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "item-storage-batch-sync-unsafe",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/item-storage/batch/synchronous-unsafe",
              "permissionsRequired": [
                "inventory-storage.items.batch-unsafe.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "holdings-storage",
          "version": "8.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/holdings-storage/holdings",
              "permissionsRequired": [
                "inventory-storage.holdings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/holdings-storage/holdings/retrieve",
              "permissionsRequired": [
                "inventory-storage.holdings.retrieve.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/holdings-storage/holdings/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/holdings-storage/holdings",
              "permissionsRequired": [
                "inventory-storage.holdings.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get",
                "consortia.sharing-instances.item.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/holdings-storage/holdings/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/holdings-storage/holdings/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/holdings-storage/holdings",
              "permissionsRequired": [
                "inventory-storage.holdings.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "holdings-storage-batch-sync",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/holdings-storage/batch/synchronous",
              "permissionsRequired": [
                "inventory-storage.holdings.batch.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get",
                "consortia.sharing-instances.item.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "holdings-storage-batch-sync-unsafe",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/holdings-storage/batch/synchronous-unsafe",
              "permissionsRequired": [
                "inventory-storage.holdings.batch-unsafe.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get",
                "consortia.sharing-instances.item.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-storage",
          "version": "11.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-storage/instances",
              "permissionsRequired": [
                "inventory-storage.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-storage/instances/retrieve",
              "permissionsRequired": [
                "inventory-storage.instances.retrieve.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-storage/instances/{id}",
              "permissionsRequired": [
                "inventory-storage.instances.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-storage/instances",
              "permissionsRequired": [
                "inventory-storage.instances.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/instance-storage/instances/{id}",
              "permissionsRequired": [
                "inventory-storage.instances.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get",
                "consortia.sharing-instances.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-storage/instances/{id}",
              "permissionsRequired": [
                "inventory-storage.instances.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-storage/instances/{id}/source-record",
              "permissionsRequired": [
                "inventory-storage.instances.source-record.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
              "permissionsRequired": [
                "inventory-storage.instances.source-record.marc-json.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
              "permissionsRequired": [
                "inventory-storage.instances.source-record.marc-json.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-storage/instances/{id}/source-record/marc-json",
              "permissionsRequired": [
                "inventory-storage.instances.source-record.marc-json.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-storage/instances",
              "permissionsRequired": [
                "inventory-storage.instances.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-storage/instance-relationships",
              "permissionsRequired": [
                "inventory-storage.instance-relationships.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-storage/instance-relationships",
              "permissionsRequired": [
                "inventory-storage.instance-relationships.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-storage/instance-relationships/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-relationships.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/instance-storage/instance-relationships/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-relationships.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-storage/instance-relationships/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-relationships.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-preceding-succeeding-titles",
          "version": "0.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/preceding-succeeding-titles",
              "permissionsRequired": [
                "inventory-storage.preceding-succeeding-titles.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/preceding-succeeding-titles/{id}",
              "permissionsRequired": [
                "inventory-storage.preceding-succeeding-titles.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/preceding-succeeding-titles",
              "permissionsRequired": [
                "inventory-storage.preceding-succeeding-titles.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/preceding-succeeding-titles/{id}",
              "permissionsRequired": [
                "inventory-storage.preceding-succeeding-titles.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/preceding-succeeding-titles/{id}",
              "permissionsRequired": [
                "inventory-storage.preceding-succeeding-titles.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/preceding-succeeding-titles/instances/{id}",
              "permissionsRequired": [
                "inventory-storage.instances.preceding-succeeding-titles.collection.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-storage-batch-sync",
          "version": "3.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-storage/batch/synchronous",
              "permissionsRequired": [
                "inventory-storage.instances.batch.synchronous.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-storage-batch-sync-unsafe",
          "version": "3.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-storage/batch/synchronous-unsafe",
              "permissionsRequired": [
                "inventory-storage.instances.batch-unsafe.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-storage-bulk",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-storage/instances/bulk",
              "permissionsRequired": [
                "inventory-storage.instances.bulk.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "loan-types",
          "version": "2.3",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/loan-types",
              "permissionsRequired": [
                "inventory-storage.loan-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/loan-types/{id}",
              "permissionsRequired": [
                "inventory-storage.loan-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/loan-types",
              "permissionsRequired": [
                "inventory-storage.loan-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/loan-types/{id}",
              "permissionsRequired": [
                "inventory-storage.loan-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/loan-types/{id}",
              "permissionsRequired": [
                "inventory-storage.loan-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "material-types",
          "version": "2.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/material-types",
              "permissionsRequired": [
                "inventory-storage.material-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/material-types/{id}",
              "permissionsRequired": [
                "inventory-storage.material-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/material-types",
              "permissionsRequired": [
                "inventory-storage.material-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/material-types/{id}",
              "permissionsRequired": [
                "inventory-storage.material-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/material-types/{id}",
              "permissionsRequired": [
                "inventory-storage.material-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "location-units",
          "version": "2.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/location-units/institutions",
              "permissionsRequired": [
                "inventory-storage.location-units.institutions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/location-units/institutions/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.institutions.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/location-units/institutions",
              "permissionsRequired": [
                "inventory-storage.location-units.institutions.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/location-units/institutions/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.institutions.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/location-units/institutions/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.institutions.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/location-units/campuses",
              "permissionsRequired": [
                "inventory-storage.location-units.campuses.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/location-units/campuses/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.campuses.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/location-units/campuses",
              "permissionsRequired": [
                "inventory-storage.location-units.campuses.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/location-units/campuses/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.campuses.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/location-units/campuses/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.campuses.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/location-units/libraries",
              "permissionsRequired": [
                "inventory-storage.location-units.libraries.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/location-units/libraries/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.libraries.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/location-units/libraries",
              "permissionsRequired": [
                "inventory-storage.location-units.libraries.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/location-units/libraries/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.libraries.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/location-units/libraries/{id}",
              "permissionsRequired": [
                "inventory-storage.location-units.libraries.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "locations",
          "version": "3.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/locations",
              "permissionsRequired": [
                "inventory-storage.locations.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/locations/{id}",
              "permissionsRequired": [
                "inventory-storage.locations.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/locations",
              "permissionsRequired": [
                "inventory-storage.locations.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/locations/{id}",
              "permissionsRequired": [
                "inventory-storage.locations.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/locations/{id}",
              "permissionsRequired": [
                "inventory-storage.locations.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-relationship-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-relationship-types",
              "permissionsRequired": [
                "inventory-storage.instance-relationship-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-relationship-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-relationship-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-relationship-types",
              "permissionsRequired": [
                "inventory-storage.instance-relationship-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/instance-relationship-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-relationship-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-relationship-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-relationship-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "identifier-types",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/identifier-types",
              "permissionsRequired": [
                "inventory-storage.identifier-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/identifier-types/{id}",
              "permissionsRequired": [
                "inventory-storage.identifier-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/identifier-types",
              "permissionsRequired": [
                "inventory-storage.identifier-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/identifier-types/{id}",
              "permissionsRequired": [
                "inventory-storage.identifier-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/identifier-types/{id}",
              "permissionsRequired": [
                "inventory-storage.identifier-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "subject-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/subject-types",
              "permissionsRequired": [
                "inventory-storage.subject-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/subject-types/{id}",
              "permissionsRequired": [
                "inventory-storage.subject-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/subject-types",
              "permissionsRequired": [
                "inventory-storage.subject-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/subject-types/{id}",
              "permissionsRequired": [
                "inventory-storage.subject-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/subject-types/{id}",
              "permissionsRequired": [
                "inventory-storage.subject-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "subject-sources",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/subject-sources",
              "permissionsRequired": [
                "inventory-storage.subject-sources.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/subject-sources/{id}",
              "permissionsRequired": [
                "inventory-storage.subject-sources.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/subject-sources",
              "permissionsRequired": [
                "inventory-storage.subject-sources.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/subject-sources/{id}",
              "permissionsRequired": [
                "inventory-storage.subject-sources.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/subject-sources/{id}",
              "permissionsRequired": [
                "inventory-storage.subject-sources.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "contributor-types",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/contributor-types",
              "permissionsRequired": [
                "inventory-storage.contributor-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/contributor-types/{id}",
              "permissionsRequired": [
                "inventory-storage.contributor-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/contributor-types",
              "permissionsRequired": [
                "inventory-storage.contributor-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/contributor-types/{id}",
              "permissionsRequired": [
                "inventory-storage.contributor-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/contributor-types/{id}",
              "permissionsRequired": [
                "inventory-storage.contributor-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "contributor-name-types",
          "version": "1.3",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/contributor-name-types",
              "permissionsRequired": [
                "inventory-storage.contributor-name-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/contributor-name-types/{id}",
              "permissionsRequired": [
                "inventory-storage.contributor-name-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/contributor-name-types",
              "permissionsRequired": [
                "inventory-storage.contributor-name-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/contributor-name-types/{id}",
              "permissionsRequired": [
                "inventory-storage.contributor-name-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/contributor-name-types/{id}",
              "permissionsRequired": [
                "inventory-storage.contributor-name-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-record-bulk",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/record-bulk/ids",
              "permissionsRequired": [
                "inventory-storage.record-bulk.ids.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-reindex-records",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory-reindex-records/publish",
              "permissionsRequired": [
                "inventory-storage.reindex-records.publish.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-formats",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-formats",
              "permissionsRequired": [
                "inventory-storage.instance-formats.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-formats/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-formats.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-formats",
              "permissionsRequired": [
                "inventory-storage.instance-formats.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/instance-formats/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-formats.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-formats/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-formats.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-types",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-types",
              "permissionsRequired": [
                "inventory-storage.instance-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-types",
              "permissionsRequired": [
                "inventory-storage.instance-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/instance-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "nature-of-content-terms",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/nature-of-content-terms",
              "permissionsRequired": [
                "inventory-storage.nature-of-content-terms.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/nature-of-content-terms/{id}",
              "permissionsRequired": [
                "inventory-storage.nature-of-content-terms.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/nature-of-content-terms",
              "permissionsRequired": [
                "inventory-storage.nature-of-content-terms.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/nature-of-content-terms/{id}",
              "permissionsRequired": [
                "inventory-storage.nature-of-content-terms.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/nature-of-content-terms/{id}",
              "permissionsRequired": [
                "inventory-storage.nature-of-content-terms.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "classification-types",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/classification-types",
              "permissionsRequired": [
                "inventory-storage.classification-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/classification-types/{id}",
              "permissionsRequired": [
                "inventory-storage.classification-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/classification-types",
              "permissionsRequired": [
                "inventory-storage.classification-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/classification-types/{id}",
              "permissionsRequired": [
                "inventory-storage.classification-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/classification-types/{id}",
              "permissionsRequired": [
                "inventory-storage.classification-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "alternative-title-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/alternative-title-types",
              "permissionsRequired": [
                "inventory-storage.alternative-title-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/alternative-title-types/{id}",
              "permissionsRequired": [
                "inventory-storage.alternative-title-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/alternative-title-types",
              "permissionsRequired": [
                "inventory-storage.alternative-title-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/alternative-title-types/{id}",
              "permissionsRequired": [
                "inventory-storage.alternative-title-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/alternative-title-types/{id}",
              "permissionsRequired": [
                "inventory-storage.alternative-title-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "modes-of-issuance",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/modes-of-issuance",
              "permissionsRequired": [
                "inventory-storage.modes-of-issuance.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/modes-of-issuance/{id}",
              "permissionsRequired": [
                "inventory-storage.modes-of-issuance.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/modes-of-issuance",
              "permissionsRequired": [
                "inventory-storage.modes-of-issuance.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/modes-of-issuance/{id}",
              "permissionsRequired": [
                "inventory-storage.modes-of-issuance.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/modes-of-issuance/{id}",
              "permissionsRequired": [
                "inventory-storage.modes-of-issuance.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-statuses",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-statuses",
              "permissionsRequired": [
                "inventory-storage.instance-statuses.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-statuses/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-statuses.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-statuses",
              "permissionsRequired": [
                "inventory-storage.instance-statuses.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/instance-statuses/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-statuses.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-statuses/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-statuses.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "electronic-access-relationships",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/electronic-access-relationships",
              "permissionsRequired": [
                "inventory-storage.electronic-access-relationships.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/electronic-access-relationships/{id}",
              "permissionsRequired": [
                "inventory-storage.electronic-access-relationships.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/electronic-access-relationships",
              "permissionsRequired": [
                "inventory-storage.electronic-access-relationships.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/electronic-access-relationships/{id}",
              "permissionsRequired": [
                "inventory-storage.electronic-access-relationships.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/electronic-access-relationships/{id}",
              "permissionsRequired": [
                "inventory-storage.electronic-access-relationships.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "statistical-code-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/statistical-code-types",
              "permissionsRequired": [
                "inventory-storage.statistical-code-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/statistical-code-types/{id}",
              "permissionsRequired": [
                "inventory-storage.statistical-code-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/statistical-code-types",
              "permissionsRequired": [
                "inventory-storage.statistical-code-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/statistical-code-types/{id}",
              "permissionsRequired": [
                "inventory-storage.statistical-code-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/statistical-code-types/{id}",
              "permissionsRequired": [
                "inventory-storage.statistical-code-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "statistical-codes",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/statistical-codes",
              "permissionsRequired": [
                "inventory-storage.statistical-codes.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/statistical-codes/{id}",
              "permissionsRequired": [
                "inventory-storage.statistical-codes.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/statistical-codes",
              "permissionsRequired": [
                "inventory-storage.statistical-codes.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/statistical-codes/{id}",
              "permissionsRequired": [
                "inventory-storage.statistical-codes.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/statistical-codes/{id}",
              "permissionsRequired": [
                "inventory-storage.statistical-codes.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "ill-policies",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/ill-policies",
              "permissionsRequired": [
                "inventory-storage.ill-policies.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/ill-policies/{id}",
              "permissionsRequired": [
                "inventory-storage.ill-policies.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/ill-policies",
              "permissionsRequired": [
                "inventory-storage.ill-policies.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/ill-policies/{id}",
              "permissionsRequired": [
                "inventory-storage.ill-policies.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/ill-policies/{id}",
              "permissionsRequired": [
                "inventory-storage.ill-policies.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "holdings-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/holdings-types",
              "permissionsRequired": [
                "inventory-storage.holdings-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/holdings-types/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/holdings-types",
              "permissionsRequired": [
                "inventory-storage.holdings-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/holdings-types/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/holdings-types/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "call-number-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/call-number-types",
              "permissionsRequired": [
                "inventory-storage.call-number-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/call-number-types/{id}",
              "permissionsRequired": [
                "inventory-storage.call-number-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/call-number-types",
              "permissionsRequired": [
                "inventory-storage.call-number-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/call-number-types/{id}",
              "permissionsRequired": [
                "inventory-storage.call-number-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/call-number-types/{id}",
              "permissionsRequired": [
                "inventory-storage.call-number-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-note-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-note-types",
              "permissionsRequired": [
                "inventory-storage.instance-note-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-note-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-note-types",
              "permissionsRequired": [
                "inventory-storage.instance-note-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/instance-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-note-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.instance-note-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "holdings-note-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/holdings-note-types",
              "permissionsRequired": [
                "inventory-storage.holdings-note-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/holdings-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-note-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/holdings-note-types",
              "permissionsRequired": [
                "inventory-storage.holdings-note-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/holdings-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-note-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/holdings-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-note-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "item-note-types",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/item-note-types",
              "permissionsRequired": [
                "inventory-storage.item-note-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/item-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.item-note-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/item-note-types",
              "permissionsRequired": [
                "inventory-storage.item-note-types.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/item-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.item-note-types.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/item-note-types/{id}",
              "permissionsRequired": [
                "inventory-storage.item-note-types.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "item-damaged-statuses",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/item-damaged-statuses",
              "permissionsRequired": [
                "inventory-storage.item-damaged-statuses.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/item-damaged-statuses/{id}",
              "permissionsRequired": [
                "inventory-storage.item-damaged-statuses.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/item-damaged-statuses",
              "permissionsRequired": [
                "inventory-storage.item-damaged-statuses.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/item-damaged-statuses/{id}",
              "permissionsRequired": [
                "inventory-storage.item-damaged-statuses.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/item-damaged-statuses/{id}",
              "permissionsRequired": [
                "inventory-storage.item-damaged-statuses.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "service-points",
          "version": "3.5",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/service-points",
              "permissionsRequired": [
                "inventory-storage.service-points.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/service-points/{id}",
              "permissionsRequired": [
                "inventory-storage.service-points.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/service-points",
              "permissionsRequired": [
                "inventory-storage.service-points.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/service-points/{id}",
              "permissionsRequired": [
                "inventory-storage.service-points.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/service-points/{id}",
              "permissionsRequired": [
                "inventory-storage.service-points.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "service-points-users",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/service-points-users",
              "permissionsRequired": [
                "inventory-storage.service-points-users.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/service-points-users/{id}",
              "permissionsRequired": [
                "inventory-storage.service-points-users.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/service-points-users",
              "permissionsRequired": [
                "inventory-storage.service-points-users.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/service-points-users/{id}",
              "permissionsRequired": [
                "inventory-storage.service-points-users.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/service-points-users/{id}",
              "permissionsRequired": [
                "inventory-storage.service-points-users.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "hrid-settings-storage",
          "version": "1.3",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/hrid-settings-storage/hrid-settings",
              "permissionsRequired": [
                "inventory-storage.hrid-settings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/hrid-settings-storage/hrid-settings",
              "permissionsRequired": [
                "inventory-storage.hrid-settings.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "holdings-sources",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/holdings-sources",
              "permissionsRequired": [
                "inventory-storage.holdings-sources.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/holdings-sources/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-sources.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/holdings-sources",
              "permissionsRequired": [
                "inventory-storage.holdings-sources.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/holdings-sources/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-sources.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/holdings-sources/{id}",
              "permissionsRequired": [
                "inventory-storage.holdings-sources.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "bound-with-parts-storage",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-storage/bound-with-parts",
              "permissionsRequired": [
                "inventory-storage.bound-with-parts.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-storage/bound-with-parts/{id}",
              "permissionsRequired": [
                "inventory-storage.bound-with-parts.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory-storage/bound-with-parts",
              "permissionsRequired": [
                "inventory-storage.bound-with-parts.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/inventory-storage/bound-with-parts/{id}",
              "permissionsRequired": [
                "inventory-storage.bound-with-parts.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/inventory-storage/bound-with-parts/{id}",
              "permissionsRequired": [
                "inventory-storage.bound-with-parts.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/inventory-storage/bound-withs",
              "permissionsRequired": [
                "inventory-storage.bound-withs.collection.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/_/jsonSchemas",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "oaipmhview",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/oai-pmh-view/instances",
              "permissionsRequired": [
                "inventory-storage.oai-pmh-view.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/oai-pmh-view/updatedInstanceIds",
              "permissionsRequired": [
                "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/oai-pmh-view/enrichedInstances",
              "permissionsRequired": [
                "inventory-storage.oai-pmh-view.enrichedinstances.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-hierarchy",
          "version": "0.8",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-hierarchy/updated-instance-ids",
              "permissionsRequired": [
                "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory-hierarchy/items-and-holdings",
              "permissionsRequired": [
                "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-view",
          "version": "3.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-view/instances",
              "permissionsRequired": [
                "inventory-storage.inventory-view.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-view-instance-set",
          "version": "3.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-view/instance-set",
              "permissionsRequired": [
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-reindex",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-storage/reindex",
              "permissionsRequired": [
                "inventory-storage.instance.reindex.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-storage/reindex",
              "permissionsRequired": [
                "inventory-storage.instance.reindex.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-storage/reindex/{id}",
              "permissionsRequired": [
                "inventory-storage.instance.reindex.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-storage/reindex/{id}",
              "permissionsRequired": [
                "inventory-storage.instance.reindex.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "instance-iteration",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/instance-storage/instances/iteration",
              "permissionsRequired": [
                "inventory-storage.instance.iteration.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/instance-storage/instances/iteration/{id}",
              "permissionsRequired": [
                "inventory-storage.instance.iteration.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/instance-storage/instances/iteration/{id}",
              "permissionsRequired": [
                "inventory-storage.instance.iteration.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "async-migration",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/inventory-storage/migrations/jobs",
              "permissionsRequired": [
                "inventory-storage.migration.job.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-storage/migrations",
              "permissionsRequired": [
                "inventory-storage.migration.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-storage/migrations/jobs/{id}",
              "permissionsRequired": [
                "inventory-storage.migration.job.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-storage/migrations/jobs",
              "permissionsRequired": [
                "inventory-storage.migration.job.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/inventory-storage/migrations/jobs/{id}",
              "permissionsRequired": [
                "inventory-storage.migration.job.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "consortia",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "inventory-storage.instance-relationships.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get instance relationships by query",
          "description": "get instance relationships by query",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationships.item.get",
          "replaces": [],
          "displayName": "inventory storage - get instance relationship by id",
          "description": "get instance relationship by id",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationships.item.post",
          "replaces": [],
          "displayName": "inventory storage - create an instance relationship",
          "description": "create an instance relationship",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationships.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify an instance relationship",
          "description": "modify an instance relationship",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationships.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete an instance relationship",
          "description": "delete an instance relationship",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get item collection",
          "description": "get item collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.retrieve.collection.post",
          "replaces": [],
          "displayName": "inventory storage - retrieve item collection via post method",
          "description": "retrieve item collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.collection.delete",
          "replaces": [],
          "displayName": "inventory storage - delete entire item collection",
          "description": "delete entire item collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual item",
          "description": "get individual item from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage-dereferenced.items.item.get",
          "replaces": [],
          "displayName": "inventory storage - get dereferenced version of individual item",
          "description": "get dereferenced individual item from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage-dereferenced.items.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get collection of dereferenced item records",
          "description": "get dereferenced item collections from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual item",
          "description": "create individual item in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.collection.patch",
          "replaces": [],
          "displayName": "inventory storage - update items collection",
          "description": "update items in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify item",
          "description": "modify item in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual item",
          "description": "delete individual item from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.batch.post",
          "replaces": [],
          "displayName": "inventory storage - create or update a number of items",
          "description": "create or update a number of items in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.items.batch-unsafe.post",
          "replaces": [],
          "displayName": "inventory storage - create or update a number of items with optimistic locking disabled",
          "description": "create or update a number of items in storage with optimistic locking disabled",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get holdings collection",
          "description": "get holdings collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.retrieve.collection.post",
          "replaces": [],
          "displayName": "inventory storage - retrieve holdings collection",
          "description": "retrieve holdings collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.collection.delete",
          "replaces": [],
          "displayName": "inventory storage - delete entire holdings collection",
          "description": "delete entire holdings collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual holdings record",
          "description": "get individual holdings record from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual holdings record",
          "description": "create individual holdings record in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify holdings record",
          "description": "modify holdings record in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual holdings record",
          "description": "delete individual holdings record from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.batch.post",
          "replaces": [],
          "displayName": "inventory storage - create or update a number of holdings",
          "description": "create or update a number of holdings in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings.batch-unsafe.post",
          "replaces": [],
          "displayName": "inventory storage - create or update a number of holdings with optimistic locking disabled",
          "description": "create or update a number of holdings in storage with optimistic locking disabled",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get instance collection",
          "description": "get instance collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.retrieve.collection.post",
          "replaces": [],
          "displayName": "inventory storage - retrieve instance collection",
          "description": "retrieve instance collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.collection.delete",
          "replaces": [],
          "displayName": "inventory storage - delete entire instance collection",
          "description": "delete entire instance collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual instance",
          "description": "get individual instance from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual instance",
          "description": "create individual instance in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify instance",
          "description": "modify instance in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual instance",
          "description": "delete individual instance from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.preceding-succeeding-titles.collection.put",
          "replaces": [],
          "displayName": "inventory storage - update preceding/succeeding titles related to instance",
          "description": "update preceding/succeeding titles related to instance from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.batch.synchronous.post",
          "replaces": [],
          "displayName": "inventory storage - create or update a collection of instances in a single synchronous request",
          "description": "create or update a collection of instances in a single synchronous request",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.batch-unsafe.post",
          "replaces": [],
          "displayName": "inventory storage - create or update a number of instances with optimistic locking disabled",
          "description": "create or update a number of instances in storage with optimistic locking disabled",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.source-record.delete",
          "replaces": [],
          "displayName": "inventory storage - delete source record of an individual instance",
          "description": "delete source record of individual instance from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.source-record.marc-json.get",
          "replaces": [],
          "displayName": "inventory storage - get MARC JSON source record of an individual instance",
          "description": "get MARC JSON source record of individual instance from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.source-record.marc-json.put",
          "replaces": [],
          "displayName": "inventory storage - set MARC JSON source record of an individual instance",
          "description": "set MARC JSON source record of individual instance in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.source-record.marc-json.delete",
          "replaces": [],
          "displayName": "inventory storage - delete MARC JSON source record of an individual instance",
          "description": "delete MARC JSON source record of individual instance in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.loan-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get loan-type collection",
          "description": "get loan-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.loan-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual loan-type",
          "description": "get individual loan-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.loan-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual loan-type",
          "description": "create individual loan-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.loan-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify loan-type",
          "description": "modify loan-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.loan-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual loan-type",
          "description": "delete individual loan-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.material-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get material-type collection",
          "description": "get material-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.material-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual material-type",
          "description": "get individual material-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.material-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual material-type",
          "description": "create individual material-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.material-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify material-type",
          "description": "modify material-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.material-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual material-type",
          "description": "delete individual material-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.institutions.collection.get",
          "replaces": [],
          "displayName": "inventory storage - location units - get institution collection",
          "description": "Get institution collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.institutions.item.get",
          "replaces": [],
          "displayName": "inventory storage - location units - get individual institution",
          "description": "get individual institution",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.institutions.item.post",
          "replaces": [],
          "displayName": "inventory storage - location units - create individual institution",
          "description": "create individual instution",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.institutions.item.put",
          "replaces": [],
          "displayName": "inventory storage - location units - modify institution",
          "description": "modify institution",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.institutions.item.delete",
          "replaces": [],
          "displayName": "inventory storage - location units - delete individual institution",
          "description": "delete individual institution",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.campuses.collection.get",
          "replaces": [],
          "displayName": "inventory storage - location units - get campus collection",
          "description": "Get campus collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.campuses.item.get",
          "replaces": [],
          "displayName": "inventory storage - location units - get individual campus",
          "description": "get individual campus",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.campuses.item.post",
          "replaces": [],
          "displayName": "inventory storage - location units - create individual campus",
          "description": "create individual instution",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.campuses.item.put",
          "replaces": [],
          "displayName": "inventory storage - location units - modify campus",
          "description": "modify campus",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.campuses.item.delete",
          "replaces": [],
          "displayName": "inventory storage - location units - delete individual campus",
          "description": "delete individual campus",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.libraries.collection.get",
          "replaces": [],
          "displayName": "inventory storage - location units - get library collection",
          "description": "Get library collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.libraries.item.get",
          "replaces": [],
          "displayName": "inventory storage - location units - get individual library",
          "description": "get individual library",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.libraries.item.post",
          "replaces": [],
          "displayName": "inventory storage - location units - create individual library",
          "description": "create individual instution",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.libraries.item.put",
          "replaces": [],
          "displayName": "inventory storage - location units - modify library",
          "description": "modify library",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.location-units.libraries.item.delete",
          "replaces": [],
          "displayName": "inventory storage - location units - delete individual library",
          "description": "delete individual library",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.locations.collection.get",
          "replaces": [],
          "displayName": "inventory storage - locations - get location collection",
          "description": "get location collection",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.locations.item.get",
          "replaces": [],
          "displayName": "inventory storage - locations - get individual location",
          "description": "get individual location",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.locations.item.post",
          "replaces": [],
          "displayName": "inventory storage - locations - create individual location",
          "description": "create individual location",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.locations.item.put",
          "replaces": [],
          "displayName": "inventory storage - locations - modify location",
          "description": "modify location",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.locations.item.delete",
          "replaces": [],
          "displayName": "inventory storage - locations - delete individual location",
          "description": "delete individual location",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationship-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get instance-relationship-type collection",
          "description": "get instance-relationship-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationship-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual instance-relationship-type",
          "description": "get individual instance-relationship-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationship-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual instance-relationship-type",
          "description": "create individual instance-relationship-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationship-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify instance-relationship-type",
          "description": "modify instance-relationship-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-relationship-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual instance-relationship-type",
          "description": "delete individual instance-relationship-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.preceding-succeeding-titles.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get preceding-succeeding-title collection",
          "description": "get preceding-succeeding-title collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.preceding-succeeding-titles.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual preceding-succeeding-title",
          "description": "get individual preceding-succeeding-title from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.preceding-succeeding-titles.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual preceding-succeeding-title",
          "description": "create individual preceding-succeeding-title in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.preceding-succeeding-titles.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify preceding-succeeding-title",
          "description": "modify preceding-succeeding-title in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.preceding-succeeding-titles.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual preceding-succeeding-title",
          "description": "delete individual preceding-succeeding-title from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.identifier-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get identifier-type collection",
          "description": "get identifier-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.identifier-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual identifier-type",
          "description": "get individual identifier-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.identifier-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual identifier-type",
          "description": "create individual identifier-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.identifier-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify identifier-type",
          "description": "modify identifier-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.identifier-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual identifier-type",
          "description": "delete individual identifier-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get contributor-type collection",
          "description": "get contributor-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual contributor-type",
          "description": "get individual contributor-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual contributor-type",
          "description": "create individual contributor-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify contributor-type",
          "description": "modify contributor-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual contributor-type",
          "description": "delete individual contributor-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get service-point collection",
          "description": "get service-point collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual service-point",
          "description": "get individual service-point from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual service-point",
          "description": "create individual service-point in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify service-point",
          "description": "modify service-point in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual service-point",
          "description": "delete individual service-point from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points-users.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get service-point-users collection",
          "description": "get service-point-users collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points-users.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual service-points-user",
          "description": "get individual service-points-user from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points-users.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual service-points-user",
          "description": "create individual service-points-user in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points-users.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify service-points-user",
          "description": "modify service-points-user in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.service-points-users.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual service-points-user",
          "description": "delete individual service-points-user from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-name-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get contributor-name-type collection",
          "description": "get contributor-name-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-name-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual contributor-name-type",
          "description": "get individual contributor-name-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-name-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual contributor-name-type",
          "description": "create individual contributor-name-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-name-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify contributor-name-type",
          "description": "modify contributor-name-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.contributor-name-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual contributor-name-type",
          "description": "delete individual contributor-name-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.record-bulk.ids.get",
          "replaces": [],
          "displayName": "inventory storage - get bulk ids",
          "description": "get a bulk set of record ids from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.reindex-records.publish.post",
          "replaces": [],
          "displayName": "inventory storage - publish inventory records for reindex",
          "description": "publish inventory storage reindex records",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-formats.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get formats collection",
          "description": "get contributor-name-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-formats.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual format",
          "description": "get individual instance format from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-formats.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual format",
          "description": "create individual instance format in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-formats.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify format",
          "description": "modify instance format in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-formats.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual format",
          "description": "delete individual instance format from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get subject types collection",
          "description": "get subject-types collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual subject type",
          "description": "get individual subject type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual subject type",
          "description": "create individual subject type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify subject type",
          "description": "modify subject type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual subject type",
          "description": "delete subject type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-sources.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get subject sources collection",
          "description": "get subject-sources collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-sources.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual subject source",
          "description": "get individual subject source from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-sources.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual subject source",
          "description": "create individual subject source in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-sources.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify subject source",
          "description": "modify subject source in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.subject-sources.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual subject source",
          "description": "delete subject source in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get instance types collection",
          "description": "get instance-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual instance type",
          "description": "get individual instance type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual instance type",
          "description": "create individual instance type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify instance type",
          "description": "modify instance type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual instance type",
          "description": "delete instance type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.nature-of-content-terms.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get content terms collection",
          "description": "get nature-of-content terms collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.nature-of-content-terms.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual content term",
          "description": "get individual nature-of-content term from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.nature-of-content-terms.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual content term",
          "description": "create individual nature-of-content term in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.nature-of-content-terms.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify content term",
          "description": "modify nature-of-content term in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.nature-of-content-terms.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual content term",
          "description": "delete nature-of-content term in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.classification-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get classification types collection",
          "description": "get classification types collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.classification-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual classification type",
          "description": "get individual classification type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.classification-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual classification type",
          "description": "create individual classification type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.classification-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify classification type",
          "description": "modify classification type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.classification-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual classification type",
          "description": "delete individual classification qualifier from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.alternative-title-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get alternative-title-type collection",
          "description": "get alternative-title-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.alternative-title-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual alternative-title-type",
          "description": "get individual alternative-title-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.alternative-title-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual alternative-title-type",
          "description": "create individual alternative-title-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.alternative-title-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify alternative-title-type",
          "description": "modify alternative-title-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.alternative-title-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual alternative-title-type",
          "description": "delete individual alternative-title-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.modes-of-issuance.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get modes of issuance collection",
          "description": "get modes of issuance collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.modes-of-issuance.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual mode of issuance",
          "description": "get individual mode of issuance from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.modes-of-issuance.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual mode of issuance",
          "description": "create individual mode of issuance in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.modes-of-issuance.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify mode of issuance",
          "description": "modify mode of issuance in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.modes-of-issuance.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual mode of issuance",
          "description": "delete individual mode of issuance from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-statuses.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get instance status collection",
          "description": "get instance status collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-statuses.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual instance status",
          "description": "get individual instance status from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-statuses.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual instance status",
          "description": "create individual instance status in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-statuses.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify instance status",
          "description": "modify instance status in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-statuses.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual instance status",
          "description": "delete individual instance status from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.electronic-access-relationships.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get URL relationship types collection",
          "description": "get statistical codes collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.electronic-access-relationships.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual URL relationship type",
          "description": "get individual statistical code from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.electronic-access-relationships.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual URL relationship type",
          "description": "create individual statistical code in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.electronic-access-relationships.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify URL relationship type",
          "description": "modify statistical code in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.electronic-access-relationships.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual URL relationship",
          "description": "delete individual URL relationship type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-code-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get statistical code types collection",
          "description": "get statistical code types collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-code-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual statistical code type",
          "description": "get individual statistical code type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-code-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual statistical code type",
          "description": "create individual statistical code type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-code-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify statistical code type",
          "description": "modify statistical code type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-code-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual statistical code type",
          "description": "delete individual statistical code type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-codes.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get statistical codes collection",
          "description": "get statistical codes collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-codes.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual statistical code",
          "description": "get individual statistical code from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-codes.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual statistical code",
          "description": "create individual statistical code in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-codes.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify statistical code",
          "description": "modify statistical code in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.statistical-codes.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual statistical code",
          "description": "delete individual statistical code from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.ill-policies.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get ill-policy collection",
          "description": "get ill-policy collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.ill-policies.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual ill-policy",
          "description": "get individual ill-policy from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.ill-policies.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual ill-policy",
          "description": "create individual ill-policy in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.ill-policies.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify ill-policy",
          "description": "modify ill-policy in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.ill-policies.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual ill-policy",
          "description": "delete individual ill-policy from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get holdings-type collection",
          "description": "get holdings-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual holdings-type",
          "description": "get individual holdings-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual holdings-type",
          "description": "create individual holdings-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify holdings-type",
          "description": "modify holdings-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual holdings-type",
          "description": "delete individual holdings-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-note-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get instance-note-type collection",
          "description": "get instance-note-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-note-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual instance-note-type",
          "description": "get individual instance-note-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-note-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual instance-note-type",
          "description": "create individual instance-note-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-note-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify instance-note-type",
          "description": "modify instance-note-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-note-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual instance-note-type",
          "description": "delete individual instance-note-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-note-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get holdings-note-type collection",
          "description": "get holdings-note-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-note-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual holdings-note-type",
          "description": "get individual holdings-note-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-note-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual holdings-note-type",
          "description": "create individual holdings-note-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-note-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify holdings-note-type",
          "description": "modify holdings-note-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-note-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual holdings-note-type",
          "description": "delete individual holdings-note-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-note-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get item-note-type collection",
          "description": "get item-note-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-note-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual item-note-type",
          "description": "get individual item-note-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-note-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual item-note-type",
          "description": "create individual item-note-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-note-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify item-note-type",
          "description": "modify item-note-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-note-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual item-note-type",
          "description": "delete individual item-note-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-damaged-statuses.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get item-damaged-statuses collection",
          "description": "get item-damaged-statuses collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-damaged-statuses.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual item-damaged-status",
          "description": "get individual item-damaged-status from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-damaged-statuses.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual item-damaged-status",
          "description": "create individual item-damaged-status in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-damaged-statuses.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify item-damaged-status",
          "description": "modify item-damaged-status in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.item-damaged-statuses.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual item-damaged-status",
          "description": "delete individual item-damaged-status from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.call-number-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get call-number-type collection",
          "description": "get call-number-type collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.call-number-types.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual call-number-type",
          "description": "get individual call-number-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.call-number-types.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual call-number-type",
          "description": "create individual call-number-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.call-number-types.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify call-number-type",
          "description": "modify call-number-type in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.call-number-types.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual call-number-type",
          "description": "delete individual call-number-type from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.hrid-settings.item.get",
          "replaces": [],
          "displayName": "inventory storage - get HRID settings",
          "description": "get the HRID settings from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.hrid-settings.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify HRID settings",
          "description": "modify the HRID settings in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.oai-pmh-view.instances.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get instances for oai pmh",
          "description": "get instances for oai pmh",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get updated instances ids for oai pmh",
          "description": "get updated instances ids for oai pmh",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.oai-pmh-view.enrichedinstances.collection.post",
          "replaces": [],
          "displayName": "inventory storage - get enriched instances for oai pmh",
          "description": "get enriched instances for oai pmh",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get updated instances ids for inventory storage",
          "description": "get updated instances ids for inventory storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
          "replaces": [],
          "displayName": "inventory storage - get instances holdings and items for inventory storage",
          "description": "get instances holdings and items for inventory storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-sources.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get holdings-source collection",
          "description": "get holdings-records-source collection from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-sources.item.get",
          "replaces": [],
          "displayName": "inventory storage - get individual holdings-source",
          "description": "get individual holdings-records-source from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-sources.item.post",
          "replaces": [],
          "displayName": "inventory storage - create individual holdings-source",
          "description": "create individual holdings-records-source in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-sources.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify holdings-source",
          "description": "modify holdings-records-source in storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.holdings-sources.item.delete",
          "replaces": [],
          "displayName": "inventory storage - delete individual holdings-source",
          "description": "delete individual holdings-source from storage",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.bound-with-parts.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get parts of bound-with(s)",
          "description": "get holdings-records associated with bound-with items",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.bound-with-parts.item.get",
          "replaces": [],
          "displayName": "inventory storage - get a part of a bound-with",
          "description": "get a holdings-record id associated with a bound-with item",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.bound-with-parts.item.post",
          "replaces": [],
          "displayName": "inventory storage - add a part to a bound-with",
          "description": "add a holdings record to a bound-with by associating it with the bound-with item",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.bound-withs.collection.put",
          "replaces": [],
          "displayName": "inventory storage - modify a bound-withs",
          "description": "replace a holdings-records of a bound-withs or move it to a different bound-withs",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.bound-with-parts.item.put",
          "replaces": [],
          "displayName": "inventory storage - modify a bound-with part",
          "description": "replace a holdings-record of a bound-with or move it to a different bound-with",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.bound-with-parts.item.delete",
          "replaces": [],
          "displayName": "inventory storage - remove part of a bound-with",
          "description": "remove a holdings-record from a bound-with",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance.reindex.item.delete",
          "replaces": [],
          "displayName": "inventory storage - cancel reindex job",
          "description": "cancel a running reindexing job",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance.reindex.item.get",
          "replaces": [],
          "displayName": "inventory storage - get reindex job by id",
          "description": "get reindex job by id",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance.reindex.post",
          "replaces": [],
          "displayName": "inventory storage - submit reindex instance job",
          "description": "submit reindex instance job",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance.reindex.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get reindex instance jobs",
          "description": "get reindex instance jobs",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance.iteration.post",
          "replaces": [],
          "displayName": "inventory storage - submit iteration instance job",
          "description": "submit iteration instance job",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance.iteration.item.get",
          "replaces": [],
          "displayName": "inventory storage - get iteration job by id",
          "description": "get iteration job by id",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance.iteration.item.delete",
          "replaces": [],
          "displayName": "inventory storage - cancel iteration job",
          "description": "cancel running iteration job",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.inventory-view.instances.collection.get",
          "replaces": [],
          "displayName": "inventory view - get instances by query with their holdings and items",
          "description": "get instances by query with their holdings and items",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.inventory-view.instance-set.get",
          "replaces": [],
          "displayName": "inventory view - get instances by query with a set of related records",
          "description": "get instances by query with a set of related records",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.migration.job.item.delete",
          "replaces": [],
          "displayName": "inventory storage - cancel migration job",
          "description": "cancel a running migration job",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.migration.job.item.get",
          "replaces": [],
          "displayName": "inventory storage - get migration job by id",
          "description": "get migration job by id",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.migration.job.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get migration jobs",
          "description": "get migration jobs",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.migration.item.get",
          "replaces": [],
          "displayName": "inventory storage - get list of available migrations",
          "description": "get list of available migrations",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.migration.job.post",
          "replaces": [],
          "displayName": "inventory storage - submit migration job",
          "description": "submit migration instance job",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-date-types.collection.get",
          "replaces": [],
          "displayName": "inventory storage - get list of instance-date-types",
          "description": "get list of instance-date-types",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instance-date-types.item.patch",
          "replaces": [],
          "displayName": "inventory storage - patch instance-date-type",
          "description": "patch instance-date-type",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.instances.bulk.post",
          "replaces": [],
          "displayName": "inventory storage - create or update instances records in bulk",
          "description": "create or update instances records in bulk from external file",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-storage.all",
          "replaces": [],
          "displayName": "inventory storage module - all permissions",
          "description": "Entire set of permissions needed to use the inventory storage module",
          "subPermissions": [
            "inventory-storage-dereferenced.items.item.get",
            "inventory-storage-dereferenced.items.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.retrieve.collection.post",
            "inventory-storage.items.item.get",
            "inventory-storage.items.item.post",
            "inventory-storage.items.collection.patch",
            "inventory-storage.items.item.put",
            "inventory-storage.items.item.delete",
            "inventory-storage.items.collection.delete",
            "inventory-storage.items.batch.post",
            "inventory-storage.items.batch-unsafe.post",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.retrieve.collection.post",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.item.post",
            "inventory-storage.holdings.item.put",
            "inventory-storage.holdings.item.delete",
            "inventory-storage.holdings.collection.delete",
            "inventory-storage.holdings.batch.post",
            "inventory-storage.holdings.batch-unsafe.post",
            "inventory-storage.instances.collection.get",
            "inventory-storage.instances.retrieve.collection.post",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.item.post",
            "inventory-storage.instances.item.put",
            "inventory-storage.instances.item.delete",
            "inventory-storage.instances.preceding-succeeding-titles.collection.put",
            "inventory-storage.instances.source-record.delete",
            "inventory-storage.instances.source-record.marc-json.get",
            "inventory-storage.instances.source-record.marc-json.put",
            "inventory-storage.instances.source-record.marc-json.delete",
            "inventory-storage.instances.collection.delete",
            "inventory-storage.instances.batch.synchronous.post",
            "inventory-storage.instances.batch-unsafe.post",
            "inventory-storage.instances.bulk.post",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.item.post",
            "inventory-storage.loan-types.item.put",
            "inventory-storage.loan-types.item.delete",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.item.post",
            "inventory-storage.material-types.item.put",
            "inventory-storage.material-types.item.delete",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.institutions.item.post",
            "inventory-storage.location-units.institutions.item.put",
            "inventory-storage.location-units.institutions.item.delete",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.campuses.item.post",
            "inventory-storage.location-units.campuses.item.put",
            "inventory-storage.location-units.campuses.item.delete",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.location-units.libraries.item.post",
            "inventory-storage.location-units.libraries.item.put",
            "inventory-storage.location-units.libraries.item.delete",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.item.post",
            "inventory-storage.locations.item.put",
            "inventory-storage.locations.item.delete",
            "inventory-storage.instance-relationships.collection.get",
            "inventory-storage.instance-relationships.item.get",
            "inventory-storage.instance-relationships.item.post",
            "inventory-storage.instance-relationships.item.put",
            "inventory-storage.instance-relationships.item.delete",
            "inventory-storage.instance-relationship-types.collection.get",
            "inventory-storage.instance-relationship-types.item.get",
            "inventory-storage.instance-relationship-types.item.post",
            "inventory-storage.instance-relationship-types.item.put",
            "inventory-storage.instance-relationship-types.item.delete",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.identifier-types.item.post",
            "inventory-storage.identifier-types.item.put",
            "inventory-storage.identifier-types.item.delete",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-types.item.get",
            "inventory-storage.contributor-types.item.post",
            "inventory-storage.contributor-types.item.put",
            "inventory-storage.contributor-types.item.delete",
            "inventory-storage.contributor-name-types.collection.get",
            "inventory-storage.contributor-name-types.item.get",
            "inventory-storage.contributor-name-types.item.post",
            "inventory-storage.contributor-name-types.item.put",
            "inventory-storage.contributor-name-types.item.delete",
            "inventory-storage.record-bulk.ids.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-formats.item.get",
            "inventory-storage.instance-formats.item.post",
            "inventory-storage.instance-formats.item.put",
            "inventory-storage.instance-formats.item.delete",
            "inventory-storage.subject-types.collection.get",
            "inventory-storage.subject-types.item.get",
            "inventory-storage.subject-types.item.post",
            "inventory-storage.subject-types.item.put",
            "inventory-storage.subject-types.item.delete",
            "inventory-storage.subject-sources.collection.get",
            "inventory-storage.subject-sources.item.get",
            "inventory-storage.subject-sources.item.post",
            "inventory-storage.subject-sources.item.put",
            "inventory-storage.subject-sources.item.delete",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-types.item.get",
            "inventory-storage.instance-types.item.post",
            "inventory-storage.instance-types.item.put",
            "inventory-storage.instance-types.item.delete",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.nature-of-content-terms.item.get",
            "inventory-storage.nature-of-content-terms.item.post",
            "inventory-storage.nature-of-content-terms.item.put",
            "inventory-storage.nature-of-content-terms.item.delete",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.classification-types.item.get",
            "inventory-storage.classification-types.item.post",
            "inventory-storage.classification-types.item.put",
            "inventory-storage.classification-types.item.delete",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.alternative-title-types.item.get",
            "inventory-storage.alternative-title-types.item.post",
            "inventory-storage.alternative-title-types.item.put",
            "inventory-storage.alternative-title-types.item.delete",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.modes-of-issuance.item.get",
            "inventory-storage.modes-of-issuance.item.post",
            "inventory-storage.modes-of-issuance.item.put",
            "inventory-storage.modes-of-issuance.item.delete",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-statuses.item.get",
            "inventory-storage.instance-statuses.item.post",
            "inventory-storage.instance-statuses.item.put",
            "inventory-storage.instance-statuses.item.delete",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.electronic-access-relationships.item.get",
            "inventory-storage.electronic-access-relationships.item.post",
            "inventory-storage.electronic-access-relationships.item.put",
            "inventory-storage.electronic-access-relationships.item.delete",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-code-types.item.get",
            "inventory-storage.statistical-code-types.item.post",
            "inventory-storage.statistical-code-types.item.put",
            "inventory-storage.statistical-code-types.item.delete",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.statistical-codes.item.get",
            "inventory-storage.statistical-codes.item.post",
            "inventory-storage.statistical-codes.item.put",
            "inventory-storage.statistical-codes.item.delete",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.ill-policies.item.get",
            "inventory-storage.ill-policies.item.post",
            "inventory-storage.ill-policies.item.put",
            "inventory-storage.ill-policies.item.delete",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings-types.item.get",
            "inventory-storage.holdings-types.item.post",
            "inventory-storage.holdings-types.item.put",
            "inventory-storage.holdings-types.item.delete",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.call-number-types.item.get",
            "inventory-storage.call-number-types.item.post",
            "inventory-storage.call-number-types.item.put",
            "inventory-storage.call-number-types.item.delete",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instance-note-types.item.get",
            "inventory-storage.instance-note-types.item.post",
            "inventory-storage.instance-note-types.item.put",
            "inventory-storage.instance-note-types.item.delete",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-note-types.item.get",
            "inventory-storage.holdings-note-types.item.post",
            "inventory-storage.holdings-note-types.item.put",
            "inventory-storage.holdings-note-types.item.delete",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-note-types.item.get",
            "inventory-storage.item-note-types.item.post",
            "inventory-storage.item-note-types.item.put",
            "inventory-storage.item-note-types.item.delete",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.item-damaged-statuses.item.get",
            "inventory-storage.item-damaged-statuses.item.post",
            "inventory-storage.item-damaged-statuses.item.put",
            "inventory-storage.item-damaged-statuses.item.delete",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.item.post",
            "inventory-storage.service-points.item.put",
            "inventory-storage.service-points.item.delete",
            "inventory-storage.service-points-users.collection.get",
            "inventory-storage.service-points-users.item.get",
            "inventory-storage.service-points-users.item.post",
            "inventory-storage.service-points-users.item.put",
            "inventory-storage.service-points-users.item.delete",
            "inventory-storage.hrid-settings.item.get",
            "inventory-storage.hrid-settings.item.put",
            "inventory-storage.preceding-succeeding-titles.collection.get",
            "inventory-storage.preceding-succeeding-titles.item.get",
            "inventory-storage.preceding-succeeding-titles.item.post",
            "inventory-storage.preceding-succeeding-titles.item.put",
            "inventory-storage.preceding-succeeding-titles.item.delete",
            "inventory-storage.oai-pmh-view.instances.collection.get",
            "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get",
            "inventory-storage.oai-pmh-view.enrichedinstances.collection.post",
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.holdings-sources.item.get",
            "inventory-storage.holdings-sources.item.post",
            "inventory-storage.holdings-sources.item.get",
            "inventory-storage.holdings-sources.item.put",
            "inventory-storage.holdings-sources.item.delete",
            "inventory-storage.bound-with-parts.collection.get",
            "inventory-storage.bound-with-parts.item.get",
            "inventory-storage.bound-with-parts.item.post",
            "inventory-storage.bound-withs.collection.put",
            "inventory-storage.bound-with-parts.item.put",
            "inventory-storage.bound-with-parts.item.delete",
            "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get",
            "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
            "inventory-storage.inventory-view.instances.collection.get",
            "inventory-storage.inventory-view.instance-set.get",
            "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
            "inventory-storage.instance.reindex.item.delete",
            "inventory-storage.instance.reindex.item.get",
            "inventory-storage.instance.reindex.post",
            "inventory-storage.instance.reindex.collection.get",
            "inventory-storage.instance.iteration.post",
            "inventory-storage.instance.iteration.item.get",
            "inventory-storage.instance.iteration.item.delete",
            "inventory-storage.migration.job.item.delete",
            "inventory-storage.migration.job.post",
            "inventory-storage.migration.job.item.get",
            "inventory-storage.migration.job.collection.get",
            "inventory-storage.migration.item.get",
            "inventory-storage.reindex-records.publish.post",
            "inventory-storage.instance-date-types.collection.get",
            "inventory-storage.instance-date-types.item.patch"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-inventory-storage:30.0.0-SNAPSHOT.1190",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 715827883,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "ENV",
            "value": "folio"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "DB_MAXSHAREDPOOLSIZE",
            "value": "3"
          },
          {
            "name": "DB_CONNECTIONRELEASEDELAY",
            "value": "60000"
          },
          {
            "name": "DB_RECONNECTATTEMPTS",
            "value": "3"
          },
          {
            "name": "DB_RECONNECTINTERVAL",
            "value": "10000"
          },
          {
            "name": "DB_EXPLAIN_QUERY_THRESHOLD",
            "value": "1000000"
          },
          {
            "name": "DB_ALLOW_SUPPRESS_OPTIMISTIC_LOCKING",
            "value": "0001-01-01T00:00:00Z"
          },
          {
            "name": "KAFKA_HOST",
            "value": "kafka"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "REPLICATION_FACTOR",
            "value": "1"
          },
          {
            "name": "KAFKA_DOMAIN_TOPIC_NUM_PARTITIONS",
            "value": "50"
          },
          {
            "name": "KAFKA_CLASSIFICATION_TYPE_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
          {
            "name": "KAFKA_CALL_NUMBER_TYPE_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
          {
            "name": "KAFKA_LOCATION_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
          {
            "name": "KAFKA_LIBRARY_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
          {
            "name": "KAFKA_CAMPUS_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
          {
            "name": "KAFKA_INSTITUTION_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
          {
            "name": "KAFKA_SUBJECT_TYPE_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
          {
            "name": "KAFKA_SUBJECT_SOURCE_TOPIC_NUM_PARTITIONS",
            "value": "1"
          },
          {
            "name": "KAFKA_REINDEX_RECORDS_TOPIC_NUM_PARTITIONS",
            "value": "16"
          },
          {
            "name": "KAFKA_REINDEX_RECORDS_TOPIC_MESSAGE_RETENTION",
            "value": "86400000"
          },
          {
            "name": "KAFKA_REINDEX_RECORDS_TOPIC_MAX_MESSAGE_SIZE",
            "value": "10485760"
          },
          {
            "name": "KAFKA_REINDEX_PRODUCER_MAX_REQUEST_SIZE_BYTES",
            "value": "10485760"
          },
          {
            "name": "S3_URL",
            "value": "https://s3.amazonaws.com"
          },
          {
            "name": "S3_REGION",
            "value": "us-west-2"
          },
          {
            "name": "S3_BUCKET",
            "value": ""
          },
          {
            "name": "S3_ACCESS_KEY_ID",
            "value": ""
          },
          {
            "name": "S3_SECRET_ACCESS_KEY",
            "value": ""
          },
          {
            "name": "S3_IS_AWS",
            "value": "true"
          },
          {
            "name": "S3_LOCAL_SUB_PATH",
            "value": "mod-inventory-storage"
          },
          {
            "name": "ECS_TLR_FEATURE_ENABLED",
            "value": "false"
          }
        ],
        "dockerCMD": []
      },
      "name": "Inventory Storage Module"
    },
    {
      "id": "mod-inventory-update-5.0.0-SNAPSHOT.143",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "instance-storage",
          "version": "9.0 10.0 11.0"
        },
        {
          "id": "holdings-storage",
          "version": "5.0 6.0 7.0 8.0"
        },
        {
          "id": "item-storage",
          "version": "8.2 9.0 10.0 11.0"
        },
        {
          "id": "instance-storage-batch-sync",
          "version": "1.1 2.0 3.0"
        },
        {
          "id": "holdings-storage-batch-sync",
          "version": "1.1 2.0"
        },
        {
          "id": "item-storage-batch-sync",
          "version": "1.0 2.0"
        },
        {
          "id": "instance-preceding-succeeding-titles",
          "version": "0.2"
        },
        {
          "id": "inventory-view-instance-set",
          "version": "1.0 2.0 3.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        }
      ],
      "provides": [
        {
          "id": "inventory-upsert-hrid",
          "version": "3.0",
          "handlers": [
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/inventory-upsert-hrid",
              "permissionsRequired": [
                "inventory-update.by-hrid.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/inventory-upsert-hrid",
              "permissionsRequired": [
                "inventory-update.by-hrid.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/inventory-upsert-hrid/fetch/{id}",
              "permissionsRequired": [
                "inventory-update.by-hrid.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "inventory-batch-upsert-hrid",
          "version": "3.0",
          "handlers": [
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/inventory-batch-upsert-hrid",
              "permissionsRequired": [
                "inventory-update.batch-by-hrid.collection.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "shared-inventory-upsert-matchkey",
          "version": "3.0",
          "handlers": [
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/shared-inventory-upsert-matchkey",
              "permissionsRequired": [
                "inventory-update.by-matchkey.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/shared-inventory-upsert-matchkey",
              "permissionsRequired": [
                "inventory-update.by-matchkey.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/shared-inventory-upsert-matchkey/fetch/{id}",
              "permissionsRequired": [
                "inventory-update.by-matchkey.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "shared-inventory-batch-upsert-matchkey",
          "version": "3.0",
          "handlers": [
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/shared-inventory-batch-upsert-matchkey",
              "permissionsRequired": [
                "inventory-update.batch-by-matchkey.collection.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.items.item.delete",
                "inventory-storage.items.batch.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.delete",
                "inventory-storage.holdings.batch.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.item.delete",
                "inventory-storage.instances.batch.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.instance-relationships.collection.get",
                "inventory-storage.instance-relationships.item.post",
                "inventory-storage.instance-relationships.item.get",
                "inventory-storage.instance-relationships.item.put",
                "inventory-storage.instance-relationships.item.delete",
                "inventory-storage.inventory-view.instance-set.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "orders-storage.po-lines",
          "version": "13.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "inventory-update.by-hrid.item.put",
          "replaces": [
            "inventory-upsert-hrid.item.put"
          ],
          "displayName": "Inventory upsert based on HRID - create or update existing records",
          "description": "Create or update instance, holdings and items based on the Instance HRID",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-update.batch-by-hrid.collection.put",
          "replaces": [
            "inventory-upsert-hrid.item.put"
          ],
          "displayName": "Inventory batch upsert based on HRID - create or update existing records",
          "description": "Create or update instances, holdings and items based on the Instance HRID",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-update.by-hrid.item.delete",
          "replaces": [
            "inventory-upsert-hrid.item.put"
          ],
          "displayName": "Inventory delete based on HRID - deletes inventory record set",
          "description": "Delete instance, holdings and items based on the Instance HRID",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-update.by-hrid.item.get",
          "replaces": [
            "inventory-upsert-hrid.item.get"
          ],
          "displayName": "Get an Inventory record set - by UUID or HRID",
          "description": "Fetching an Inventory record set including holdings, items and relations, by Instance ID or HRID",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-update.by-matchkey.item.put",
          "replaces": [
            "shared-inventory-upsert-matchkey.item.put"
          ],
          "displayName": "Updating a shared Inventory by match key - create or update existing records",
          "description": "Create or update an instance, create or replace holdings and items, based on the Instance matchkey",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-update.batch-by-matchkey.collection.put",
          "replaces": [
            "shared-inventory-upsert-matchkey.item.put"
          ],
          "displayName": "Updating a shared Inventory record set by match key - create or update existing records",
          "description": "Create or update instances, create or replace holdings and items, based on the Instance matchkey",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-update.by-matchkey.item.delete",
          "replaces": [
            "shared-inventory-upsert-matchkey.item.put"
          ],
          "displayName": "Inventory delete based on HRID - deletes inventory record set",
          "description": "Delete instance, holdings and items based on the Instance HRID",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-update.by-matchkey.item.get",
          "replaces": [
            "shared-inventory-upsert-matchkey.item.get"
          ],
          "displayName": "Get an Inventory records set - by UUID or HRID",
          "description": "Fetching an Inventory record set including holdings, items and relations, by Instance ID or HRID",
          "subPermissions": []
        },
        {
          "permissionName": "inventory-update.all",
          "replaces": [],
          "displayName": "inventory Update module - all permissions",
          "description": "Set of permissions required to use all APIs of the inventory update module",
          "subPermissions": [
            "inventory-update.by-hrid.item.put",
            "inventory-update.batch-by-hrid.collection.put",
            "inventory-update.by-hrid.item.delete",
            "inventory-update.by-hrid.item.get",
            "inventory-update.by-matchkey.item.put",
            "inventory-update.batch-by-matchkey.collection.put",
            "inventory-update.by-matchkey.item.delete",
            "inventory-update.by-matchkey.item.get"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-inventory-update:5.0.0-SNAPSHOT.143",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8080/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          }
        ],
        "dockerCMD": []
      },
      "name": "Inventory Update Module"
    },
    {
      "id": "mod-ncip-1.16.0-SNAPSHOT.110",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "instance-types",
          "version": "2.0"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "identifier-types",
          "version": "1.2"
        },
        {
          "id": "material-types",
          "version": "2.2"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "service-points",
          "version": "3.2"
        },
        {
          "id": "loan-types",
          "version": "2.2"
        },
        {
          "id": "holdings-storage",
          "version": "6.0 7.0 8.0"
        },
        {
          "id": "inventory",
          "version": "10.2 11.0 12.0 13.0 14.0"
        },
        {
          "id": "circulation",
          "version": "14.0"
        }
      ],
      "provides": [
        {
          "id": "ncip",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/ncip",
              "permissionsRequired": [
                "ncip.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get",
                "patron-blocks.automated-patron-blocks.collection.get",
                "addresstypes.collection.get",
                "circulation.requests.item.post",
                "circulation-storage.circulation-rules.get",
                "circulation-storage.cancellation-reasons.collection.get",
                "ui-circulation.settings.overdue-fines-policies",
                "ui-circulation.settings.lost-item-fees-policies",
                "inventory-storage.all",
                "inventory-storage.items.collection.get",
                "inventory-storage.service-points.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.collection.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.get",
                "usergroups.item.get",
                "manualblocks.collection.get",
                "note.types.collection.get",
                "accounts.collection.get",
                "circulation.check-out-by-barcode.post",
                "circulation.check-in-by-barcode.post",
                "circulation.loans.collection.get",
                "circulation.requests.collection.get",
                "inventory.instances.item.post",
                "inventory.instances.item.delete",
                "inventory-storage.holdings.item.delete",
                "inventory.items.collection.get",
                "inventory.items.item.delete",
                "inventory.items.item.put",
                "inventory.instances.collection.get",
                "inventory.instances.item.delete",
                "inventory-storage.holdings.item.post",
                "inventory-storage.service-points-users.collection.get",
                "inventory.items.item.post",
                "inventory-storage.service-points.item.get",
                "owners.collection.get",
                "feefines.collection.get",
                "accounts.item.post",
                "circulation.requests.item.get",
                "circulation.requests.item.put",
                "note.types.collection.get",
                "circulation.loans.add-info.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/ncipconfigcheck",
              "permissionsRequired": [
                "ncip.ncipconfigcheck.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.all",
                "inventory-storage.service-points.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.material-types.collection.get",
                "configuration.entries.collection.get",
                "configuration.entries.item.get",
                "inventory-storage.loan-types.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "ncip.post",
          "replaces": [],
          "displayName": "NCIP Request",
          "description": "Post NCIP request",
          "subPermissions": []
        },
        {
          "permissionName": "ncip.ncipconfigcheck.get",
          "replaces": [],
          "displayName": "NCIP - configuration check",
          "description": "Check NCIP configuraitons",
          "subPermissions": []
        },
        {
          "permissionName": "ncip.all",
          "replaces": [],
          "displayName": "NCIP - all permissions",
          "description": "Entire set of permissions needed to use NCIP",
          "subPermissions": [
            "ncip.post",
            "ncip.ncipconfigcheck.get"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-ncip:1.16.0-SNAPSHOT.110",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          }
        ],
        "dockerCMD": []
      },
      "name": "NCIP"
    },
    {
      "id": "mod-notify-3.5.0-SNAPSHOT.139",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "users",
          "version": "16.4"
        },
        {
          "id": "mod-event",
          "version": "1.0"
        },
        {
          "id": "template-engine",
          "version": "2.2"
        },
        {
          "id": "message-delivery",
          "version": "1.1"
        }
      ],
      "provides": [
        {
          "id": "notify",
          "version": "2.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/notify",
              "permissionsRequired": [
                "notify.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/notify",
              "permissionsRequired": [
                "notify.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "event.config.collection.get",
                "template-request.post",
                "sender.message-delivery.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/notify/_username/{uid}",
              "permissionsRequired": [
                "notify.users.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/notify/{id}",
              "permissionsRequired": [
                "notify.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/notify/{id}",
              "permissionsRequired": [
                "notify.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/notify/{id}",
              "permissionsRequired": [
                "notify.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/notify/user/_self",
              "permissionsRequired": [
                "notify.user.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/notify/user/_self",
              "permissionsRequired": [
                "notify.user.collection.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "patron-notice",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron-notice",
              "permissionsRequired": [
                "patron-notice.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "template-request.post",
                "sender.message-delivery.post"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/_/jsonSchemas",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_ramls",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/_/ramls",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "notify.collection.get",
          "replaces": [],
          "displayName": "Notifications - get notify collection",
          "description": "Get notify collection",
          "subPermissions": []
        },
        {
          "permissionName": "notify.item.get",
          "replaces": [],
          "displayName": "Notifications- get individual notification from storage",
          "description": "Get individual notification",
          "subPermissions": []
        },
        {
          "permissionName": "notify.item.post",
          "replaces": [],
          "displayName": "Notifications - create notification",
          "description": "Create notification",
          "subPermissions": []
        },
        {
          "permissionName": "notify.users.item.post",
          "replaces": [],
          "displayName": "Notifications - create notification for a user",
          "description": "Create notification for a user",
          "subPermissions": []
        },
        {
          "permissionName": "notify.item.put",
          "replaces": [],
          "displayName": "Notifications - modify notification",
          "description": "Modify notification",
          "subPermissions": []
        },
        {
          "permissionName": "notify.item.delete",
          "replaces": [],
          "displayName": "Notifications - delete notification",
          "description": "Delete notification",
          "subPermissions": []
        },
        {
          "permissionName": "patron-notice.post",
          "replaces": [],
          "displayName": "Patron Notice",
          "description": "Post Patron Notice",
          "subPermissions": []
        },
        {
          "permissionName": "notify.user.collection.get",
          "replaces": [],
          "displayName": "Notifications - get notify collection for self",
          "description": "Get notify collection for self user",
          "subPermissions": []
        },
        {
          "permissionName": "notify.user.collection.delete",
          "replaces": [],
          "displayName": "Notifications - delete notify collection for self",
          "description": "Delete notify collection for self user",
          "subPermissions": []
        },
        {
          "permissionName": "notify.all",
          "replaces": [],
          "displayName": "Notifications module - all permissions",
          "description": "Entire set of permissions needed to use the notify modules",
          "subPermissions": [
            "notify.collection.get",
            "notify.item.get",
            "notify.item.post",
            "notify.users.item.post",
            "notify.item.put",
            "notify.item.delete"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-notify:3.5.0-SNAPSHOT.139",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "Notify"
    },
    {
      "id": "mod-patron-6.4.0-SNAPSHOT.170",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        },
        {
          "id": "circulation",
          "version": "14.0"
        },
        {
          "id": "feesfines",
          "version": "14.0 15.0 16.0 17.0 18.0 19.0"
        },
        {
          "id": "inventory",
          "version": "5.2 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "staging-users",
          "version": "1.2"
        },
        {
          "id": "holdings-storage",
          "version": "8.0"
        }
      ],
      "provides": [
        {
          "id": "patron",
          "version": "6.5",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron",
              "permissionsRequired": [
                "patron.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "staging-users.item.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/patron/{externalSystemId}",
              "permissionsRequired": [
                "patron.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "staging-users.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron/registration-status/{identifier}",
              "permissionsRequired": [
                "patron.registration-status.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.get",
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron/account",
              "permissionsRequired": [
                "patron.account.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron/account/{accountId}",
              "permissionsRequired": [
                "patron.account.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.item.get",
                "configuration.entries.collection.get",
                "users.item.get",
                "circulation.loans.collection.get",
                "circulation.requests.collection.get",
                "accounts.collection.get",
                "inventory.items.item.get",
                "inventory.instances.item.get",
                "inventory.instances.collection.get",
                "feefines.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/patron/account/by-email/{email}",
              "permissionsRequired": [
                "patron.account-by-email.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.item.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron/account/{accountId}/item/{itemId}/renew",
              "permissionsRequired": [
                "patron.renew.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.renew-by-id.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron/account/{accountId}/item/{itemId}/hold",
              "permissionsRequired": [
                "patron.account.item-hold.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.requests.item.post",
                "inventory.items.item.get",
                "inventory-storage.holdings.item.get",
                "users.item.get",
                "circulation.rules.request-policy.get",
                "circulation-storage.request-policies.item.get",
                "circulation-bff.ecs-request-external.item.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron/account/{accountId}/instance/{instanceId}/hold",
              "permissionsRequired": [
                "patron.account.instance-hold.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.requests.instances.item.post",
                "circulation-bff.ecs-request-external.item.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron/account/{accountId}/hold/{holdId}/cancel",
              "permissionsRequired": [
                "patron.account.hold-cancel.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.requests.item.put",
                "circulation.requests.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron/account/{accountId}/instance/{instanceId}/allowed-service-points",
              "permissionsRequired": [
                "patron.account.instance-allowed-service-points.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.requests.allowed-service-points.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron/account/{accountId}/item/{itemId}/allowed-service-points",
              "permissionsRequired": [
                "patron.account.item-allowed-service-points.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation.requests.allowed-service-points.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "tlr-settings",
          "version": "1.0"
        },
        {
          "id": "circulation-settings-storage",
          "version": "1.0"
        },
        {
          "id": "circulation-bff-ecs-request-external",
          "version": "1.1"
        },
        {
          "id": "circulation-bff-requests",
          "version": "1.3"
        },
        {
          "id": "allowed-service-points",
          "version": "1.2"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "patron.item.post",
          "replaces": [
            "patron.staging-users.item.post"
          ],
          "displayName": "staging-users post",
          "description": "Post a staging user records",
          "subPermissions": []
        },
        {
          "permissionName": "patron.item.put",
          "replaces": [],
          "displayName": "staging-users put",
          "description": "Put a staging user records",
          "subPermissions": []
        },
        {
          "permissionName": "patron.account.item.get",
          "replaces": [],
          "displayName": "patron - get account details",
          "description": "Get user account details",
          "subPermissions": []
        },
        {
          "permissionName": "patron.account.collection.get",
          "replaces": [],
          "displayName": "patron - get account collection details",
          "description": "Get user account collection details",
          "subPermissions": []
        },
        {
          "permissionName": "patron.renew.item.post",
          "replaces": [],
          "displayName": "patron - renew a loan",
          "description": "Renew a loan for this patron",
          "subPermissions": []
        },
        {
          "permissionName": "patron.account.item-hold.item.post",
          "replaces": [
            "patron.hold.item.post"
          ],
          "displayName": "patron - create a hold",
          "description": "Creates a hold on the specified item for this patron",
          "subPermissions": []
        },
        {
          "permissionName": "patron.account.instance-hold.item.post",
          "replaces": [
            "patron.hold.instance.item.post"
          ],
          "displayName": "patron - create an instance level hold",
          "description": "Creates a hold on an item from the specified instance for this patron",
          "subPermissions": []
        },
        {
          "permissionName": "patron.account.hold-cancel.item.post",
          "replaces": [
            "patron.hold.cancel.item.post"
          ],
          "displayName": "patron - remove a hold",
          "description": "Removes the specified hold",
          "subPermissions": []
        },
        {
          "permissionName": "patron.account.instance-allowed-service-points.item.get",
          "replaces": [
            "patron.hold.allowed-service-points.get"
          ],
          "displayName": "patron - get a list of allowed service points for a hold",
          "description": "Get a list of allowed service points for a hold",
          "subPermissions": []
        },
        {
          "permissionName": "patron.account.item-allowed-service-points.item.get",
          "replaces": [
            "patron.hold.allowed-service-points.get"
          ],
          "displayName": "patron - get a list of allowed service points for a hold",
          "description": "Get a list of allowed service points for a hold",
          "subPermissions": []
        },
        {
          "permissionName": "patron.account-by-email.item.put",
          "replaces": [],
          "displayName": "update account by email",
          "description": "Update account based on emailId",
          "subPermissions": []
        },
        {
          "permissionName": "patron.registration-status.item.get",
          "replaces": [],
          "displayName": "Get patron details",
          "description": "Get patron details by emailId or externalSystemId",
          "subPermissions": []
        },
        {
          "permissionName": "patron.all",
          "replaces": [],
          "displayName": "patron - all permissions",
          "description": "Entire set of permissions needed to use patron",
          "subPermissions": [
            "patron.item.post",
            "patron.item.put",
            "patron.account.item.get",
            "patron.account.item.put",
            "patron.account-by-email.item.put",
            "patron.account.collection.get",
            "patron.account-renew.item.post",
            "patron.renew.item.post",
            "patron.account.item-hold.item.post",
            "patron.account.instance-hold.item.post",
            "patron.account.hold-cancel.item.post",
            "patron.account.item-allowed-service-points.item.get",
            "patron.account.instance-allowed-service-points.item.get",
            "patron.registration-status.item.get"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-patron:6.4.0-SNAPSHOT.170",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          }
        ],
        "dockerCMD": []
      },
      "name": "Patron Services Module"
    },
    {
      "id": "mod-patron-blocks-1.13.0-SNAPSHOT.112",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
        {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
        {
          "id": "pubsub-subscribers",
          "version": "0.1"
        },
        {
          "id": "loan-storage",
          "version": "7.0"
        },
        {
          "id": "users",
          "version": "15.1 16.0"
        }
      ],
      "provides": [
        {
          "id": "automated-patron-blocks",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/automated-patron-blocks/{userId}",
              "permissionsRequired": [
                "patron-blocks.automated-patron-blocks.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "user-summary",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/user-summary/{userId}",
              "permissionsRequired": [
                "patron-blocks.user-summary.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "patron-blocks-event-handlers",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/handlers/fee-fine-balance-changed",
              "permissionsRequired": [
                "patron-blocks.handlers.fee-fine-balance-changed.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/handlers/item-checked-out",
              "permissionsRequired": [
                "patron-blocks.handlers.item-checked-out.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/handlers/item-checked-in",
              "permissionsRequired": [
                "patron-blocks.handlers.item-checked-in.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/handlers/item-declared-lost",
              "permissionsRequired": [
                "patron-blocks.handlers.item-declared-lost.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/handlers/item-aged-to-lost",
              "permissionsRequired": [
                "patron-blocks.handlers.item-aged-to-lost.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/handlers/item-claimed-returned",
              "permissionsRequired": [
                "patron-blocks.handlers.item-claimed-returned.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/handlers/loan-due-date-changed",
              "permissionsRequired": [
                "patron-blocks.handlers.loan-due-date-changed.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/handlers/loan-closed",
              "permissionsRequired": [
                "patron-blocks.handlers.loan-closed.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/synchronization/job",
              "permissionsRequired": [
                "patron-blocks.synchronization.job.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/automated-patron-blocks/synchronization/job/{syncJobId}",
              "permissionsRequired": [
                "patron-blocks.synchronization.job.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "pubsub.event-types.post",
                "pubsub.publishers.post",
                "pubsub.subscribers.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "patron-block-conditions",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-block-conditions",
              "permissionsRequired": [
                "patron-blocks.patron-block-conditions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-block-conditions/{id}",
              "permissionsRequired": [
                "patron-blocks.patron-block-conditions.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/patron-block-conditions/{id}",
              "permissionsRequired": [
                "patron-blocks.patron-block-conditions.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "patron-block-limits",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-block-limits",
              "permissionsRequired": [
                "patron-blocks.patron-block-limits.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/patron-block-limits/{id}",
              "permissionsRequired": [
                "patron-blocks.patron-block-limits.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/patron-block-limits",
              "permissionsRequired": [
                "patron-blocks.patron-block-limits.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/patron-block-limits/{id}",
              "permissionsRequired": [
                "patron-blocks.patron-block-limits.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/patron-block-limits/{id}",
              "permissionsRequired": [
                "patron-blocks.patron-block-limits.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_timer",
          "version": "1.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/automated-patron-blocks/synchronization/start",
              "unit": "minute",
              "delay": "1",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "patron-blocks.synchronization-run.post",
                "circulation-storage.loans.collection.get",
                "circulation-storage.loans.item.get",
                "accounts.collection.get",
                "accounts.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "patron-blocks.patron-block-conditions.collection.get",
          "replaces": [
            "patron-block-conditions.collection.get"
          ],
          "displayName": "Patron block conditions - get patron block condition collection",
          "description": "Get patron block condition collection",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.patron-block-conditions.item.get",
          "replaces": [
            "patron-block-conditions.item.get"
          ],
          "displayName": "Patron block conditions - get patron block condition",
          "description": "Get patron block condition by id",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.patron-block-conditions.item.put",
          "replaces": [
            "patron-block-conditions.item.put"
          ],
          "displayName": "Patron block conditions - put patron block condition",
          "description": "Put patron block condition by id",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.patron-block-limits.collection.get",
          "replaces": [
            "patron-block-limits.collection.get"
          ],
          "displayName": "Patron block limits - get patron block limit collection",
          "description": "Get patron block limit collection",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.patron-block-limits.item.get",
          "replaces": [
            "patron-block-limits.item.get"
          ],
          "displayName": "Patron block limits - get patron block limit",
          "description": "Get patron block limit by id",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.patron-block-limits.item.post",
          "replaces": [
            "patron-block-limits.item.post"
          ],
          "displayName": "Patron block limits - post patron block limit",
          "description": "Create patron block limit",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.patron-block-limits.item.put",
          "replaces": [
            "patron-block-limits.item.put"
          ],
          "displayName": "Patron block limits - put patron block limit",
          "description": "Put patron block limit by id",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.patron-block-limits.item.delete",
          "replaces": [
            "patron-block-limits.item.delete"
          ],
          "displayName": "Patron block limits - delete patron block limit",
          "description": "Delete patron block limit by id",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.automated-patron-blocks.collection.get",
          "replaces": [
            "automated-patron-blocks.collection.get"
          ],
          "displayName": "Patron blocks - get blocks for patron",
          "description": "Get automated patron blocks by user ID",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.user-summary.item.get",
          "replaces": [
            "user-summary.item.get"
          ],
          "displayName": "User summary - get UserSummary object",
          "description": "Get UserSummary object by user ID",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.synchronization.job.post",
          "replaces": [],
          "displayName": "Synchronization job - post Synchronization job",
          "description": "Post Synchronization job",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.synchronization.job.get",
          "replaces": [
            "patron-blocks.synchronization.job.get"
          ],
          "displayName": "Synchronization job - get Synchronization job by ID",
          "description": "Get Synchronization job",
          "subPermissions": []
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-patron-blocks:1.13.0-SNAPSHOT.112",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "name": "Patron Blocks Module"
    },
    {
      "id": "mod-pubsub-2.17.0-SNAPSHOT.263",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "users",
          "version": "15.1 16.0"
        },
        {
          "id": "login",
          "version": "6.0 7.0"
        },
        {
          "id": "permissions",
          "version": "5.2"
        }
      ],
      "provides": [
        {
          "id": "pubsub-event-types",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/pubsub/event-types",
              "permissionsRequired": [
                "pubsub.event-types.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/pubsub/event-types",
              "permissionsRequired": [
                "pubsub.event-types.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/pubsub/event-types/{eventTypeName}",
              "permissionsRequired": [
                "pubsub.event-types.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/pubsub/event-types/{eventTypeName}",
              "permissionsRequired": [
                "pubsub.event-types.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/pubsub/event-types/{eventTypeName}",
              "permissionsRequired": [
                "pubsub.event-types.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "pubsub-publishers",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/pubsub/event-types/declare/publisher",
              "permissionsRequired": [
                "pubsub.publishers.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/pubsub/event-types/{eventTypeName}/publishers",
              "permissionsRequired": [
                "pubsub.publishers.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/pubsub/event-types/{eventTypeName}/publishers",
              "permissionsRequired": [
                "pubsub.publishers.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "pubsub-subscribers",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/pubsub/event-types/declare/subscriber",
              "permissionsRequired": [
                "pubsub.subscribers.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/pubsub/event-types/{eventTypeName}/subscribers",
              "permissionsRequired": [
                "pubsub.subscribers.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/pubsub/event-types/{eventTypeName}/subscribers",
              "permissionsRequired": [
                "pubsub.subscribers.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "pubsub-audit",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/pubsub/history",
              "permissionsRequired": [
                "pubsub.audit.history.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/pubsub/audit-messages/{eventId}/payload",
              "permissionsRequired": [
                "pubsub.audit.message.payload.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "pubsub-publish",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/pubsub/publish",
              "permissionsRequired": [
                "pubsub.publish.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "pubsub-messaging-modules",
          "version": "0.1",
          "handlers": [
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/pubsub/messaging-modules",
              "permissionsRequired": [
                "pubsub.messaging-modules.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "perms.users.get",
                "perms.users.item.post",
                "perms.users.item.put",
                "perms.users.assign.immutable"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "pubsub.event-types.collection.get",
          "replaces": [],
          "displayName": "PubSub - get Event Descriptor collection",
          "description": "Get Event Descriptor collection",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.event-types.item.get",
          "replaces": [
            "pubsub.event-types.get"
          ],
          "displayName": "PubSub - get Event Descriptor",
          "description": "Get Event Descriptor",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.event-types.post",
          "replaces": [],
          "displayName": "PubSub - create new Event Type",
          "description": "Post Event Descriptor",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.event-types.put",
          "replaces": [],
          "displayName": "PubSub - update Event Descriptor for Event Type",
          "description": "Put Event Descriptor",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.event-types.delete",
          "replaces": [],
          "displayName": "PubSub - delete Event Type",
          "description": "Delete Event Descriptor",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.publishers.post",
          "replaces": [],
          "displayName": "PubSub - declare publisher",
          "description": "Post Publisher Descriptor",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.publishers.delete",
          "replaces": [],
          "displayName": "PubSub - delete publisher declaration",
          "description": "Delete Publisher",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.publishers.get",
          "replaces": [],
          "displayName": "PubSub - get publishers",
          "description": "Get Publishers",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.subscribers.post",
          "replaces": [],
          "displayName": "PubSub - declare subscriber",
          "description": "Post Subscriber Descriptor",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.subscribers.delete",
          "replaces": [],
          "displayName": "PubSub - delete subscriber declaration",
          "description": "Delete Subscriber",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.subscribers.get",
          "replaces": [],
          "displayName": "PubSub - get subscribers",
          "description": "Get Subscribers",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.audit.history.get",
          "replaces": [],
          "displayName": "PubSub - get history",
          "description": "Get history",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.audit.message.payload.get",
          "replaces": [],
          "displayName": "PubSub - get audit message payload",
          "description": "Get audit message payload",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.publish.post",
          "replaces": [],
          "displayName": "PubSub - publish event",
          "description": "Publish event",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.messaging-modules.delete",
          "replaces": [],
          "displayName": "PubSub - delete publishers and subscribers declarations",
          "description": "Delete publishers or subscribers",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.pub-sub-handlers.log-record-event.post",
          "replaces": [],
          "displayName": "log record events from pub-sub",
          "description": "log record events received from pub-sub",
          "subPermissions": []
        },
        {
          "permissionName": "audit.pub-sub-handlers.log-record-event.post",
          "replaces": [],
          "displayName": "log record events from pub-sub",
          "description": "log record events received from pub-sub",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.handlers.loan-related-fee-fine-closed.post",
          "replaces": [],
          "displayName": "circulation - loan-related fee/fine closed",
          "description": "Loan-related fee/fine closed",
          "subPermissions": []
        },
        {
          "permissionName": "circulation.handlers.fee-fine-balance-changed.post",
          "replaces": [],
          "displayName": "circulation - fee/fine balance changed",
          "description": "Fee/fine balance changed",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.handlers.fee-fine-balance-changed.post",
          "replaces": [],
          "displayName": "Patron blocks - post fee fine balance changed event",
          "description": "Post fee fine balance changed event",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.handlers.item-checked-out.post",
          "replaces": [],
          "displayName": "Patron blocks - post item checked out event",
          "description": "Post item checked out event",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.handlers.item-checked-in.post",
          "replaces": [],
          "displayName": "Patron blocks - post item checked in event",
          "description": "Post item checked in event",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.handlers.item-declared-lost.post",
          "replaces": [],
          "displayName": "Patron blocks - post item declared lost event",
          "description": "Post item declared lost event",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.handlers.item-aged-to-lost.post",
          "replaces": [],
          "displayName": "Patron blocks - post item aged to lost event",
          "description": "Post item aged to lost event",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.handlers.item-claimed-returned.post",
          "replaces": [],
          "displayName": "Patron blocks - post item claimed returned event",
          "description": "Post item claimed returned event",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.handlers.loan-due-date-changed.post",
          "replaces": [],
          "displayName": "Patron blocks - post loan due date changed event",
          "description": "Post loan due date changed event",
          "subPermissions": []
        },
        {
          "permissionName": "patron-blocks.handlers.loan-closed.post",
          "replaces": [],
          "displayName": "Patron blocks - post loan closed event",
          "description": "Post loan closed event",
          "subPermissions": []
        },
        {
          "permissionName": "pubsub.events.post",
          "replaces": [
            "source-storage.events.post",
            "source-records-manager.events.post",
            "inventory.events.post",
            "circulation.events.post",
            "patron-blocks.events.post",
            "audit-data.events.post"
          ],
          "displayName": "PubSub - post event.",
          "description": "Post all events.",
          "subPermissions": []
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-pubsub:2.17.0-SNAPSHOT.263",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 1073741824,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -XX:+HeapDumpOnOutOfMemoryError"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "OKAPI_URL",
            "value": "http://10.0.2.15:9130"
          },
          {
            "name": "SYSTEM_USER_NAME",
            "value": "pub-sub"
          },
          {
            "name": "SYSTEM_USER_PASSWORD",
            "value": "pubsub"
          }
        ],
        "dockerCMD": []
      },
      "metadata": {
        "user": {
          "type": "system",
          "permissions": [
            "pubsub.events.post",
            "audit.pub-sub-handlers.log-record-event.post",
            "remote-storage.pub-sub-handlers.log-record-event.post",
            "circulation.handlers.loan-related-fee-fine-closed.post",
            "circulation.handlers.fee-fine-balance-changed.post",
            "patron-blocks.handlers.fee-fine-balance-changed.post",
            "patron-blocks.handlers.item-checked-out.post",
            "patron-blocks.handlers.item-checked-in.post",
            "patron-blocks.handlers.item-declared-lost.post",
            "patron-blocks.handlers.item-aged-to-lost.post",
            "patron-blocks.handlers.item-claimed-returned.post",
            "patron-blocks.handlers.loan-due-date-changed.post",
            "patron-blocks.handlers.loan-closed.post"
          ]
        }
      },
      "name": "Pubsub"
    },
    {
      "id": "mod-quick-marc-7.1.0-SNAPSHOT.330",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "source-manager-parsed-records",
          "version": "3.0"
        },
        {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
        {
          "id": "source-manager-records",
          "version": "2.0"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        },
        {
          "id": "field-protection-settings",
          "version": "1.2"
        },
        {
          "id": "instance-authority-links",
          "version": "2.1"
        },
        {
          "id": "instance-authority-linking-rules",
          "version": "1.0"
        },
        {
          "id": "instance-authority-links-suggestions",
          "version": "1.2"
        },
        {
          "id": "specification-storage",
          "version": "1.0"
        }
      ],
      "provides": [
        {
          "id": "marc-records-editor",
          "version": "6.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/records-editor/records",
              "permissionsRequired": [
                "marc-records-editor.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.parsedrecords.get",
                "users.item.get",
                "converter-storage.field-protection-settings.collection.get",
                "instance-authority-links.instances.collection.get",
                "instance-authority.linking-rules.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/records-editor/records",
              "permissionsRequired": [
                "marc-records-editor.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.jobexecutions.post",
                "change-manager.jobExecutions.jobProfile.item.put",
                "change-manager.records.post",
                "specification-storage.specifications.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/records-editor/records/{id}",
              "permissionsRequired": [
                "marc-records-editor.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "change-manager.parsedrecords.put",
                "instance-authority-links.instances.collection.put",
                "specification-storage.specifications.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/records-editor/records/status",
              "permissionsRequired": [
                "marc-records-editor.status.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/records-editor/links/suggestion",
              "permissionsRequired": [
                "marc-records-editor.links.suggestion.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "instance-authority-links.suggestions.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/records-editor/validate",
              "permissionsRequired": [
                "marc-records-editor.validate.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "marc-specifications",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/marc-specifications/{recordType}/{fieldTag}",
              "permissionsRequired": [
                "marc-specifications.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "marc-specifications.item.get",
          "replaces": [],
          "displayName": "marc-specifications - get a marc specification",
          "description": "Get a marc specification",
          "subPermissions": []
        },
        {
          "permissionName": "marc-records-editor.item.get",
          "replaces": [],
          "displayName": "marc-records-editor - get a record",
          "description": "Get a record",
          "subPermissions": []
        },
        {
          "permissionName": "marc-records-editor.item.post",
          "replaces": [],
          "displayName": "marc-records-editor - create a new record",
          "description": "Create a new record",
          "subPermissions": []
        },
        {
          "permissionName": "marc-records-editor.item.put",
          "replaces": [],
          "displayName": "marc-records-editor - update a record",
          "description": "Update a record",
          "subPermissions": []
        },
        {
          "permissionName": "marc-records-editor.status.item.get",
          "replaces": [],
          "displayName": "marc-records-editor - get record creation status",
          "description": "Get record creation status",
          "subPermissions": []
        },
        {
          "permissionName": "marc-records-editor.links.suggestion.post",
          "replaces": [],
          "displayName": "marc-records-editor - get record creation status",
          "description": "Suggest links for record collection",
          "subPermissions": []
        },
        {
          "permissionName": "marc-records-editor.validate.post",
          "replaces": [],
          "displayName": "marc-records-editor - validate record",
          "description": "Validate record",
          "subPermissions": []
        },
        {
          "permissionName": "marc-records-editor.all",
          "replaces": [],
          "displayName": "All marc-records-editor permissions",
          "description": "All permissions for the marc-records-editor",
          "subPermissions": [
            "marc-records-editor.item.get",
            "marc-records-editor.item.post",
            "marc-records-editor.item.put",
            "marc-records-editor.status.item.get",
            "marc-records-editor.links.suggestion.post",
            "marc-records-editor.validate.post"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-quick-marc:7.1.0-SNAPSHOT.330",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 536870912,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "REPLICATION_FACTOR",
            "value": "1"
          },
          {
            "name": "NUMBER_OF_PARTITIONS",
            "value": "1"
          },
          {
            "name": "ENV",
            "value": "folio"
          }
        ],
        "dockerCMD": []
      },
      "name": "quickMARC"
    },
    {
      "id": "mod-record-specifications-2.1.0-SNAPSHOT.110",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [
        {
          "id": "specification-storage",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/specification-storage/specifications",
              "permissionsRequired": [
                "specification-storage.specifications.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/specification-storage/specifications/{specificationId}",
              "permissionsRequired": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/specification-storage/specifications/{specificationId}/sync",
              "permissionsRequired": [
                "specification-storage.specification.item.sync.execute"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/specification-storage/specifications/{specificationId}/rules",
              "permissionsRequired": [
                "specification-storage.specification.rules.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PATCH"
              ],
              "pathPattern": "/specification-storage/specifications/{specificationId}/rules/{ruleId}",
              "permissionsRequired": [
                "specification-storage.specification.rules.item.patch"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/specification-storage/specifications/{specificationId}/fields",
              "permissionsRequired": [
                "specification-storage.specification.fields.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/specification-storage/specifications/{specificationId}/fields",
              "permissionsRequired": [
                "specification-storage.specification.fields.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/specification-storage/fields/{id}",
              "permissionsRequired": [
                "specification-storage.fields.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/specification-storage/fields/{id}",
              "permissionsRequired": [
                "specification-storage.fields.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/specification-storage/fields/{fieldId}/subfields",
              "permissionsRequired": [
                "specification-storage.field.subfields.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/specification-storage/fields/{fieldId}/subfields",
              "permissionsRequired": [
                "specification-storage.field.subfields.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/specification-storage/fields/{fieldId}/indicators",
              "permissionsRequired": [
                "specification-storage.field.indicators.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/specification-storage/fields/{fieldId}/indicators",
              "permissionsRequired": [
                "specification-storage.field.indicators.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/specification-storage/indicators/{indicatorId}",
              "permissionsRequired": [
                "specification-storage.indicators.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/specification-storage/indicators/{indicatorId}/indicator-codes",
              "permissionsRequired": [
                "specification-storage.indicator.indicator-codes.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/specification-storage/indicators/{indicatorId}/indicator-codes",
              "permissionsRequired": [
                "specification-storage.indicator.indicator-codes.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/specification-storage/indicator-codes/{indicatorCodeId}",
              "permissionsRequired": [
                "specification-storage.indicator-codes.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/specification-storage/indicator-codes/{indicatorCodeId}",
              "permissionsRequired": [
                "specification-storage.indicator-codes.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/specification-storage/subfields/{subfieldId}",
              "permissionsRequired": [
                "specification-storage.subfields.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/specification-storage/subfields/{subfieldId}",
              "permissionsRequired": [
                "specification-storage.subfields.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "specification-storage.specifications.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "specification-storage.specifications.collection.get",
          "replaces": [],
          "displayName": "Specification Storage - Get specification collection",
          "description": "Get specification collection",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.specifications.item.get",
          "replaces": [],
          "displayName": "Specification Storage - Get specification",
          "description": "Get specification",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.specification.item.sync.execute",
          "replaces": [],
          "displayName": "Specification Storage - Sync specification",
          "description": "Sync specification",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.specification.rules.collection.get",
          "replaces": [],
          "displayName": "Specification Storage - Get specification rules collection",
          "description": "Get specification rules collection",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.specification.rules.item.patch",
          "replaces": [],
          "displayName": "Specification Storage - Toggle rule for specification",
          "description": "Toggle rule for specification",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.specification.fields.collection.get",
          "replaces": [],
          "displayName": "Specification Storage - Get specification field definition collection",
          "description": "Get specification fields collection",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.specification.fields.item.post",
          "replaces": [],
          "displayName": "Specification Storage - Create field definition for specification",
          "description": "Create specification field definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.fields.item.put",
          "replaces": [],
          "displayName": "Specification Storage - Update field definition",
          "description": "Update field definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.fields.item.delete",
          "replaces": [],
          "displayName": "Specification Storage - Delete field definition",
          "description": "Delete field definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.field.subfields.collection.get",
          "replaces": [],
          "displayName": "Specification Storage - Get field subfields definition collection",
          "description": "Get field subfields collection",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.field.subfields.item.post",
          "replaces": [],
          "displayName": "Specification Storage - Create subfield definition for field",
          "description": "Create field subfield definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.field.indicators.collection.get",
          "replaces": [],
          "displayName": "Specification Storage - Get field indicators definition collection",
          "description": "Get field indicators collection",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.field.indicators.item.post",
          "replaces": [],
          "displayName": "Specification Storage - Create indicator definition for field",
          "description": "Create field indicator definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.indicators.item.put",
          "replaces": [],
          "displayName": "Specification Storage - Update indicator definition",
          "description": "Update indicator definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.indicator.indicator-codes.collection.get",
          "replaces": [],
          "displayName": "Specification Storage - Get indicator code definition collection",
          "description": "Get indicator codes collection",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.indicator.indicator-codes.item.post",
          "replaces": [],
          "displayName": "Specification Storage - Create code definition for indicator",
          "description": "Create indicator code definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.indicator-codes.item.put",
          "replaces": [],
          "displayName": "Specification Storage - Update indicator code definition",
          "description": "Update indicator code definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.indicator-codes.item.delete",
          "replaces": [],
          "displayName": "Specification Storage - Delete indicator code definition",
          "description": "Delete indicator code definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.subfields.item.put",
          "replaces": [],
          "displayName": "Specification Storage - Update subfield definition",
          "description": "Update subfield definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.subfields.item.delete",
          "replaces": [],
          "displayName": "Specification Storage - Delete subfield definition",
          "description": "Delete subfield definition",
          "subPermissions": []
        },
        {
          "permissionName": "specification-storage.all",
          "replaces": [],
          "displayName": "Specification Storage - All permissions",
          "description": "Entire set of permissions needed to manage specifications",
          "subPermissions": [
            "specification-storage.specifications.collection.get",
            "specification-storage.specifications.item.get",
            "specification-storage.specification.rules.collection.get",
            "specification-storage.specification.rules.item.patch",
            "specification-storage.specification.fields.collection.get",
            "specification-storage.specification.fields.item.post",
            "specification-storage.fields.item.put",
            "specification-storage.fields.item.delete",
            "specification-storage.field.subfields.collection.get",
            "specification-storage.field.subfields.item.post",
            "specification-storage.field.indicators.collection.get",
            "specification-storage.field.indicators.item.post",
            "specification-storage.indicators.item.put",
            "specification-storage.indicator.indicator-codes.collection.get",
            "specification-storage.indicator.indicator-codes.item.post",
            "specification-storage.subfields.item.put",
            "specification-storage.subfields.item.delete"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-record-specifications:2.1.0-SNAPSHOT.110",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 542293850,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
          {
            "name": "DB_HOST",
            "value": "localhost",
            "description": "Postgres hostname"
          },
          {
            "name": "DB_PORT",
            "value": "5432",
            "description": "Postgres port"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin",
            "description": "Postgres username"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin",
            "description": "Postgres username password"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules",
            "description": "Postgres database name"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "10",
            "description": "This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections"
          },
          {
            "name": "DB_MINIMUM_IDLE",
            "value": "10",
            "description": "This property controls the minimum number of idle connections that HikariCP tries to maintain in the pool"
          },
          {
            "name": "DB_CONNECTION_TIMEOUT",
            "value": "30000",
            "description": "This property controls the maximum number of milliseconds that a client will wait for a connection from the pool"
          },
          {
            "name": "DB_IDLE_TIMEOUT",
            "value": "600000",
            "description": "This property controls the maximum amount of time that a connection is allowed to sit idle in the pool. This setting only applies when `DB_MINIMUM_IDLE` is defined to be less than `DB_MAXPOOLSIZE`"
          },
          {
            "name": "DB_KEEPALIVE_TIME",
            "value": "0",
            "description": "This property controls how frequently HikariCP will attempt to keep a connection alive, in order to prevent it from being timed out by the database or network infrastructure (0 - disabled)"
          },
          {
            "name": "DB_MAX_LIFETIME",
            "value": "1800000",
            "description": "This property controls the maximum lifetime of a connection in the pool"
          },
          {
            "name": "DB_VALIDATION_TIMEOUT",
            "value": "5000",
            "description": "This property controls the maximum amount of time that a connection will be tested for aliveness. This value must be less than the `DB_CONNECTION_TIMEOUT`"
          },
          {
            "name": "DB_INITIALIZATION_FAIL_TIMEOUT",
            "value": "30000",
            "description": "This property controls whether the pool will \"fail fast\" if the pool cannot be seeded with an initial connection successfully"
          },
          {
            "name": "DB_LEAK_DETECTION_THRESHOLD",
            "value": "30000",
            "description": "This property controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak (0 - disabled)"
          },
          {
            "name": "KAFKA_HOST",
            "value": "kafka",
            "description": "Kafka broker hostname"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092",
            "description": "Kafka broker port"
          },
          {
            "name": "KAFKA_SECURITY_PROTOCOL",
            "value": "PLAINTEXT",
            "description": "Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)"
          },
          {
            "name": "KAFKA_SSL_KEYSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client."
          },
          {
            "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
            "value": "",
            "description": "The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured."
          },
          {
            "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka trust store file."
          },
          {
            "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
            "value": "",
            "description": "The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled."
          }
        ],
        "dockerCMD": []
      },
      "name": "Record Specifications"
    },
    {
      "id": "mod-remote-storage-3.5.0-SNAPSHOT.234",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "inventory",
          "version": "14.1"
        },
        {
          "id": "inventory-move",
          "version": "0.2"
        },
        {
          "id": "holdings-storage",
          "version": "8.0"
        },
        {
          "id": "identifier-types",
          "version": "1.2"
        },
        {
          "id": "contributor-types",
          "version": "2.0"
        },
        {
          "id": "users",
          "version": "16.4"
        },
        {
          "id": "authtoken",
          "version": "2.1"
        },
        {
          "id": "login",
          "version": "7.3"
        },
        {
          "id": "permissions",
          "version": "5.8"
        },
        {
          "id": "locations",
          "version": "3.1"
        },
        {
          "id": "circulation",
          "version": "14.6"
        },
        {
          "id": "item-storage",
          "version": "11.0"
        },
        {
          "id": "service-points",
          "version": "3.4"
        },
        {
          "id": "pubsub-event-types",
          "version": "0.1"
        },
        {
          "id": "pubsub-publishers",
          "version": "0.1"
        },
        {
          "id": "pubsub-subscribers",
          "version": "0.1"
        }
      ],
      "provides": [
        {
          "id": "remote-storage-configurations",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/configurations",
              "permissionsRequired": [
                "remote-storage.configurations.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/remote-storage/configurations/{configurationId}",
              "permissionsRequired": [
                "remote-storage.configurations.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/configurations",
              "permissionsRequired": [
                "remote-storage.configurations.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/configurations/{configurationId}",
              "permissionsRequired": [
                "remote-storage.configurations.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/remote-storage/configurations/{configurationId}",
              "permissionsRequired": [
                "remote-storage.configurations.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "remote-storage-mappings",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/mappings",
              "permissionsRequired": [
                "remote-storage.mappings.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/mappings",
              "permissionsRequired": [
                "remote-storage.mappings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/mappings/{finalLocationId}",
              "permissionsRequired": [
                "remote-storage.mappings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/remote-storage/mappings/{finalLocationId}",
              "permissionsRequired": [
                "remote-storage.mappings.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "remote-storage-extended-mappings",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/extended-mappings",
              "permissionsRequired": [
                "remote-storage.extended-mappings.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/extended-mappings",
              "permissionsRequired": [
                "remote-storage.extended-mappings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/extended-mappings/{finalLocationId}",
              "permissionsRequired": [
                "remote-storage.extended-mappings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/extended-mappings/locations",
              "permissionsRequired": [
                "remote-storage.extended-mappings-locations.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/remote-storage/extended-mappings/{finalLocationId}/{originalLocationId}",
              "permissionsRequired": [
                "remote-storage.extended-mappings.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "remote-storage-providers",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/providers",
              "permissionsRequired": [
                "remote-storage.providers.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "remote-storage-accessions",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/accessions",
              "permissionsRequired": [
                "remote-storage.accessions.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory.items.collection.get",
                "inventory.items.item.put",
                "inventory.instances.collection.get",
                "inventory.items.move.item.post",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.put",
                "inventory-storage.holdings.item.post",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.item-note-types.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/accessions",
              "permissionsRequired": [
                "remote-storage.accessions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/remote-storage/accessions/id/{accessionId}",
              "permissionsRequired": [
                "remote-storage.accessions.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/remote-storage/accessions/barcode/{barcode}",
              "permissionsRequired": [
                "remote-storage.accessions.item-barcode.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "remote-storage-retrievals",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/remote-storage/retrievals",
              "permissionsRequired": [
                "remote-storage.retrievals.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/remote-storage/retrievals/id/{retrievalId}",
              "permissionsRequired": [
                "remote-storage.retrievals.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/remote-storage/retrievals/barcode/{barcode}",
              "permissionsRequired": [
                "remote-storage.retrievals.item-barcode.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "remote-storage-check-in",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/retrieve/{remoteStorageConfigurationId}/checkInItem",
              "permissionsRequired": [
                "remote-storage.check-in.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get",
                "circulation.check-in-by-barcode.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/retrieve/{remoteStorageConfigurationId}/checkInItemByHoldId",
              "permissionsRequired": [
                "remote-storage.check-in.item-hold.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.locations.item.get",
                "circulation.check-in-by-barcode.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/return/{remoteStorageConfigurationId}",
              "permissionsRequired": [
                "remote-storage.return.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory.items.collection.get",
                "circulation.requests.queue-item.collection.get",
                "circulation.requests.queue-instance.collection.get",
                "inventory-storage.locations.item.get",
                "circulation.check-in-by-barcode.post",
                "inventory-storage.service-points.item.get",
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "remote-storage-event-handlers",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/pub-sub-handlers/log-record-event",
              "permissionsRequired": [
                "remote-storage.pub-sub-handlers.log-record-event.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory.items.collection.get",
                "users.collection.get",
                "inventory-storage.service-points.item.get",
                "circulation.requests.queue-item.collection.get",
                "circulation.requests.queue-instance.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "remote-storage-items",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/remote-storage/items/barcode/{barcode}/markAsMissing",
              "permissionsRequired": [
                "remote-storage.items.item.mark-as-missing.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory.items.collection.get",
                "inventory.items.item.mark-missing.post",
                "inventory-storage.items.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "login.item.delete",
                "perms.users.get",
                "perms.users.item.post",
                "perms.users.assign.immutable",
                "perms.users.assign.mutable",
                "pubsub.event-types.post",
                "pubsub.subscribers.post",
                "pubsub.publishers.post"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "item-note-types",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "remote-storage.configurations.item.post",
          "replaces": [],
          "displayName": "create a remote storage configuration",
          "description": "Add a remote storage configuration",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.configurations.item.put",
          "replaces": [],
          "displayName": "modify a remote storage configuration",
          "description": "Modify a remote storage configuration",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.configurations.collection.get",
          "replaces": [],
          "displayName": "get remote storage configurations collection",
          "description": "Get a list of remote storage configurations",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.configurations.item.get",
          "replaces": [],
          "displayName": "get remote storage configuration",
          "description": "Get a remote storage configuration by id",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.configurations.item.delete",
          "replaces": [],
          "displayName": "delete a remote storage configuration",
          "description": "Delete a remote storage configuration by id",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.mappings.item.post",
          "replaces": [],
          "displayName": "create/update location mapping",
          "description": "Create new or update existing location mapping",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.mappings.collection.get",
          "replaces": [],
          "displayName": "get location mappings collection",
          "description": "Get list of location mappings",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.mappings.item.get",
          "replaces": [],
          "displayName": "get location mapping by Folio location id",
          "description": "Get location mapping by Folio location id",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.mappings.item.delete",
          "replaces": [],
          "displayName": "Delete location mapping",
          "description": "Delete a location mapping by id",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.extended-mappings.item.post",
          "replaces": [],
          "displayName": "create/update extended location mapping",
          "description": "Create new or update existing extended location mapping",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.extended-mappings.collection.get",
          "replaces": [],
          "displayName": "get extended location mappings collection",
          "description": "Get list of extended location mappings",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.extended-mappings.item.get",
          "replaces": [],
          "displayName": "get extended location mapping by Folio location id",
          "description": "Get extended location mapping by Folio location id",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.extended-mappings-locations.collection.get",
          "replaces": [],
          "displayName": "get extended location mapping by Folio location id",
          "description": "Get extended location mapping by Folio location id",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.extended-mappings.item.delete",
          "replaces": [],
          "displayName": "Delete extended location mapping",
          "description": "Delete extended location mapping by id",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.providers.collection.get",
          "replaces": [],
          "displayName": "get remote storage providers collection",
          "description": "Get list of remote storage providers",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.accessions.item.post",
          "replaces": [],
          "displayName": "post remote storage accession item",
          "description": "Perform item accession initiated by remote storage",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.accessions.collection.get",
          "replaces": [],
          "displayName": "get remote storage accession queues collection",
          "description": "Get list of remote storage accession queues",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.accessions.item.put",
          "replaces": [],
          "displayName": "modify a remote storage accession queue",
          "description": "Modify a remote storage accession queue by changing accessioned date time",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.accessions.item-barcode.put",
          "replaces": [],
          "displayName": "modify a remote storage accession queue by barcode",
          "description": "Modify a remote storage accession queue by barcode and changing accessioned date time",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.retrievals.collection.get",
          "replaces": [],
          "displayName": "get remote storage retrieval queues collection",
          "description": "Get list of remote storage retrieval queue records",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.retrievals.item.put",
          "replaces": [],
          "displayName": "modify a remote storage retrieval queue record",
          "description": "Modify a remote storage retrieval queue record by changing retrieved date time",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.retrievals.item-barcode.put",
          "replaces": [],
          "displayName": "modify a remote storage retrieval queue record by barcode",
          "description": "Modify a remote storage retrieval queue record by barcode by changing retrieved date time",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.check-in.item.post",
          "replaces": [],
          "displayName": "check-in item by barcode",
          "description": "Check-in item by barcode",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.check-in.item-hold.post",
          "replaces": [],
          "displayName": "check-in item by hold id",
          "description": "Check-in item by hold id",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.return.item.post",
          "replaces": [],
          "displayName": "return item by barcode",
          "description": "Return item by barcode",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.items.item.mark-as-missing.post",
          "replaces": [],
          "displayName": "mark item as missing by barcode",
          "description": "Mark item as missing by barcode",
          "subPermissions": []
        },
        {
          "permissionName": "remote-storage.all",
          "replaces": [],
          "displayName": "remote storage API module - all permissions",
          "description": "All permissions for remote storage",
          "subPermissions": [
            "remote-storage.configurations.item.post",
            "remote-storage.configurations.item.put",
            "remote-storage.configurations.collection.get",
            "remote-storage.configurations.item.get",
            "remote-storage.configurations.item.delete",
            "remote-storage.mappings.item.post",
            "remote-storage.mappings.collection.get",
            "remote-storage.mappings.item.get",
            "remote-storage.mappings.item.delete",
            "remote-storage.extended-mappings.item.post",
            "remote-storage.extended-mappings.collection.get",
            "remote-storage.extended-mappings.item.get",
            "remote-storage.extended-mappings-locations.collection.get",
            "remote-storage.extended-mappings.item.delete",
            "remote-storage.providers.collection.get",
            "remote-storage.accessions.item.post",
            "remote-storage.accessions.collection.get",
            "remote-storage.accessions.item.put",
            "remote-storage.accessions.item-barcode.put",
            "remote-storage.retrievals.collection.get",
            "remote-storage.retrievals.item.put",
            "remote-storage.retrievals.item-barcode.put",
            "remote-storage.check-in.item.post",
            "remote-storage.check-in.item-hold.post",
            "remote-storage.return.item.post",
            "remote-storage.items.item.mark-as-missing.post"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-remote-storage:3.5.0-SNAPSHOT.234",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 712673984,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=75.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "KAFKA_HOST",
            "value": "kafka"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "KAFKA_SECURITY_PROTOCOL",
            "value": "PLAINTEXT"
          },
          {
            "name": "KAFKA_SSL_KEYSTORE_LOCATION",
            "value": ""
          },
          {
            "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
            "value": ""
          },
          {
            "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
            "value": ""
          },
          {
            "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
            "value": ""
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": []
      },
      "metadata": {
        "user": {
          "type": "system",
          "permissions": [
            "users.collection.get",
            "users.item.get",
            "inventory.instances.item.get",
            "inventory.instances.collection.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.item-note-types.item.get"
          ]
        }
      },
      "name": "Remote storage API module"
    },
    {
      "id": "mod-search-6.0.0-SNAPSHOT.728",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "instance-storage",
          "version": "10.3 11.0"
        },
        {
          "id": "login",
          "version": "7.0"
        },
        {
          "id": "permissions",
          "version": "5.3"
        },
        {
          "id": "users",
          "version": "15.3 16.0"
        },
        {
          "id": "authority-reindex",
          "version": "0.1"
        },
        {
          "id": "alternative-title-types",
          "version": "1.0"
        },
        {
          "id": "identifier-types",
          "version": "1.0"
        },
        {
          "id": "call-number-types",
          "version": "1.0"
        },
        {
          "id": "classification-types",
          "version": "1.2"
        }
      ],
      "provides": [
        {
          "id": "indices",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/index/indices",
              "permissionsRequired": [
                "search.index.indices.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/index/mappings",
              "permissionsRequired": [
                "search.index.mappings.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/index/records",
              "permissionsRequired": [
                "search.index.records.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.inventory-view.instances.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/index/inventory/reindex",
              "permissionsRequired": [
                "search.index.inventory.reindex.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.instance.reindex.post",
                "authority-storage.authority.reindex.post",
                "user-tenants.collection.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.location-units.campuses.collection.get",
                "inventory-storage.location-units.libraries.collection.get",
                "inventory-storage.location-units.institutions.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/search/index/settings",
              "permissionsRequired": [
                "search.index.settings.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/index/instance-records/reindex/status",
              "permissionsRequired": [
                "search.index.instance-records.reindex.status.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/index/instance-records/reindex/full",
              "permissionsRequired": [
                "search.index.instance-records.reindex.full.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory-storage.reindex-records.publish.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.collection.get",
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/index/instance-records/reindex/upload",
              "permissionsRequired": [
                "search.index.instance-records.reindex.upload.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/index/instance-records/reindex/merge/failed",
              "permissionsRequired": [
                "search.index.instance-records.reindex.merge.failed.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "search-inventory",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/instances",
              "permissionsRequired": [
                "search.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "search-authorities",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/authorities",
              "permissionsRequired": [
                "search.authorities.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "search-linked-data",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/linked-data/instances",
              "permissionsRequired": [
                "search.linked-data.instance.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/linked-data/works",
              "permissionsRequired": [
                "search.linked-data.work.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/linked-data/hubs",
              "permissionsRequired": [
                "search.linked-data.hub.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "search-facets",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/{recordType}/facets",
              "permissionsRequired": [
                "search.facets.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "consortium-search",
          "version": "2.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/consortium/holdings",
              "permissionsRequired": [
                "consortium-search.holdings.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/consortium/items",
              "permissionsRequired": [
                "consortium-search.items.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/consortium/locations",
              "permissionsRequired": [
                "consortium-search.locations.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/consortium/campuses",
              "permissionsRequired": [
                "consortium-search.campuses.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/consortium/libraries",
              "permissionsRequired": [
                "consortium-search.libraries.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/consortium/institutions",
              "permissionsRequired": [
                "consortium-search.institutions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/consortium/holding/{id}",
              "permissionsRequired": [
                "consortium-search.holdings.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/consortium/item/{id}",
              "permissionsRequired": [
                "consortium-search.items.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/consortium/batch/items",
              "permissionsRequired": [
                "consortium-search.items.batch.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/consortium/batch/holdings",
              "permissionsRequired": [
                "consortium-search.holdings.batch.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "resource-ids-streaming",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/resources/jobs/{jobId}/ids",
              "permissionsRequired": [
                "search.resources.ids.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/resources/jobs/{jobId}",
              "permissionsRequired": [
                "search.resources.ids.jobs.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/resources/jobs",
              "permissionsRequired": [
                "search.resources.ids.jobs.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "browse-inventory",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/browse/call-numbers/{browseOptionId}/instances",
              "permissionsRequired": [
                "browse.call-numbers.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/browse/classification-numbers/{browseOptionId}/instances",
              "permissionsRequired": [
                "browse.classification-numbers.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/browse/subjects/instances",
              "permissionsRequired": [
                "browse.subjects.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/browse/contributors/instances",
              "permissionsRequired": [
                "browse.contributors.instances.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "browse-authorities",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/browse/authorities",
              "permissionsRequired": [
                "browse.authorities.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "browse-config",
          "version": "1.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/browse/config/{browseType}",
              "permissionsRequired": [
                "browse.config.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/browse/config/{browseType}/{browseConfigId}",
              "permissionsRequired": [
                "browse.config.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.call-number-types.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "search-config",
          "version": "0.2",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/config/languages",
              "permissionsRequired": [
                "search.config.languages.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/config/languages",
              "permissionsRequired": [
                "search.config.languages.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/search/config/languages/{id}",
              "permissionsRequired": [
                "search.config.languages.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/search/config/languages/{id}",
              "permissionsRequired": [
                "search.config.languages.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/search/config/features",
              "permissionsRequired": [
                "search.config.features.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/search/config/features",
              "permissionsRequired": [
                "search.config.features.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/search/config/features/{id}",
              "permissionsRequired": [
                "search.config.features.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/search/config/features/{id}",
              "permissionsRequired": [
                "search.config.features.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [
                "user-tenants.collection.get",
                "users.collection.get",
                "users.item.post",
                "users.item.put",
                "login.item.post",
                "login.item.delete",
                "perms.users.get",
                "perms.users.item.post",
                "perms.users.assign.immutable",
                "perms.users.assign.mutable",
                "inventory-storage.instance.reindex.post",
                "authority-storage.authority.reindex.post",
                "inventory-storage.inventory-view.instances.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "instance-authority-links.authorities.bulk.post",
                "inventory-storage.locations.collection.get",
                "inventory-storage.location-units.campuses.collection.get",
                "inventory-storage.location-units.libraries.collection.get",
                "inventory-storage.location-units.institutions.collection.get",
                "inventory-storage.reindex-records.publish.post",
                "inventory-storage.instances.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.holdings.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "user-tenants",
          "version": "1.0"
        },
        {
          "id": "consortia",
          "version": "1.0"
        },
        {
          "id": "inventory-reindex-records",
          "version": "1.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "holdings-storage",
          "version": "8.0"
        },
        {
          "id": "item-storage",
          "version": "11.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "search.index.indices.item.post",
          "replaces": [],
          "displayName": "Search - creates an index",
          "description": "Creates an index",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.mappings.item.post",
          "replaces": [],
          "displayName": "Search - updates mappings for the index",
          "description": "Updates mappings for the index",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.records.collection.post",
          "replaces": [],
          "displayName": "Search - saves resource to the search engine",
          "description": "Saves resource to the search engine",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.settings.item.put",
          "replaces": [],
          "displayName": "Search - updates settings for the index",
          "description": "Updates settings for the index",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.instance-records.reindex.full.post",
          "replaces": [],
          "displayName": "Search - starts inventory instance records full reindex operation",
          "description": "Starts inventory instance records reindex operation",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.instance-records.reindex.upload.post",
          "replaces": [],
          "displayName": "Search - starts inventory instance records reindex upload operation",
          "description": "Starts inventory instance records reindex upload operation",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.instance-records.reindex.merge.failed.post",
          "replaces": [],
          "displayName": "Search - starts inventory instance records reindex merge failed operation",
          "description": "Starts inventory instance records reindexing for failed merge ranges",
          "subPermissions": []
        },
        {
          "permissionName": "search.instances.collection.get",
          "replaces": [],
          "displayName": "Search - searches instances by given query",
          "description": "Searches instances by given query",
          "subPermissions": []
        },
        {
          "permissionName": "search.authorities.collection.get",
          "replaces": [],
          "displayName": "Search - searches authorities by given query",
          "description": "Searches authorities by given query",
          "subPermissions": []
        },
        {
          "permissionName": "search.linked-data.instance.collection.get",
          "replaces": [],
          "displayName": "Search - searches linked data instances by given query",
          "description": "Searches linked data instances by given query",
          "subPermissions": []
        },
        {
          "permissionName": "search.linked-data.work.collection.get",
          "replaces": [],
          "displayName": "Search - searches linked data works by given query",
          "description": "Searches linked data works by given query",
          "subPermissions": []
        },
        {
          "permissionName": "search.linked-data.hub.collection.get",
          "replaces": [],
          "displayName": "Search - searches linked data hubs by given query",
          "description": "Searches linked data hubs by given query",
          "subPermissions": []
        },
        {
          "permissionName": "browse.call-numbers.instances.collection.get",
          "replaces": [],
          "displayName": "Browse - provides collections of browse items for instance by call number",
          "description": "Browse instances by given query",
          "subPermissions": []
        },
        {
          "permissionName": "browse.classification-numbers.instances.collection.get",
          "replaces": [],
          "displayName": "Browse - provides collections of browse by classification number",
          "description": "Browse by classification number",
          "subPermissions": []
        },
        {
          "permissionName": "browse.subjects.instances.collection.get",
          "replaces": [],
          "displayName": "Browse - provides collections of browse items for instance by subjects",
          "description": "Browse instances by given query",
          "subPermissions": []
        },
        {
          "permissionName": "browse.contributors.instances.collection.get",
          "replaces": [],
          "displayName": "Browse - provides collections of browse items for instance by contributors",
          "description": "Browse instances by given query",
          "subPermissions": []
        },
        {
          "permissionName": "browse.authorities.collection.get",
          "replaces": [],
          "displayName": "Browse - provides collections of browse items for authorities",
          "description": "Browse authorities by given query",
          "subPermissions": []
        },
        {
          "permissionName": "search.config.languages.item.post",
          "replaces": [],
          "displayName": "Search - adds a language support for multi-lang indexes",
          "description": "Adds a language support for multi-lang indexes",
          "subPermissions": []
        },
        {
          "permissionName": "search.config.languages.collection.get",
          "replaces": [],
          "displayName": "Search - returns list of all supported languages for multi-lang indexes",
          "description": "Returns list of all supported languages for multi-lang indexes",
          "subPermissions": []
        },
        {
          "permissionName": "search.config.languages.item.put",
          "replaces": [],
          "displayName": "Search - updates a supported language by id",
          "description": "Updates a supported language by id",
          "subPermissions": []
        },
        {
          "permissionName": "search.config.languages.item.delete",
          "replaces": [],
          "displayName": "Search - removes a supported language by id",
          "description": "Removes a supported language by id",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.inventory.reindex.post",
          "replaces": [],
          "displayName": "Search - starts inventory reindex operation",
          "description": "Starts inventory reindex operation",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.instance-records.reindex.status.get",
          "replaces": [],
          "displayName": "Search - returns reindex status for entities",
          "description": "Returns reindex status for entities",
          "subPermissions": []
        },
        {
          "permissionName": "search.facets.collection.get",
          "replaces": [
            "search.instances.facets.collection.get"
          ],
          "displayName": "Search - returns facets for a query for given filter options by record type",
          "description": "Returns facets for a query for given filter options by record type",
          "subPermissions": []
        },
        {
          "permissionName": "search.resources.ids.collection.get",
          "replaces": [],
          "displayName": "Search - returns a list of authority ids found for the CQL query",
          "description": "Returns list of resource ids for a cql query",
          "subPermissions": []
        },
        {
          "permissionName": "search.resources.ids.jobs.get",
          "replaces": [],
          "displayName": "Job for streaming authority ids",
          "description": "Returns a job for streaming authority ids by the the CQL query",
          "subPermissions": []
        },
        {
          "permissionName": "search.resources.ids.jobs.post",
          "replaces": [],
          "displayName": "Creates a job for streaming authority ids",
          "description": "Creates a job for streaming authority ids by the the CQL query",
          "subPermissions": []
        },
        {
          "permissionName": "search.config.features.collection.get",
          "replaces": [],
          "displayName": "Search - returns list of tenant features configuration",
          "description": "Returns list of all specified features",
          "subPermissions": []
        },
        {
          "permissionName": "search.config.features.item.post",
          "replaces": [],
          "displayName": "Search - adds a feature configuration",
          "description": "Adds feature configuration",
          "subPermissions": []
        },
        {
          "permissionName": "search.config.features.item.put",
          "replaces": [],
          "displayName": "Search - updates a feature configuration",
          "description": "Updates feature configuration",
          "subPermissions": []
        },
        {
          "permissionName": "search.config.features.item.delete",
          "replaces": [],
          "displayName": "Search - removes feature configuration",
          "description": "Removes feature configuration",
          "subPermissions": []
        },
        {
          "permissionName": "browse.config.collection.get",
          "replaces": [],
          "displayName": "Browse - returns configurations for browse type",
          "description": "Returns configuration for browse type",
          "subPermissions": []
        },
        {
          "permissionName": "browse.config.item.put",
          "replaces": [],
          "displayName": "Browse - updates configuration entry for browse type",
          "description": "Updates configuration entry for browse type",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.holdings.collection.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch holdings records",
          "description": "Returns holdings records in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.items.collection.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch items records",
          "description": "Returns items records in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.holdings.batch.collection.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch holdings records by batch request",
          "description": "Returns holdings records in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.items.batch.collection.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch items records by batch request",
          "description": "Returns items records in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.holdings.item.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch holdings record",
          "description": "Returns holdings record in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.items.item.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch item record",
          "description": "Returns item record in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.locations.collection.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch locations records",
          "description": "Returns location records in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.campuses.collection.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch campuses records",
          "description": "Returns campus records in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.libraries.collection.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch libraries records",
          "description": "Returns library records in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "consortium-search.institutions.collection.get",
          "replaces": [],
          "displayName": "Consortium Search - fetch institutions records",
          "description": "Returns institution records in consortium",
          "subPermissions": []
        },
        {
          "permissionName": "search.index.instance-records.reindex.all",
          "replaces": [],
          "displayName": "Search Instance Records Re-Index - All permissions",
          "description": "Entire set of permissions needed to manage  Instance Records Re-Index",
          "subPermissions": [
            "search.index.instance-records.reindex.status.get",
            "search.index.instance-records.reindex.full.post",
            "search.index.instance-records.reindex.upload.post",
            "search.index.instance-records.reindex.failed.post"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-search:6.0.0-SNAPSHOT.728",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 1073741824,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "ENV",
            "value": "folio",
            "description": "The logical name of the deployment, must be unique across all environments using the same shared Kafka/Elasticsearch clusters, `a-z (any case)`, `0-9`, `-`, `_` symbols only allowed"
          },
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=85.0"
          },
          {
            "name": "KAFKA_HOST",
            "value": "kafka",
            "description": "Kafka broker hostname"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092",
            "description": "Kafka broker port"
          },
          {
            "name": "KAFKA_SECURITY_PROTOCOL",
            "value": "PLAINTEXT",
            "description": "Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)"
          },
          {
            "name": "KAFKA_SSL_KEYSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client."
          },
          {
            "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
            "value": "",
            "description": "The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured."
          },
          {
            "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
            "value": "",
            "description": "The location of the Kafka trust store file."
          },
          {
            "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
            "value": "",
            "description": "The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled."
          },
          {
            "name": "KAFKA_EVENTS_CONSUMER_PATTERN",
            "value": "(folio\\.)(.*\\.)inventory\\.(instance|holdings-record|item|bound-with)",
            "description": "Custom subscription pattern for Kafka consumers."
          },
          {
            "name": "KAFKA_EVENTS_CONCURRENCY",
            "value": "2",
            "description": "Custom number of kafka concurrent threads for message consuming."
          },
          {
            "name": "KAFKA_CONSUMER_EVENTS_MAX_POLL_RECORDS",
            "value": "200",
            "description": "Maximum number of records returned in a single call to poll() for 'instance|holdings-record|item|bound-with' events."
          },
          {
            "name": "KAFKA_CONSUMER_EVENTS_MAX_POLL_INTERVAL_MS",
            "value": "600000",
            "description": "Maximum processing time allowed for consumer on 'instance|holdings-record|item|bound-with' events."
          },
          {
            "name": "KAFKA_AUTHORITIES_CONSUMER_PATTERN",
            "value": "(folio\\.)(.*\\.)authorities\\.authority",
            "description": "Custom subscription pattern for Kafka authority message consumers."
          },
          {
            "name": "KAFKA_AUTHORITIES_CONCURRENCY",
            "value": "1",
            "description": "Custom number of kafka concurrent threads for authority message consuming."
          },
          {
            "name": "KAFKA_REINDEX_RANGE_INDEX_CONCURRENCY",
            "value": "1",
            "description": "Custom number of kafka concurrent threads for `search.reindex.range-index` message consuming."
          },
          {
            "name": "KAFKA_REINDEX_RANGE_INDEX_TOPIC_PARTITIONS",
            "value": "16",
            "description": "Amount of partitions for `search.reindex.range-index` topic."
          },
          {
            "name": "KAFKA_REINDEX_RANGE_INDEX_TOPIC_REPLICATION_FACTOR",
            "value": "",
            "description": "Replication factor for `search.reindex.range-index` topic."
          },
          {
            "name": "KAFKA_REINDEX_RECORDS_CONCURRENCY",
            "value": "2",
            "description": "Custom number of kafka concurrent threads for `inventory.reindex-records` message consuming."
          },
          {
            "name": "KAFKA_CONSUMER_MAX_POLL_RECORDS",
            "value": "200",
            "description": "Maximum number of records returned in a single call to poll()."
          },
          {
            "name": "KAFKA_RETRY_INTERVAL_MS",
            "value": "2000",
            "description": "Specifies time to wait before reattempting query."
          },
          {
            "name": "KAFKA_RETRY_DELIVERY_ATTEMPTS",
            "value": "6",
            "description": "Specifies how many queries attempt to perform after the first one failed."
          },
          {
            "name": "ELASTICSEARCH_URL",
            "value": "http://elasticsearch:9200",
            "description": "Elasticsearch URL"
          },
          {
            "name": "ELASTICSEARCH_USERNAME",
            "value": "elastic",
            "description": "Elasticsearch username (not required for dev envs)"
          },
          {
            "name": "ELASTICSEARCH_PASSWORD",
            "value": "s3cret",
            "description": "Elasticsearch password (not required for dev envs)"
          },
          {
            "name": "ELASTICSEARCH_COMPRESSION_ENABLED",
            "value": "true",
            "description": "Specify if Elasticsearch request/response compression enabled"
          },
          {
            "name": "ELASTICSEARCH_SERVER",
            "value": "false",
            "description": "Specify whether it is Elasticsearch(true) or Opensearch(false) "
          },
          {
            "name": "DB_HOST",
            "value": "postgres",
            "description": "Postgres hostname"
          },
          {
            "name": "DB_PORT",
            "value": "5432",
            "description": "Postgres port"
          },
          {
            "name": "DB_USERNAME",
            "value": "postgres",
            "description": "Postgres username"
          },
          {
            "name": "DB_PASSWORD",
            "value": "postgres",
            "description": "Postgres username password"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules",
            "description": "Postgres database name"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          },
          {
            "name": "INDEXING_DATA_FORMAT",
            "value": "smile",
            "description": "Format for passing data to elasticsearch (json/smile)"
          },
          {
            "name": "INSTANCE_CHILDREN_INDEX_ENABLED",
            "value": "true",
            "description": "Defines if module should process subjects/contributors/classifications/call-numbers in a background"
          },
          {
            "name": "INSTANCE_CHILDREN_INDEX_DELAY_MS",
            "value": "60000",
            "description": "Scheduler delay for indexing subjects/contributors/classifications"
          },
          {
            "name": "INSTANCE_CHILDREN_INDEX_BATCH_SIZE",
            "value": "500",
            "description": "Batch size for indexing subjects/contributors/classifications"
          },
          {
            "name": "INITIAL_LANGUAGES",
            "value": "eng",
            "description": "Comma separated list of languages for multilang fields"
          },
          {
            "name": "MAX_SUPPORTED_LANGUAGES",
            "value": "5",
            "description": "Provides the maximum number of supported languages"
          },
          {
            "name": "SYSTEM_USER_USERNAME",
            "value": "mod-search",
            "description": "Username for `mod-search` system user"
          },
          {
            "name": "SYSTEM_USER_PASSWORD",
            "value": "",
            "description": "Password for `mod-search` system user (not required for dev envs)"
          },
          {
            "name": "OKAPI_URL",
            "value": "",
            "description": "OKAPI URL used to login system user, required"
          },
          {
            "name": "SEARCH_BY_ALL_FIELDS_ENABLED",
            "value": "false",
            "description": "Specifies if globally search by all field values must be enabled or not (tenant can override this setting)"
          },
          {
            "name": "BROWSE_SUBJECTS_ENABLED",
            "value": "true",
            "description": "Specifies if globally browse instance subject feature is enabled"
          },
          {
            "name": "BROWSE_CONTRIBUTORS_ENABLED",
            "value": "true",
            "description": "Specifies if globally browse instance contributor feature is enabled"
          },
          {
            "name": "BROWSE_CLASSIFICATIONS_ENABLED",
            "value": "true",
            "description": "Specifies if globally browse instance classification feature is enabled"
          },
          {
            "name": "BROWSE_CALL_NUMBERS_ENABLED",
            "value": "true",
            "description": "Specifies if globally browse instance call-number feature is enabled"
          },
          {
            "name": "SCROLL_QUERY_SIZE",
            "value": "1000",
            "description": "The number of records to be loaded by each scroll query. 10000 is a max value"
          },
          {
            "name": "STREAM_ID_RETRY_INTERVAL_MS",
            "value": "1000",
            "description": "Specifies time to wait before reattempting query."
          },
          {
            "name": "STREAM_ID_RETRY_ATTEMPTS",
            "value": "3",
            "description": "Specifies how many queries attempt to perform after the first one failed."
          },
          {
            "name": "STREAM_ID_CORE_POOL_SIZE",
            "value": "2",
            "description": "The number of threads to keep in the pool, even if they are idle."
          },
          {
            "name": "STREAM_ID_MAX_POOL_SIZE",
            "value": "2",
            "description": "The maximum number of threads to allow in the pool."
          },
          {
            "name": "STREAM_ID_QUEUE_CAPACITY",
            "value": "500",
            "description": "The capacity of the queue."
          },
          {
            "name": "SEARCH_QUERY_TIMEOUT",
            "value": "25s",
            "description": "The maximum time to wait for search query response"
          },
          {
            "name": "MAX_BROWSE_REQUEST_OFFSET",
            "value": "500",
            "description": "The maximum elasticsearch query offset for additional requests on browse around"
          },
          {
            "name": "REINDEX_LOCATION_BATCH_SIZE",
            "value": "1000",
            "description": "Defines number of locations to retrieve per inventory http request on locations reindex process"
          },
          {
            "name": "MAX_SEARCH_BATCH_REQUEST_IDS_COUNT",
            "value": "20000",
            "description": "Defines maximum batch request IDs count for searching consolidated items/holdings in consortium"
          },
          {
            "name": "REINDEX_MERGE_RANGE_SIZE",
            "value": "500",
            "description": "The range size that represents the number of merge entities to process during the Merge process of reindex"
          },
          {
            "name": "REINDEX_UPLOAD_RANGE_SIZE",
            "value": "1000",
            "description": "The range size that represents the number of upload entities to process during the Upload process of reindex"
          },
          {
            "name": "REINDEX_UPLOAD_RANGE_LEVEL",
            "value": "3",
            "description": "The level of deepness of upload range generator affecting the number of ranges to be generated"
          },
          {
            "name": "REINDEX_MERGE_RANGE_PUBLISHER_CORE_POOL_SIZE",
            "value": "3",
            "description": "The number of threads for publishing the merge ranges to keep in the pool, even if they are idle."
          },
          {
            "name": "REINDEX_MERGE_RANGE_PUBLISHER_MAX_POOL_SIZE",
            "value": "6",
            "description": "The maximum number of threads for publishing the merge ranges to allow in the pool."
          },
          {
            "name": "REINDEX_MERGE_RANGE_PUBLISHER_RETRY_INTERVAL_MS",
            "value": "1000",
            "description": "The retry interval in ms for reindex merge range request publishing."
          },
          {
            "name": "REINDEX_MERGE_RANGE_PUBLISHER_RETRY_ATTEMPTS",
            "value": "5",
            "description": "The maximum number of retries for reindex merge range request publishing."
          }
        ],
        "dockerCMD": []
      },
      "metadata": {
        "user": {
          "type": "system",
          "permissions": [
            "user-tenants.collection.get",
            "users.collection.get",
            "users.item.post",
            "login.item.post",
            "login.item.delete",
            "perms.users.get",
            "perms.users.item.post",
            "perms.users.assign.immutable",
            "perms.users.assign.mutable",
            "inventory-storage.instance.reindex.post",
            "authority-storage.authority.reindex.post",
            "inventory-storage.inventory-view.instances.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.alternative-title-types.collection.get",
            "instance-authority-links.authorities.bulk.post",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.reindex-records.publish.post",
            "inventory-storage.instances.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.holdings.collection.get"
          ]
        }
      },
      "name": "Search Module"
    },
    {
      "id": "mod-sender-1.14.1",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "users",
          "version": "16.4"
        },
        {
          "id": "email",
          "version": "1.1"
        },
        {
          "id": "batch-print",
          "version": "1.0"
        }
      ],
      "provides": [
        {
          "id": "message-delivery",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/message-delivery",
              "permissionsRequired": [
                "sender.message-delivery.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "email.message.post",
                "batch-print.entries.mail.post",
                "users.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "sender.message-delivery.post",
          "replaces": [
            "sender.message-delivery"
          ],
          "displayName": "Message delivery",
          "description": "Send message",
          "subPermissions": []
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioorg/mod-sender:1.14.1",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 536870912,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          }
        ],
        "dockerCMD": []
      },
      "name": "Mod sender"
    },
    {
      "id": "mod-serials-management-2.1.0-SNAPSHOT.166",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [
        {
          "id": "serials-management",
          "version": "2.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/refdata",
              "permissionsRequired": [
                "serials-management.refdata.category.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/refdata/{domain}/{property}",
              "permissionsRequired": [
                "serials-management.refdata.value.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/refdata/{id}",
              "permissionsRequired": [
                "serials-management.refdata.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/refdata",
              "permissionsRequired": [
                "serials-management.refdata.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/serials-management/refdata/{id}",
              "permissionsRequired": [
                "serials-management.refdata.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/serials-management/refdata/{id}",
              "permissionsRequired": [
                "serials-management.refdata.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/serials",
              "permissionsRequired": [
                "serials-management.serials.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "orders.po-lines.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/serials/{id}",
              "permissionsRequired": [
                "serials-management.serials.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/serials",
              "permissionsRequired": [
                "serials-management.serials.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/serials-management/serials/{id}",
              "permissionsRequired": [
                "serials-management.serials.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/serials-management/serials/{id}",
              "permissionsRequired": [
                "serials-management.serials.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/rulesets",
              "permissionsRequired": [
                "serials-management.rulesets.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/rulesets/{id}",
              "permissionsRequired": [
                "serials-management.rulesets.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/rulesets",
              "permissionsRequired": [
                "serials-management.rulesets.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/serials-management/rulesets/{id}",
              "permissionsRequired": [
                "serials-management.rulesets.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/rulesets/{id}/active",
              "permissionsRequired": [
                "serials-management.rulesets.set-active.execute"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/rulesets/{id}/deprecated",
              "permissionsRequired": [
                "serials-management.rulesets.set-deprecated.execute"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/rulesets/{id}/draft",
              "permissionsRequired": [
                "serials-management.rulesets.set-draft.execute"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/rulesets/{id}/replaceAndDeprecate",
              "permissionsRequired": [
                "serials-management.rulesets.replace-deprecate.execute"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/rulesets/{id}/replaceAndDelete",
              "permissionsRequired": [
                "serials-management.rulesets.replace-delete.execute"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/predictedPieces",
              "permissionsRequired": [
                "serials-management.predictedPieceSets.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/predictedPieces/{id}",
              "permissionsRequired": [
                "serials-management.predictedPieceSets.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/serials-management/predictedPieces/{id}",
              "permissionsRequired": [
                "serials-management.predictedPieceSets.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/predictedPieces/generate",
              "permissionsRequired": [
                "serials-management.predictedPieceSets.transient.generate"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/predictedPieces/create",
              "permissionsRequired": [
                "serials-management.predictedPieceSets.generate"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/serials-management/predictedPieces/{id}",
              "permissionsRequired": [
                "serials-management.predictedPieceSets.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/locales",
              "permissionsRequired": [
                "serials-management.locales.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/modelRulesets",
              "permissionsRequired": [
                "serials-management.modelRulesets.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/serials-management/modelRulesets/{id}",
              "permissionsRequired": [
                "serials-management.modelRulesets.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/serials-management/modelRulesets",
              "permissionsRequired": [
                "serials-management.modelRulesets.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/serials-management/modelRulesets/{id}",
              "permissionsRequired": [
                "serials-management.modelRulesets.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "1.2",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST",
                "DELETE"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant/disable",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "order-lines",
          "version": "4.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "serials-management.settings.get",
          "replaces": [],
          "displayName": "settings get",
          "description": "get settings",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.settings.post",
          "replaces": [],
          "displayName": "settings post",
          "description": "post settings",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.settings.put",
          "replaces": [],
          "displayName": "settings put",
          "description": "put settings",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.settings.delete",
          "replaces": [],
          "displayName": "settings delete",
          "description": "delete settings",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.settings.read",
          "replaces": [],
          "displayName": "settings read",
          "description": "read settings",
          "subPermissions": [
            "serials-management.settings.get"
          ],
          "visible": false
        },
        {
          "permissionName": "serials-management.settings.write",
          "replaces": [],
          "displayName": "settings write",
          "description": "write settings",
          "subPermissions": [
            "serials-management.settings.read",
            "serials-management.settings.post",
            "serials-management.settings.put",
            "serials-management.settings.delete"
          ],
          "visible": false
        },
        {
          "permissionName": "serials-management.refdata.category.collection.get",
          "replaces": [
            "serials-management.refdata.collection.get"
          ],
          "displayName": "Ref data category collection get",
          "description": "Get a collection of ref data category records",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.refdata.value.collection.get",
          "replaces": [
            "serials-management.refdata.collection.get"
          ],
          "displayName": "Ref data value collection get",
          "description": "Get a collection of ref data value records",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.refdata.item.get",
          "replaces": [],
          "displayName": "Ref data item get",
          "description": "Get a ref data record",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.refdata.item.post",
          "replaces": [],
          "displayName": "Ref data item post",
          "description": "Post a ref data record",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.refdata.item.put",
          "replaces": [],
          "displayName": "Ref data item put",
          "description": "Put a ref data record",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.refdata.item.delete",
          "replaces": [],
          "displayName": "Ref data item delete",
          "description": "Delete a ref data record",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "serials-management.refdata.read",
          "replaces": [],
          "displayName": "Refdata read",
          "description": "Read refdata as items or collections",
          "subPermissions": [
            "serials-management.refdata.value.collection.get",
            "serials-management.refdata.category.collection.get",
            "serials-management.refdata.item.get"
          ]
        },
        {
          "permissionName": "serials-management.refdata.write",
          "replaces": [],
          "displayName": "Refdata write",
          "description": "Read and write refdata entries",
          "subPermissions": [
            "serials-management.refdata.read",
            "serials-management.refdata.item.post",
            "serials-management.refdata.item.put"
          ]
        },
        {
          "permissionName": "serials-management.refdata.manage",
          "replaces": [],
          "displayName": "Refdata manage",
          "description": "Read, write and delete refdata entries",
          "subPermissions": [
            "serials-management.refdata.write",
            "serials-management.refdata.item.delete"
          ]
        },
        {
          "permissionName": "serials-management.serials.collection.get",
          "replaces": [],
          "displayName": "Serial collection get",
          "description": "Get a collection of serial records",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.serials.item.get",
          "replaces": [],
          "displayName": "Serial item get",
          "description": "Get a serial record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.serials.view",
          "replaces": [],
          "subPermissions": [
            "serials-management.serials.collection.get",
            "serials-management.serials.item.get"
          ]
        },
        {
          "permissionName": "serials-management.serials.item.post",
          "replaces": [],
          "displayName": "Serial item post",
          "description": "Post a serial record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.serials.item.put",
          "replaces": [],
          "displayName": "Serial item put",
          "description": "Put a serial record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.serials.edit",
          "replaces": [],
          "subPermissions": [
            "serials-management.serials.view",
            "serials-management.serials.item.post",
            "serials-management.serials.item.put"
          ]
        },
        {
          "permissionName": "serials-management.serials.item.delete",
          "replaces": [],
          "displayName": "Serial item delete",
          "description": "Delete a serial record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.serials.manage",
          "replaces": [],
          "subPermissions": [
            "serials-management.serials.edit",
            "serials-management.serials.item.delete"
          ]
        },
        {
          "permissionName": "serials-management.rulesets.collection.get",
          "replaces": [],
          "displayName": "Ruleset collection get",
          "description": "Get a collection of ruleset records",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.item.get",
          "replaces": [],
          "displayName": "Ruleset item get",
          "description": "Get a ruleset record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.view",
          "replaces": [],
          "subPermissions": [
            "serials-management.rulesets.collection.get",
            "serials-management.rulesets.item.get"
          ]
        },
        {
          "permissionName": "serials-management.rulesets.item.post",
          "replaces": [],
          "displayName": "Ruleset item post",
          "description": "Post a ruleset record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.set-active.execute",
          "replaces": [
            "serials-management.rulesets.item.put"
          ],
          "displayName": "Set ruleset status active",
          "description": "Permit the changing of a ruleset status to \"active\"",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.set-deprecated.execute",
          "replaces": [
            "serials-management.rulesets.item.put"
          ],
          "displayName": "Set ruleset status deprecated",
          "description": "Permit the changing of a ruleset status to \"deprecated\"",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.set-draft.execute",
          "replaces": [
            "serials-management.rulesets.item.put"
          ],
          "displayName": "Set ruleset status draft",
          "description": "Permit the changing of a ruleset status to \"draft\"",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.replace-delete.execute",
          "replaces": [],
          "displayName": "Replace and delete a ruleset",
          "description": "Permit the deletion and replacement of a ruleset",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.replace-deprecate.execute",
          "replaces": [],
          "displayName": "Replace and deprecate a ruleset",
          "description": "Permit the deprecation and replacement of a ruleset",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.edit",
          "replaces": [],
          "subPermissions": [
            "serials-management.rulesets.view",
            "serials-management.rulesets.item.post",
            "serials-management.rulesets.set-active.execute",
            "serials-management.rulesets.set-deprecated.execute",
            "serials-management.rulesets.set-draft.execute",
            "serials-management.rulesets.replace-delete.execute",
            "serials-management.rulesets.replace-deprecate.execute"
          ]
        },
        {
          "permissionName": "serials-management.rulesets.item.delete",
          "replaces": [],
          "displayName": "Ruleset item delete",
          "description": "Delete a ruleset record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.rulesets.manage",
          "replaces": [],
          "subPermissions": [
            "serials-management.rulesets.edit",
            "serials-management.rulesets.item.delete"
          ]
        },
        {
          "permissionName": "serials-management.predictedPieceSets.collection.get",
          "replaces": [],
          "displayName": "Predicted pieces collection get",
          "description": "Get a collection of predicted piece set records",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.predictedPieceSets.item.get",
          "replaces": [],
          "displayName": "Predicted pieces item get",
          "description": "Get a predicted piece set record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.predictedPieceSets.view",
          "replaces": [],
          "subPermissions": [
            "serials-management.predictedPieceSets.collection.get",
            "serials-management.predictedPieceSets.item.get"
          ]
        },
        {
          "permissionName": "serials-management.predictedPieceSets.transient.generate",
          "replaces": [
            "serials-management.predictedPieceSets.item.post"
          ],
          "displayName": "Predicted piece set preview generate",
          "description": "Generate predicted piece set for preview without saving",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.predictedPieceSets.generate",
          "replaces": [
            "serials-management.predictedPieceSets.item.post"
          ],
          "displayName": "Predicted piece set generate",
          "description": "Generate predicted piece set",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.predictedPieceSets.item.put",
          "replaces": [],
          "displayName": "Predicted piece set item put",
          "description": "Put a predicted piece set record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.predictedPieceSets.item.delete",
          "replaces": [],
          "displayName": "Predicted piece set item delete",
          "description": "Delete a predicted piece set record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.predictedPieceSets.edit",
          "replaces": [],
          "subPermissions": [
            "serials-management.predictedPieceSets.view",
            "serials-management.predictedPieceSets.transient.generate",
            "serials-management.predictedPieceSets.generate",
            "serials-management.predictedPieceSets.item.put"
          ]
        },
        {
          "permissionName": "serials-management.predictedPieceSets.manage",
          "replaces": [],
          "subPermissions": [
            "serials-management.predictedPieceSets.edit",
            "serials-management.predictedPieceSets.item.delete"
          ]
        },
        {
          "permissionName": "serials-management.locales.collection.get",
          "replaces": [],
          "displayName": "Locales collection get",
          "description": "Get the collection of locales",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.modelRulesets.collection.get",
          "replaces": [],
          "displayName": "Model ruleset collection get",
          "description": "Get a collection of model ruleset records",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.modelRulesets.item.get",
          "replaces": [],
          "displayName": "Model ruleset item get",
          "description": "Get a model ruleset record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.modelRulesets.view",
          "replaces": [],
          "subPermissions": [
            "serials-management.modelRulesets.collection.get",
            "serials-management.modelRulesets.item.get"
          ]
        },
        {
          "permissionName": "serials-management.modelRulesets.item.post",
          "replaces": [],
          "displayName": "Model ruleset item post",
          "description": "Post a model ruleset record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.modelRulesets.edit",
          "replaces": [],
          "subPermissions": [
            "serials-management.modelRulesets.view",
            "serials-management.modelRulesets.item.post"
          ]
        },
        {
          "permissionName": "serials-management.modelRulesets.item.delete",
          "replaces": [],
          "displayName": "Model ruleset item delete",
          "description": "Delete a model ruleset record",
          "subPermissions": []
        },
        {
          "permissionName": "serials-management.modelRulesets.manage",
          "replaces": [],
          "subPermissions": [
            "serials-management.modelRulesets.edit",
            "serials-management.modelRulesets.item.delete"
          ]
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-serials-management:2.1.0-SNAPSHOT.166",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 1073741824,
            "PortBindings": {
              "8080/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-server -XX:+UseContainerSupport -XX:MaxRAMPercentage=55.0 -XX:+PrintFlagsFinal"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "50"
          }
        ],
        "dockerCMD": []
      },
      "name": "mod-serials-management"
    },
    {
      "id": "mod-source-record-manager-3.11.0-SNAPSHOT.1039",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "instance-date-types",
          "version": "1.0"
        },
        {
          "id": "subject-sources",
          "version": "1.0"
        },
        {
          "id": "subject-types",
          "version": "1.0"
        },
        {
          "id": "source-storage-snapshots",
          "version": "2.1"
        },
        {
          "id": "source-storage-records",
          "version": "3.3"
        },
        {
          "id": "source-storage-source-records",
          "version": "3.2"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "identifier-types",
          "version": "1.2"
        },
        {
          "id": "electronic-access-relationships",
          "version": "1.0"
        },
        {
          "id": "classification-types",
          "version": "1.2"
        },
        {
          "id": "instance-types",
          "version": "2.0"
        },
        {
          "id": "instance-formats",
          "version": "2.0"
        },
        {
          "id": "contributor-name-types",
          "version": "1.2"
        },
        {
          "id": "contributor-types",
          "version": "2.0"
        },
        {
          "id": "instance-note-types",
          "version": "1.0"
        },
        {
          "id": "instance-preceding-succeeding-titles",
          "version": "0.2"
        },
        {
          "id": "alternative-title-types",
          "version": "1.0"
        },
        {
          "id": "data-import-converter-storage",
          "version": "1.5"
        },
        {
          "id": "modes-of-issuance",
          "version": "1.1"
        },
        {
          "id": "source-storage-batch",
          "version": "1.3"
        },
        {
          "id": "call-number-types",
          "version": "1.0"
        },
        {
          "id": "holdings-types",
          "version": "1.0"
        },
        {
          "id": "holdings-note-types",
          "version": "1.0"
        },
        {
          "id": "instance-relationship-types",
          "version": "1.0"
        },
        {
          "id": "instance-statuses",
          "version": "1.0"
        },
        {
          "id": "item-damaged-statuses",
          "version": "1.0"
        },
        {
          "id": "item-note-types",
          "version": "1.0"
        },
        {
          "id": "ill-policies",
          "version": "1.0"
        },
        {
          "id": "loan-types",
          "version": "2.2"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "material-types",
          "version": "2.2"
        },
        {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
        {
          "id": "statistical-codes",
          "version": "1.0"
        },
        {
          "id": "statistical-code-types",
          "version": "1.0"
        },
        {
          "id": "field-protection-settings",
          "version": "1.2"
        }
      ],
      "provides": [
        {
          "id": "source-manager-job-executions",
          "version": "3.4",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/metadata-provider/jobExecutions",
              "permissionsRequired": [
                "metadata-provider.jobExecutions.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/metadata-provider/journalRecords/{jobExecutionId}",
              "permissionsRequired": [
                "metadata-provider.journalRecords.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/metadata-provider/jobExecutions/jobProfiles",
              "permissionsRequired": [
                "metadata-provider.jobExecutions.jobProfiles.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/change-manager/jobExecutions",
              "permissionsRequired": [
                "change-manager.jobexecutions.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "source-storage.snapshots.post",
                "users.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/change-manager/jobExecutions",
              "permissionsRequired": [
                "change-manager.jobexecutions.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/change-manager/jobExecutions/{id}",
              "permissionsRequired": [
                "change-manager.jobExecutions.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/change-manager/jobExecutions/{id}",
              "permissionsRequired": [
                "change-manager.jobExecutions.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/change-manager/jobExecutions/{id}/children",
              "permissionsRequired": [
                "change-manager.jobExecutions.children.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/change-manager/jobExecutions/{id}/status",
              "permissionsRequired": [
                "change-manager.jobExecutions.status.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "source-storage.snapshots.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/change-manager/jobExecutions/{id}/jobProfile",
              "permissionsRequired": [
                "change-manager.jobExecutions.jobProfile.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "converter-storage.jobprofilesnapshots.post",
                "converter-storage.jobprofile.item.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "source-manager-records",
          "version": "2.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/change-manager/jobExecutions/{id}/records",
              "permissionsRequired": [
                "change-manager.records.post"
              ],
              "permissionsDesired": [
                "consortia.data-import.central-record-update.execute",
                "invoices.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.assign",
                "orders.acquisitions-units-assignments.manage",
                "orders.item.approve",
                "orders.item.reopen",
                "orders.item.unopen"
              ],
              "modulePermissions": [
                "configuration.entries.collection.get",
                "converter-storage.field-protection-settings.item.get",
                "converter-storage.field-protection-settings.collection.get",
                "converter-storage.jobprofilesnapshots.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.authorities.collection.get",
                "inventory-storage.authorities.item.delete",
                "inventory-storage.authorities.item.get",
                "inventory-storage.authorities.item.post",
                "inventory-storage.authorities.item.put",
                "inventory-storage.authority-note-types.collection.get",
                "inventory-storage.authority-source-files.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-sources.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.instance-note-types.collection.get",
                "inventory-storage.instance-relationship-types.collection.get",
                "inventory-storage.instance-statuses.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.statistical-code-types.collection.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.subject-sources.collection.get",
                "inventory-storage.subject-types.collection.get",
                "inventory-storage.instance-date-types.collection.get",
                "mapping-metadata.item.get",
                "orders.po-lines.collection.get",
                "source-storage.records.collection.get",
                "source-storage.records.item.get",
                "source-storage.snapshots.item.get",
                "source-storage.snapshots.collection.get",
                "source-storage.snapshots.post",
                "source-storage.snapshots.put",
                "source-storage.verified.records",
                "users.collection.get",
                "orders-storage.order-invoice-relationships.item.post",
                "finance.exchange-rate.item.get",
                "finance.expense-classes.collection.get",
                "finance.funds.budget.item.get",
                "finance.funds.item.get",
                "finance.fiscal-years.item.get",
                "finance.ledgers.collection.get",
                "finance.transactions.batch.execute",
                "finance.transactions.collection.get",
                "finance-storage.budgets.collection.get",
                "finance-storage.budget-expense-classes.collection.get",
                "finance-storage.fiscal-years.item.get",
                "modperms.orders.item.post",
                "modperms.orders.item.put",
                "orders-storage.titles.item.get",
                "orders-storage.purchase-orders.item.get",
                "orders-storage.po-line-number.get",
                "orders-storage.po-lines.collection.get",
                "orders-storage.po-lines.item.post",
                "orders-storage.configuration.prefixes.collection.get",
                "orders-storage.configuration.suffixes.collection.get",
                "acquisitions-units-storage.units.collection.get",
                "acquisitions-units-storage.memberships.collection.get",
                "isbn-utils.convert-to-13.get",
                "instance-authority-links.instances.collection.get",
                "instance-authority-links.instances.collection.put",
                "instance-authority.linking-rules.collection.get",
                "user-tenants.collection.get",
                "source-storage.records.matching.collection.post",
                "source-storage.records.formatted.item.get",
                "source-storage.records.generation.item.put",
                "source-storage.records.post",
                "source-storage.records.put"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/change-manager/jobExecutions/{id}/records",
              "permissionsRequired": [
                "change-manager.records.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "source-storage.snapshots.put",
                "source-storage.snapshots.delete"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "source-manager-parsed-records",
          "version": "3.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/change-manager/parsedRecords",
              "permissionsRequired": [
                "change-manager.parsedrecords.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "source-storage.source-records.item.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/change-manager/parsedRecords/{id}",
              "permissionsRequired": [
                "change-manager.parsedrecords.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.collection.get",
                "converter-storage.field-protection-settings.collection.get",
                "converter-storage.jobprofilesnapshots.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.authorities.collection.get",
                "inventory-storage.authorities.item.get",
                "inventory-storage.authorities.item.post",
                "inventory-storage.authorities.item.put",
                "inventory-storage.authorities.item.delete",
                "inventory-storage.authority-note-types.collection.get",
                "inventory-storage.authority-source-files.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-sources.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.holdings.collection.get",
                "inventory-storage.holdings.item.get",
                "inventory-storage.holdings.item.post",
                "inventory-storage.holdings.item.put",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.instance-date-types.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.instance-note-types.collection.get",
                "inventory-storage.instance-relationship-types.collection.get",
                "inventory-storage.instance-statuses.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.instances.collection.get",
                "inventory-storage.instances.item.get",
                "inventory-storage.instances.item.post",
                "inventory-storage.instances.item.put",
                "inventory-storage.instances.preceding-succeeding-titles.collection.put",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.items.collection.get",
                "inventory-storage.items.item.post",
                "inventory-storage.items.item.put",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.loan-types.item.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.locations.item.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.material-types.item.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.preceding-succeeding-titles.collection.get",
                "inventory-storage.preceding-succeeding-titles.item.delete",
                "inventory-storage.preceding-succeeding-titles.item.get",
                "inventory-storage.preceding-succeeding-titles.item.post",
                "inventory-storage.preceding-succeeding-titles.item.put",
                "inventory-storage.statistical-code-types.collection.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.subject-sources.collection.get",
                "inventory-storage.subject-types.collection.get",
                "mapping-metadata.item.get",
                "mapping-metadata.type.item.get",
                "source-storage.snapshots.put",
                "source-storage.verified.records",
                "users.collection.get",
                "orders.po-lines.collection.get",
                "instance-authority-links.instances.collection.get",
                "instance-authority-links.instances.collection.put",
                "instance-authority.linking-rules.collection.get",
                "source-storage.records.post",
                "source-storage.records.put"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "metadata-provider-job-execution-logs",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/metadata-provider/jobLogEntries/{jobExecutionId}",
              "permissionsRequired": [
                "metadata-provider.jobLogEntries.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/metadata-provider/jobLogEntries/{jobExecutionId}/records/{recordId}",
              "permissionsRequired": [
                "metadata-provider.jobLogEntries.records.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/metadata-provider/jobSummary/{jobExecutionId}",
              "permissionsRequired": [
                "metadata-provider.jobSummary.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/metadata-provider/jobExecutions/users",
              "permissionsRequired": [
                "metadata-provider.jobExecutions.users.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/metadata-provider/incomingRecords/{recordId}",
              "permissionsRequired": [
                "metadata-provider.incomingrecords.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "mapping-rules-provider",
          "version": "2.0",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/mapping-rules/{recordType}",
              "permissionsRequired": [
                "mapping-rules.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/mapping-rules/{recordType}",
              "permissionsRequired": [
                "mapping-rules.update"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/mapping-rules/{recordType}/restore",
              "permissionsRequired": [
                "mapping-rules.restore"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "mapping-metadata-provider",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/mapping-metadata/{jobExecutionId}",
              "permissionsRequired": [
                "mapping-metadata.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/mapping-metadata/type/{recordType}",
              "permissionsRequired": [
                "mapping-metadata.type.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "configuration.entries.collection.get",
                "converter-storage.field-protection-settings.collection.get",
                "instance-authority.linking-rules.collection.get",
                "inventory-storage.alternative-title-types.collection.get",
                "inventory-storage.authority-note-types.collection.get",
                "inventory-storage.authority-source-files.collection.get",
                "inventory-storage.call-number-types.collection.get",
                "inventory-storage.classification-types.collection.get",
                "inventory-storage.contributor-name-types.collection.get",
                "inventory-storage.contributor-types.collection.get",
                "inventory-storage.electronic-access-relationships.collection.get",
                "inventory-storage.holdings-note-types.collection.get",
                "inventory-storage.holdings-types.collection.get",
                "inventory-storage.identifier-types.collection.get",
                "inventory-storage.ill-policies.collection.get",
                "inventory-storage.instance-formats.collection.get",
                "inventory-storage.instance-note-types.collection.get",
                "inventory-storage.instance-relationship-types.collection.get",
                "inventory-storage.instance-statuses.collection.get",
                "inventory-storage.instance-types.collection.get",
                "inventory-storage.item-damaged-statuses.collection.get",
                "inventory-storage.item-note-types.collection.get",
                "inventory-storage.loan-types.collection.get",
                "inventory-storage.locations.collection.get",
                "inventory-storage.material-types.collection.get",
                "inventory-storage.modes-of-issuance.collection.get",
                "inventory-storage.nature-of-content-terms.collection.get",
                "inventory-storage.statistical-code-types.collection.get",
                "inventory-storage.statistical-codes.collection.get",
                "inventory-storage.subject-sources.collection.get",
                "inventory-storage.subject-types.collection.get",
                "inventory-storage.instance-date-types.collection.get"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_jsonSchemas",
          "version": "1.0",
          "interfaceType": "multiple",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/_/jsonSchemas",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "instance-authority-linking-rules",
          "version": "1.0"
        },
        {
          "id": "authority-note-types",
          "version": "1.0"
        },
        {
          "id": "authority-source-files",
          "version": "2.2"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "metadata-provider.jobExecutions.collection.get",
          "replaces": [
            "metadata-provider.jobexecutions.get"
          ],
          "displayName": "Metadata Provider - get jobExecutions",
          "description": "Get JobExecutions",
          "subPermissions": []
        },
        {
          "permissionName": "metadata-provider.jobExecutions.users.collection.get",
          "replaces": [
            "metadata-provider.jobexecutions.get"
          ],
          "displayName": "Metadata Provider - get unique users for job JobExecutions",
          "description": "Get Users for JobExecutions",
          "subPermissions": []
        },
        {
          "permissionName": "metadata-provider.jobExecutions.jobProfiles.collection.get",
          "replaces": [
            "metadata-provider.jobexecutions.get"
          ],
          "displayName": "Metadata Provider - get JobProfiles for JobExecutions",
          "description": "Get JobProfiles for JobExecutions",
          "subPermissions": []
        },
        {
          "permissionName": "metadata-provider.jobLogEntries.collection.get",
          "replaces": [
            "metadata-provider.logs.get"
          ],
          "displayName": "Metadata Provider - get journal records",
          "description": "Get JournalRecordCollection",
          "subPermissions": []
        },
        {
          "permissionName": "metadata-provider.jobLogEntries.records.item.get",
          "replaces": [
            "metadata-provider.logs.get"
          ],
          "displayName": "Metadata Provider - get record processing logs",
          "description": "Get JobExecutionLogDto",
          "subPermissions": []
        },
        {
          "permissionName": "metadata-provider.journalRecords.collection.get",
          "replaces": [
            "metadata-provider.logs.get"
          ],
          "displayName": "Metadata Provider - get jobExecution logs",
          "description": "Get RecordProcessingLogDto",
          "subPermissions": []
        },
        {
          "permissionName": "metadata-provider.jobSummary.item.get",
          "replaces": [
            "metadata-provider.logs.get"
          ],
          "displayName": "Metadata Provider - get summary result",
          "description": "Get JobExecutionSummaryDto",
          "subPermissions": []
        },
        {
          "permissionName": "metadata-provider.incomingrecords.get",
          "replaces": [],
          "displayName": "Metadata Provider - get incoming record",
          "description": "Get IncomingRecord",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.jobexecutions.post",
          "replaces": [],
          "displayName": "Change Manager - create jobExecutions",
          "description": "Post JobExecution",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.jobexecutions.delete",
          "replaces": [],
          "displayName": "Change Manager - delete jobExecutions",
          "description": "Batch Delete JobExecutions",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.jobExecutions.item.put",
          "replaces": [
            "change-manager.jobexecutions.put"
          ],
          "displayName": "Change Manager - update jobExecution",
          "description": "Update JobExecution",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.jobExecutions.status.item.put",
          "replaces": [
            "change-manager.jobexecutions.put"
          ],
          "displayName": "Change Manager - update jobExecutions status",
          "description": "Update JobExecution Status",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.jobExecutions.jobProfile.item.put",
          "replaces": [
            "change-manager.jobexecutions.put"
          ],
          "displayName": "Change Manager - set jobProfile for jobExecution",
          "description": "Set JobProfile for JobExecution",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.jobExecutions.item.get",
          "replaces": [
            "change-manager.jobexecutions.get"
          ],
          "displayName": "Change Manager - get jobExecutions by id",
          "description": "Get JobExecution by id",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.jobExecutions.children.collection.get",
          "replaces": [
            "change-manager.jobexecutions.get"
          ],
          "displayName": "Change Manager - get children JobExecutions by parent id",
          "description": "Get children JobExecutions by parent id",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.records.post",
          "replaces": [],
          "displayName": "Change Manager - post chunk of raw records",
          "description": "Post chunk of raw records",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.records.delete",
          "replaces": [],
          "displayName": "Change Manager - delete jobExecution and all associated records from SRS",
          "description": "Delete JobExecution and all associated records from SRS",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.parsedrecords.get",
          "replaces": [],
          "displayName": "Change Manager - get parsed records by externalId",
          "description": "Get parsed record",
          "subPermissions": []
        },
        {
          "permissionName": "change-manager.parsedrecords.put",
          "replaces": [],
          "displayName": "Change Manager - update parsed record by id",
          "description": "Update parsed record",
          "subPermissions": []
        },
        {
          "permissionName": "mapping-rules.get",
          "replaces": [],
          "displayName": "Mapping Rules provider - get default rules by tenant id",
          "description": "Get mapping rules for tenant",
          "subPermissions": []
        },
        {
          "permissionName": "mapping-rules.update",
          "replaces": [],
          "displayName": "Mapping Rules provider - update default rules by tenant id",
          "description": "Update mapping rules for tenant",
          "subPermissions": []
        },
        {
          "permissionName": "mapping-rules.restore",
          "replaces": [],
          "displayName": "Mapping Rules provider - restore default rules by tenant id",
          "description": "Restore existing mapping rules to default for tenant",
          "subPermissions": []
        },
        {
          "permissionName": "mapping-metadata.item.get",
          "replaces": [
            "mapping-metadata.get"
          ],
          "displayName": "Mapping metadata provider - get mapping metadata",
          "description": "Get mapping metadata",
          "subPermissions": []
        },
        {
          "permissionName": "mapping-metadata.type.item.get",
          "replaces": [
            "mapping-metadata.get"
          ],
          "displayName": "Mapping metadata provider - get mapping metadata type",
          "description": "Get mapping metadata type",
          "subPermissions": []
        },
        {
          "permissionName": "source-records-manager.all",
          "replaces": [],
          "displayName": "Source Record Manager - all permissions",
          "description": "Entire set of permissions needed to manage jobExecutions",
          "subPermissions": [
            "metadata-provider.jobLogEntries.collection.get",
            "metadata-provider.jobLogEntries.records.item.get",
            "metadata-provider.journalRecords.collection.get",
            "metadata-provider.jobSummary.item.get",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "metadata-provider.incomingrecords.get",
            "change-manager.jobexecutions.post",
            "change-manager.jobExecutions.jobProfile.item.put",
            "change-manager.jobExecutions.status.item.put",
            "change-manager.jobExecutions.item.get",
            "change-manager.jobExecutions.children.collection.get",
            "change-manager.jobExecutions.item.put",
            "change-manager.records.post",
            "change-manager.records.delete",
            "change-manager.parsedrecords.get",
            "change-manager.parsedrecords.put",
            "mapping-rules.get",
            "mapping-rules.update",
            "mapping-rules.restore",
            "mapping-metadata.item.get",
            "mapping-metadata.type.item.get"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-source-record-manager:3.11.0-SNAPSHOT.1039",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 1073741824,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0  -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "15"
          },
          {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          },
          {
            "name": "DB_RECONNECTATTEMPTS",
            "value": "3"
          },
          {
            "name": "DB_RECONNECTINTERVAL",
            "value": "1000"
          }
        ],
        "dockerCMD": []
      },
      "metadata": {
        "user": {
          "type": "system",
          "permissions": [
            "source-storage.snapshots.put",
            "users.collection.get",
            "user-tenants.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-name-types.collection.get",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.instance-relationship-types.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.authority-note-types.collection.get",
            "inventory-storage.authority-source-files.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.subject-types.collection.get",
            "inventory-storage.subject-sources.collection.get",
            "inventory-storage.instance-date-types.collection.get",
            "converter-storage.field-protection-settings.collection.get",
            "configuration.entries.collection.get",
            "instance-authority.linking-rules.collection.get",
            "source-storage.snapshots.post"
          ]
        }
      },
      "name": "Source Record Manager Module"
    },
    {
      "id": "mod-source-record-storage-5.11.0-SNAPSHOT.701",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [
        {
          "id": "source-storage-snapshots",
          "version": "2.1",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/snapshots",
              "permissionsRequired": [
                "source-storage.snapshots.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/snapshots",
              "permissionsRequired": [
                "source-storage.snapshots.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/snapshots/{jobExecutionId}",
              "permissionsRequired": [
                "source-storage.snapshots.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/source-storage/snapshots/{jobExecutionId}",
              "permissionsRequired": [
                "source-storage.snapshots.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/source-storage/snapshots/{jobExecutionId}",
              "permissionsRequired": [
                "source-storage.snapshots.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "inventory.instances.item.delete"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "source-storage-records",
          "version": "3.4",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/records",
              "permissionsRequired": [
                "source-storage.records.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/records",
              "permissionsRequired": [
                "source-storage.records.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/records/{id}",
              "permissionsRequired": [
                "source-storage.records.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/source-storage/records/{id}",
              "permissionsRequired": [
                "source-storage.records.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/source-storage/records/{id}/generation",
              "permissionsRequired": [
                "source-storage.records.generation.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/records/{id}/un-delete",
              "permissionsRequired": [
                "source-storage.records.undelete.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/source-storage/records/{id}",
              "permissionsRequired": [
                "source-storage.records.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/records/{id}/formatted",
              "permissionsRequired": [
                "source-storage.records.formatted.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/source-storage/records/{id}/suppress-from-discovery",
              "permissionsRequired": [
                "source-storage.records.suppress-discovery.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/records/matching",
              "permissionsRequired": [
                "source-storage.records.matching.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "source-storage-source-records",
          "version": "3.2",
          "handlers": [
            {
              "methods": [
                "GET",
                "POST"
              ],
              "pathPattern": "/source-storage/source-records",
              "permissionsRequired": [
                "source-storage.source-records.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/source-records/{id}",
              "permissionsRequired": [
                "source-storage.source-records.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "source-storage-test-records",
          "version": "2.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/populate-test-marc-records",
              "permissionsRequired": [
                "source-storage.records.populate.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "source-storage-stream",
          "version": "1.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/stream/records",
              "permissionsRequired": [
                "source-storage.stream.records.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/stream/source-records",
              "permissionsRequired": [
                "source-storage.stream.source-records.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/stream/marc-record-identifiers",
              "permissionsRequired": [
                "source-storage.stream.marc-record-identifiers.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "source-storage-batch",
          "version": "1.3",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/batch/records",
              "permissionsRequired": [
                "source-storage.batch.records.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/source-storage/batch/parsed-records",
              "permissionsRequired": [
                "source-storage.parsed-records.collection.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/batch/parsed-records/fetch",
              "permissionsRequired": [
                "source-storage.parsed-records.fetch.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/batch/verified-records",
              "permissionsRequired": [
                "source-storage.verified-records.collection.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "source-storage-async-migrations",
          "version": "1.1",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/source-storage/migrations/jobs",
              "permissionsRequired": [
                "source-storage.migrations.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/source-storage/migrations/jobs/{id}",
              "permissionsRequired": [
                "source-storage.migrations.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE",
                "GET"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [
        {
          "id": "mapping-metadata-provider",
          "version": "1.0"
        },
        {
          "id": "data-import-converter-storage",
          "version": "1.2"
        },
        {
          "id": "instance-authority-links",
          "version": "2.0"
        },
        {
          "id": "instance-authority-linking-rules",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "source-storage.records.populate.collection.post",
          "replaces": [
            "source-storage.populate.records"
          ],
          "displayName": "Source Storage - populate storage with test records",
          "description": "Populate storage with test records",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.snapshots.item.get",
          "replaces": [
            "source-storage.snapshots.get"
          ],
          "displayName": "Source Storage - get snapshot",
          "description": "Get Snapshot",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.snapshots.collection.get",
          "replaces": [
            "source-storage.snapshots.get"
          ],
          "displayName": "Source Storage - get snapshots",
          "description": "Get Snapshots",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.snapshots.post",
          "replaces": [],
          "displayName": "Source Storage - create new snapshot",
          "description": "Post Snapshot",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.snapshots.put",
          "replaces": [],
          "displayName": "Source Storage - update snapshot",
          "description": "Put Snapshot",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.snapshots.delete",
          "replaces": [],
          "displayName": "Source Storage - delete snapshot and records",
          "description": "Delete Snapshot and all related Records",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.post",
          "replaces": [],
          "displayName": "Source Storage - create new record",
          "description": "Post Record",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.put",
          "replaces": [],
          "displayName": "Source Storage - update record",
          "description": "Put Record",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.generation.item.put",
          "replaces": [],
          "displayName": "Source Storage - update record's generation",
          "description": "Update record's generation",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.undelete.item.post",
          "replaces": [],
          "displayName": "Source Storage - undelete record",
          "description": "Undelete record",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.parsed-records.collection.put",
          "replaces": [],
          "displayName": "Source Storage - update records",
          "description": "Update records",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.parsed-records.fetch.collection.post",
          "replaces": [
            "source-storage.records.fetch"
          ],
          "displayName": "Source Storage - fetch records",
          "description": "Fetch Records",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.batch.records.collection.post",
          "replaces": [],
          "displayName": "Source Storage - stream collection of records",
          "description": "Stream collection of records",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.stream.source-records.collection.get",
          "replaces": [
            "source-storage.sourceRecords.get"
          ],
          "displayName": "Source Storage - get results",
          "description": "Source Storage - get results",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.stream.marc-record-identifiers.collection.post",
          "replaces": [
            "source-storage.records.get"
          ],
          "displayName": "Source Storage - post record's identifiers",
          "description": "Post record's identifiers",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.suppress-discovery.item.put",
          "replaces": [
            "source-storage.records.update"
          ],
          "displayName": "Source Storage - update record's suppress from discovery field",
          "description": "Update record's suppress from discovery field",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.delete",
          "replaces": [],
          "displayName": "Source Storage - delete record",
          "description": "Delete Record",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.source-records.item.get",
          "replaces": [
            "source-storage.sourceRecords.get"
          ],
          "displayName": "Source Storage - get source record",
          "description": "Get Source Record",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.collection.get",
          "replaces": [
            "source-storage.records.get"
          ],
          "displayName": "Source Storage - get records",
          "description": "Get Records",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.item.get",
          "replaces": [
            "source-storage.records.get"
          ],
          "displayName": "Source Storage - get record",
          "description": "Get Record",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.source-records.collection.get",
          "replaces": [
            "source-storage.sourceRecords.get"
          ],
          "displayName": "Source Storage - get source record collection",
          "description": "Get Source Records",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.formatted.item.get",
          "replaces": [
            "source-storage.records.get"
          ],
          "displayName": "Source Storage - get formatter record",
          "description": "Get formatted Record",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.stream.records.collection.get",
          "replaces": [
            "source-storage.records.get"
          ],
          "displayName": "Source Storage - stream record",
          "description": "Stream record",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.records.matching.collection.post",
          "replaces": [
            "source-storage.records.get"
          ],
          "displayName": "Source Storage - get pairs of marc record ID to external entity ID",
          "description": "Get pairs of marc record ID to external entity ID",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.verified-records.collection.post",
          "replaces": [],
          "displayName": "Source Storage - validate marc bib ids in the system",
          "description": "Return marc bib ids, which doesn't exist in the system",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.migrations.post",
          "replaces": [],
          "displayName": "Source Storage - initiate migration job",
          "description": "Initiate asynchronous migration job",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.migrations.item.get",
          "replaces": [
            "source-storage.migrations.get"
          ],
          "displayName": "Source Storage - get migration job(s)",
          "description": "Get migration job(s)",
          "subPermissions": []
        },
        {
          "permissionName": "source-storage.all",
          "replaces": [],
          "displayName": "Source Record Storage - all permissions",
          "description": "Entire set of permissions needed to manage snapshots and records",
          "subPermissions": [
            "source-storage.records.populate.collection.post",
            "source-storage.snapshots.item.get",
            "source-storage.snapshots.collection.get",
            "source-storage.snapshots.post",
            "source-storage.snapshots.put",
            "source-storage.snapshots.delete",
            "source-storage.records.post",
            "source-storage.records.put",
            "source-storage.parsed-records.fetch.collection.post",
            "source-storage.records.delete",
            "source-storage.records.update",
            "source-storage.source-records.item.get",
            "source-storage.source-records.collection.get",
            "source-storage.verified-records.collection.post",
            "source-storage.migrations.post",
            "source-storage.migrations.item.get",
            "source-storage.records.generation.item.put",
            "source-storage.records.undelete.item.post",
            "source-storage.parsed-records.collection.put",
            "source-storage.batch-records.collection.post",
            "source-storage.batch.records.collection.post",
            "source-storage.stream.source-records.collection.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.marc-record-identifiers.collection.post",
            "source-storage.records.item.get",
            "source-storage.records.collection.get",
            "source-storage.stream.records.collection.get",
            "source-storage.records.matching.collection.post"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-source-record-storage:5.11.0-SNAPSHOT.701",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 1073741824,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0 -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "15"
          },
          {
            "name": "DB_RECONNECTATTEMPTS",
            "value": "3"
          },
          {
            "name": "KAFKA_HOST",
            "value": "10.0.2.15"
          },
          {
            "name": "KAFKA_PORT",
            "value": "9092"
          }
        ],
        "dockerCMD": []
      },
      "metadata": {
        "user": {
          "type": "system",
          "permissions": [
            "instance-authority-links.instances.collection.get",
            "instance-authority.linking-rules.collection.get",
            "instance-authority-links.instances.collection.put",
            "converter-storage.jobprofilesnapshots.get",
            "user-tenants.collection.get",
            "mapping-metadata.item.get"
          ]
        }
      },
      "name": "Source Record Storage Module"
    },
    {
      "id": "mod-template-engine-1.23.0-SNAPSHOT.104",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "patron-notice-policy-storage",
          "version": "0.13"
        },
        {
          "id": "settings",
          "version": "1.2"
        }
      ],
      "provides": [
        {
          "id": "template-engine",
          "version": "2.2",
          "handlers": [
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/templates",
              "permissionsRequired": [
                "templates.collection.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/templates",
              "permissionsRequired": [
                "templates.item.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET"
              ],
              "pathPattern": "/templates/{templateId}",
              "permissionsRequired": [
                "templates.item.get"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "PUT"
              ],
              "pathPattern": "/templates/{templateId}",
              "permissionsRequired": [
                "templates.item.put"
              ],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "DELETE"
              ],
              "pathPattern": "/templates/{templateId}",
              "permissionsRequired": [
                "templates.item.delete"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "circulation-storage.patron-notice-policies.collection.get"
              ],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/template-request",
              "permissionsRequired": [
                "template-request.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "mod-settings.global.read.stripes-core.prefs.manage"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        },
        {
          "id": "_tenant",
          "version": "2.0",
          "interfaceType": "system",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/_/tenant",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            },
            {
              "methods": [
                "GET",
                "DELETE"
              ],
              "pathPattern": "/_/tenant/{id}",
              "permissionsRequired": [],
              "permissionsDesired": [],
              "modulePermissions": [],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "templates.collection.get",
          "replaces": [],
          "displayName": "Templates - get Templates collection",
          "description": "Get Templates collection",
          "subPermissions": []
        },
        {
          "permissionName": "templates.item.get",
          "replaces": [],
          "displayName": "Templates - get individual tag from storage",
          "description": "Get individual tag",
          "subPermissions": []
        },
        {
          "permissionName": "templates.item.post",
          "replaces": [],
          "displayName": "Templates - create tag",
          "description": "Create tag",
          "subPermissions": []
        },
        {
          "permissionName": "templates.item.put",
          "replaces": [],
          "displayName": "Templates - modify tag",
          "description": "Modify tag",
          "subPermissions": []
        },
        {
          "permissionName": "templates.item.delete",
          "replaces": [],
          "displayName": "Templates - delete tag",
          "description": "Delete tag",
          "subPermissions": []
        },
        {
          "permissionName": "template-request.post",
          "replaces": [],
          "displayName": "Template request",
          "description": "Request for template compilation",
          "subPermissions": []
        },
        {
          "permissionName": "templates.all",
          "replaces": [],
          "displayName": "Templates module - all permissions",
          "description": "Entire set of permissions needed to use the Templates module",
          "subPermissions": [
            "templates.collection.get",
            "templates.item.get",
            "templates.item.post",
            "templates.item.put",
            "templates.item.delete",
            "template-request.post"
          ],
          "visible": false
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-template-engine:1.23.0-SNAPSHOT.104",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          },
          {
            "name": "DB_HOST",
            "value": "postgres"
          },
          {
            "name": "DB_PORT",
            "value": "5432"
          },
          {
            "name": "DB_USERNAME",
            "value": "folio_admin"
          },
          {
            "name": "DB_PASSWORD",
            "value": "folio_admin"
          },
          {
            "name": "DB_DATABASE",
            "value": "okapi_modules"
          },
          {
            "name": "DB_QUERYTIMEOUT",
            "value": "60000"
          },
          {
            "name": "DB_CHARSET",
            "value": "UTF-8"
          },
          {
            "name": "DB_MAXPOOLSIZE",
            "value": "5"
          }
        ],
        "dockerCMD": [
          "verify.user=true"
        ]
      },
      "name": "Template engine module"
    },
    {
      "id": "mod-user-import-3.11.0-SNAPSHOT.113",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "permissions",
          "version": "5.0"
        },
        {
          "id": "users",
          "version": "15.2 16.0"
        },
        {
          "id": "request-preference-storage",
          "version": "2.0"
        },
        {
          "id": "service-points",
          "version": "3.2"
        },
        {
          "id": "okapi",
          "version": "1.9"
        }
      ],
      "provides": [
        {
          "id": "user-import",
          "version": "2.2",
          "handlers": [
            {
              "methods": [
                "POST"
              ],
              "pathPattern": "/user-import",
              "permissionsRequired": [
                "user-import.post"
              ],
              "permissionsDesired": [],
              "modulePermissions": [
                "addresstypes.collection.get",
                "circulation-storage.request-preferences.collection.get",
                "circulation-storage.request-preferences.item.delete",
                "circulation-storage.request-preferences.item.post",
                "circulation-storage.request-preferences.item.put",
                "departments.collection.get",
                "departments.item.post",
                "departments.item.put",
                "inventory-storage.service-points.collection.get",
                "perms.users.item.post",
                "user-settings.custom-fields.collection.get",
                "user-settings.custom-fields.item.put",
                "usergroups.collection.get",
                "users.collection.get",
                "users.item.get",
                "users.item.post",
                "users.item.put"
              ],
              "permissionsRequiredTenant": []
            }
          ],
          "permissionSets": []
        }
      ],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "user-import.post",
          "replaces": [
            "user-import.add"
          ],
          "displayName": "Import users",
          "description": "",
          "subPermissions": []
        },
        {
          "permissionName": "user-import.all",
          "replaces": [],
          "displayName": "User import - all permissions",
          "description": "",
          "subPermissions": [
            "user-import.post"
          ],
          "visible": true
        }
      ],
      "env": [],
      "launchDescriptor": {
        "dockerImage": "folioci/mod-user-import:3.11.0-SNAPSHOT.113",
        "dockerPull": true,
        "dockerArgs": {
          "HostConfig": {
            "Memory": 357913941,
            "PortBindings": {
              "8081/tcp": [
                {
                  "HostPort": "%p"
                }
              ]
            }
          }
        },
        "env": [
          {
            "name": "JAVA_OPTIONS",
            "value": "-XX:MaxRAMPercentage=66.0"
          }
        ],
        "dockerCMD": []
      },
      "name": "User import"
    }
  ],
  "uiModuleDescriptors": [
    {
      "id": "folio_calendar-12.0.109900000000172",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "calendar",
          "version": "5.0"
        },
        {
          "id": "service-points",
          "version": "3.0"
        },
        {
          "id": "users",
          "version": "16.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.calendar.enabled",
          "replaces": [],
          "displayName": "UI: Calendar module is enabled",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "settings.calendar.enabled",
          "replaces": [],
          "displayName": "Settings (Calendar): Display calendar in the settings list",
          "subPermissions": [
            "settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-calendar.view",
          "replaces": [],
          "displayName": "Settings (Calendar): Can view existing calendars",
          "description": "User can view existing calendars",
          "subPermissions": [
            "module.calendar.enabled",
            "settings.calendar.enabled",
            "calendar.view",
            "configuration.entries.collection.get",
            "inventory-storage.service-points.collection.get",
            "users.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-calendar.create",
          "replaces": [
            "ui-calendar.edit",
            "ui-calendar.all"
          ],
          "displayName": "Settings (Calendar): Can create and assign new calendars",
          "description": "User can create and assign new calendars",
          "subPermissions": [
            "ui-calendar.view",
            "calendar.create"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-calendar.update",
          "replaces": [
            "ui-calendar.edit",
            "ui-calendar.all"
          ],
          "displayName": "Settings (Calendar): Can edit and reassign existing calendars",
          "description": "User can edit and reassign existing calendars",
          "subPermissions": [
            "ui-calendar.view",
            "calendar.update"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-calendar.delete",
          "replaces": [
            "ui-calendar.all"
          ],
          "displayName": "Settings (Calendar): Can delete existing calendars",
          "description": "User can delete existing calendars",
          "subPermissions": [
            "ui-calendar.view",
            "calendar.delete"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Calendar settings"
    },
    {
      "id": "folio_checkin-12.0.109900000000199",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "inventory",
          "version": "10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "loan-policy-storage",
          "version": "1.0 2.0"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        },
        {
          "id": "feesfines",
          "version": "17.0 18.0 19.0"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "circulation-bff-loans",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.checkin.enabled",
          "replaces": [],
          "displayName": "UI: Check in module is enabled",
          "subPermissions": []
        },
        {
          "permissionName": "ui-checkin.all",
          "replaces": [],
          "displayName": "Check in: All permissions",
          "description": "Entire set of permissions needed to use Checkin",
          "subPermissions": [
            "users.collection.get",
            "usergroups.collection.get",
            "module.checkin.enabled",
            "inventory.items.collection.get",
            "inventory-storage.service-points.collection.get",
            "accounts.collection.get",
            "accounts.item.get",
            "lost-item-fees-policies.collection.get",
            "circulation.loans.collection.get",
            "circulation.check-in-by-barcode.post",
            "circulation.hold-by-barcode-for-use-at-location.post",
            "circulation-bff.loans.check-in-by-barcode.execute",
            "circulation.requests.collection.get",
            "feefineactions.collection.get",
            "configuration.entries.collection.get",
            "circulation.end-patron-action-session.post",
            "circulation-storage.staff-slips.collection.get"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Item Check-in"
    },
    {
      "id": "folio_checkout-13.0.109900000000169",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "add-info",
          "version": "0.1"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "loan-storage",
          "version": "7.4"
        },
        {
          "id": "loan-policy-storage",
          "version": "1.0 2.0"
        },
        {
          "id": "users",
          "version": "16.4"
        },
        {
          "id": "inventory",
          "version": "10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "automated-patron-blocks",
          "version": "0.1"
        },
        {
          "id": "notes",
          "version": "4.0"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "circulation-bff-loans",
          "version": "1.2"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.checkout.enabled",
          "replaces": [],
          "displayName": "UI: Check out module is enabled",
          "subPermissions": []
        },
        {
          "permissionName": "ui-checkout.circulation.execute",
          "replaces": [
            "ui-checkout.circulation"
          ],
          "displayName": "Check out: Check out circulating items",
          "description": "Set of permissions needed to check out circulation items",
          "subPermissions": [
            "users.collection.get",
            "usergroups.collection.get",
            "proxiesfor.collection.get",
            "accounts.collection.get",
            "manualblocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get",
            "module.checkout.enabled",
            "inventory.items.collection.get",
            "circulation.check-out-by-barcode.post",
            "circulation.pickup-by-barcode-for-use-at-location.post",
            "circulation-bff.loans.check-out-by-barcode.execute",
            "circulation.loans.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation.requests.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation.end-patron-action-session.post",
            "configuration.entries.collection.get",
            "note.links.collection.get",
            "users.configurations.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-checkout.all",
          "replaces": [],
          "displayName": "Check out: All permissions",
          "description": "Entire set of permissions needed to use Check out",
          "subPermissions": [
            "ui-checkout.circulation.execute"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-checkout.viewLoans.view",
          "replaces": [
            "ui-checkout.viewLoans"
          ],
          "displayName": "Check out: View loans",
          "description": "Entire set of permissions needed to view loans",
          "subPermissions": [
            "ui-users.loans.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-checkout.viewFeeFines.view",
          "replaces": [
            "ui-checkout.viewFeeFines"
          ],
          "displayName": "Check out: View fees/fines",
          "description": "Entire set of permissions needed to view fees/fines",
          "subPermissions": [
            "ui-users.feesfines.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-checkout.viewRequests.view",
          "replaces": [
            "ui-checkout.viewRequests"
          ],
          "displayName": "Check out: View requests",
          "description": "Entire set of permissions needed to view requests",
          "subPermissions": [
            "ui-requests.view"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Item Check-out"
    },
    {
      "id": "folio_circulation-11.1.109900000000200",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "fixed-due-date-schedules-storage",
          "version": "2.0"
        },
        {
          "id": "loan-policy-storage",
          "version": "1.0 2.0"
        },
        {
          "id": "staff-slips-storage",
          "version": "1.0"
        },
        {
          "id": "template-engine",
          "version": "2.0"
        },
        {
          "id": "patron-notice-policy-storage",
          "version": "0.11"
        },
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "feesfines",
          "version": "16.0 17.0 18.0 19.0"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "consortia",
          "version": "1.0"
        },
        {
          "id": "ecs-tlr",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "settings.circulation.enabled",
          "replaces": [],
          "displayName": "Settings (Circulation): display list of settings pages",
          "subPermissions": [
            "settings.enabled"
          ]
        },
        {
          "permissionName": "ui-circulation.settings.view-cancellation-reasons",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view cancellation reasons",
          "subPermissions": [
            "circulation-storage.cancellation-reasons.item.get",
            "circulation-storage.cancellation-reasons.collection.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-circulation.settings.cancellation-reasons",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove cancellation reasons",
          "subPermissions": [
            "ui-circulation.settings.view-cancellation-reasons",
            "circulation-storage.cancellation-reasons.item.post",
            "circulation-storage.cancellation-reasons.item.put",
            "circulation-storage.cancellation-reasons.item.delete",
            "circulation-storage.cancellation-reasons.collection.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.loan-history",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view loan history",
          "subPermissions": [
            "configuration.entries.collection.get",
            "settings.circulation.enabled",
            "payments.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.edit-loan-history",
          "replaces": [],
          "displayName": "Settings (Circulation): Can edit loan history",
          "subPermissions": [
            "ui-circulation.settings.loan-history",
            "configuration.entries.item.post",
            "configuration.entries.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-loan-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view loan policies",
          "subPermissions": [
            "circulation.loans.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.loan-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove loan policies",
          "subPermissions": [
            "ui-circulation.settings.view-loan-policies",
            "circulation-storage.loan-policies.item.post",
            "circulation-storage.loan-policies.item.put",
            "circulation-storage.loan-policies.item.delete",
            "circulation-storage.loan-policies.collection.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-notice-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view notice policies",
          "subPermissions": [
            "circulation.rules.get",
            "circulation-storage.patron-notice-policies.collection.get",
            "circulation-storage.patron-notice-policies.item.get",
            "templates.collection.get",
            "templates.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-circulation.settings.notice-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove notice policies",
          "subPermissions": [
            "ui-circulation.settings.view-notice-policies",
            "circulation-storage.patron-notice-policies.item.post",
            "circulation-storage.patron-notice-policies.item.put",
            "circulation-storage.patron-notice-policies.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "settings.loan-policies.all",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove loan policies [LEGACY]",
          "subPermissions": [
            "ui-circulation.settings.loan-policies"
          ]
        },
        {
          "permissionName": "ui-circulation.settings.view-circulation-rules",
          "replaces": [],
          "displayName": "Settings (Circulation): View circulation rules",
          "subPermissions": [
            "circulation-storage.circulation-rules.get",
            "circulation.rules.get",
            "usergroups.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.patron-notice-policies.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.request-policies.item.get",
            "circulation-storage.patron-notice-policies.item.get",
            "settings.circulation.enabled",
            "inventory-storage.material-types.item.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.locations.collection.get",
            "overdue-fines-policies.collection.get",
            "lost-item-fees-policies.collection.get",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.edit-circulation-rules",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove circulation rules",
          "subPermissions": [
            "ui-circulation.settings.view-circulation-rules",
            "circulation-storage.circulation-rules.put",
            "circulation.rules.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-fixed-due-date-schedules",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view fixed due date schedules",
          "subPermissions": [
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.fixed-due-date-schedules.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-circulation.settings.fixed-due-date-schedules",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove fixed due date schedules",
          "subPermissions": [
            "ui-circulation.settings.view-fixed-due-date-schedules",
            "circulation-storage.fixed-due-date-schedules.item.post",
            "circulation-storage.fixed-due-date-schedules.item.put",
            "circulation-storage.fixed-due-date-schedules.item.delete",
            "circulation-storage.fixed-due-date-schedules.collection.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "settings.loan-rules.all",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove loan rules [LEGACY]",
          "subPermissions": [
            "ui-circulation.settings.edit-circulation-rules"
          ]
        },
        {
          "permissionName": "ui-circulation.settings.view-staff-slips",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view staff slips",
          "subPermissions": [
            "settings.circulation.enabled",
            "circulation-storage.staff-slips.collection.get",
            "circulation-storage.staff-slips.item.get",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.edit-staff-slips",
          "replaces": [],
          "displayName": "Settings (Circulation): Can edit staff slips",
          "subPermissions": [
            "ui-circulation.settings.view-staff-slips",
            "circulation-storage.staff-slips.item.put"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-circulation.settings.staff-slips",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove staff slips",
          "subPermissions": [
            "ui-circulation.settings.edit-staff-slips",
            "configuration.entries.collection.get",
            "configuration.entries.item.put",
            "configuration.entries.item.post",
            "circulation-storage.staff-slips.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.request-print-details",
          "replaces": [],
          "displayName": "Settings (Circulation): Can enable request print details",
          "subPermissions": [
            "settings.circulation.enabled",
            "circulation.settings.collection.get",
            "circulation.settings.item.get",
            "circulation.settings.item.put",
            "circulation.settings.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-request-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view request policies",
          "subPermissions": [
            "circulation.rules.get",
            "circulation-storage.request-policies.collection.get",
            "circulation-storage.request-policies.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled",
            "inventory-storage.service-points.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-circulation.settings.request-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove request policies",
          "subPermissions": [
            "ui-circulation.settings.view-request-policies",
            "circulation-storage.request-policies.collection.delete",
            "circulation-storage.request-policies.item.delete",
            "circulation-storage.request-policies.item.post",
            "circulation-storage.request-policies.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-other-settings",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view other settings",
          "subPermissions": [
            "user-settings.custom-fields.collection.get",
            "settings.circulation.enabled",
            "configuration.entries.collection.get",
            "configuration.entries.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-circulation.settings.other-settings",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove other settings",
          "subPermissions": [
            "ui-circulation.settings.view-other-settings",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "configuration.entries.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-notice-templates",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view patron notice templates",
          "subPermissions": [
            "circulation-storage.patron-notice-policies.collection.get",
            "templates.collection.get",
            "templates.item.get",
            "settings.circulation.enabled",
            "users.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-circulation.settings.notice-templates",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove patron notice templates",
          "subPermissions": [
            "ui-circulation.settings.view-notice-templates",
            "templates.item.post",
            "templates.item.put",
            "templates.item.delete",
            "template-request.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-overdue-fines-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view overdue fine policies",
          "subPermissions": [
            "circulation.loans.collection.get",
            "manual-block-templates.collection.get",
            "overdue-fines-policies.collection.get",
            "overdue-fines-policies.item.get",
            "templates.collection.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.overdue-fines-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove overdue fine policies",
          "subPermissions": [
            "ui-circulation.settings.view-overdue-fines-policies",
            "overdue-fines-policies.item.post",
            "overdue-fines-policies.item.put",
            "overdue-fines-policies.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-lost-item-fees-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view lost item fee policies",
          "subPermissions": [
            "circulation.loans.collection.get",
            "lost-item-fees-policies.collection.get",
            "lost-item-fees-policies.item.get",
            "users.collection.get",
            "users.item.get",
            "settings.circulation.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.lost-item-fees-policies",
          "replaces": [],
          "displayName": "Settings (Circulation): Can create, edit and remove lost item fee policies",
          "subPermissions": [
            "ui-circulation.settings.view-lost-item-fees-policies",
            "lost-item-fees-policies.item.post",
            "lost-item-fees-policies.item.put",
            "lost-item-fees-policies.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-titleLevelRequests",
          "replaces": [],
          "displayName": "Settings (Circulation): Title level request view",
          "subPermissions": [
            "settings.circulation.enabled",
            "templates.collection.get",
            "mod-settings.global.read.circulation",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "circulation.requests.collection.get",
            "configuration.entries.collection.get"
          ]
        },
        {
          "permissionName": "ui-circulation.settings.titleLevelRequests",
          "replaces": [],
          "displayName": "Settings (Circulation): Title level request edit",
          "subPermissions": [
            "ui-circulation.settings.view-titleLevelRequests",
            "mod-settings.global.write.circulation",
            "mod-settings.entries.item.put",
            "mod-settings.entries.item.post",
            "configuration.entries.item.post",
            "configuration.entries.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation.settings.view-circulation-settings",
          "replaces": [],
          "displayName": "Settings (Circulation): Can view all circulation settings",
          "subPermissions": [
            "ui-circulation.settings.view-circulation-rules",
            "ui-circulation.settings.view-other-settings",
            "ui-circulation.settings.view-staff-slips",
            "ui-circulation.settings.view-titleLevelRequests",
            "tlr.consortium-tlr.view",
            "ui-circulation.settings.view-fixed-due-date-schedules",
            "ui-circulation.settings.loan-history",
            "ui-circulation.settings.view-loan-policies",
            "ui-circulation.settings.view-overdue-fines-policies",
            "ui-circulation.settings.view-lost-item-fees-policies",
            "ui-circulation.settings.view-notice-policies",
            "ui-circulation.settings.view-notice-templates",
            "ui-circulation.settings.view-cancellation-reasons",
            "ui-circulation.settings.view-request-policies",
            "ui-circulation.settings.view-staff-slips"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Circulation manager"
    },
    {
      "id": "folio_circulation-log-6.0.109900000000103",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "service-points",
          "version": "3.3"
        },
        {
          "id": "circulation-logs",
          "version": "1.2"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "data-export-spring",
          "version": "1.0 2.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.circulation-log.enabled",
          "replaces": [],
          "displayName": "UI: Circulation logs module is enabled",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "ui-circulation-log.log-event.view",
          "replaces": [],
          "displayName": "Circulation log: View",
          "description": "",
          "subPermissions": [
            "module.circulation-log.enabled",
            "inventory-storage.service-points.collection.get",
            "circulation-logs.collection.get",
            "data-export.job.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-circulation-log.log-event.all",
          "replaces": [],
          "displayName": "Circulation log: All",
          "description": "",
          "subPermissions": [
            "ui-circulation-log.log-event.view",
            "data-export.job.item.post",
            "data-export.job.item.download",
            "usergroups.collection.get",
            "users.collection.get"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Description for circulation logs"
    },
    {
      "id": "folio_courses-7.0.309900000000136",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "course-reserves-storage",
          "version": "0.2"
        },
        {
          "id": "term-storage",
          "version": "0.1"
        },
        {
          "id": "department-storage",
          "version": "0.1"
        },
        {
          "id": "course-type-storage",
          "version": "0.1"
        },
        {
          "id": "processing-status-storage",
          "version": "0.1"
        },
        {
          "id": "copyright-status-storage",
          "version": "0.1"
        },
        {
          "id": "role-storage",
          "version": "0.1"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "item-storage",
          "version": "7.1 8.0 9.0 10.0 11.0"
        },
        {
          "id": "loan-types",
          "version": "2.2"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.courses.enabled",
          "replaces": [],
          "displayName": "UI: courses module is enabled",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "settings.courses.enabled",
          "replaces": [],
          "displayName": "Settings (courses): display list of settings pages",
          "subPermissions": [
            "settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-courses.all",
          "replaces": [
            "course-reserves.all"
          ],
          "displayName": "Courses: All permissions",
          "description": "The highest level is CRUD Course Reserves which allows the user to maintain courses, items, instructors, cross listed courses, etc.",
          "subPermissions": [
            "ui-courses.maintain-courses",
            "ui-courses.maintain-items",
            "ui-courses.maintain-settings",
            "course-reserves-storage.terms.write",
            "course-reserves-storage.courselistings.write",
            "course-reserves-storage.roles.write",
            "course-reserves-storage.departments.write",
            "course-reserves-storage.course-types.write",
            "course-reserves-storage.processing-statuses.write",
            "course-reserves-storage.copyright-statuses.write",
            "course-reserves-storage.courses.write",
            "course-reserves-storage.reserves.write"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-courses.read-all",
          "replaces": [
            "course-reserves.read-all"
          ],
          "displayName": "Courses: Read all",
          "description": "Allows user read only access to Courses and Reserves",
          "subPermissions": [
            "module.courses.enabled",
            "course-reserves-storage.courses.read",
            "course-reserves-storage.courselistings.read",
            "course-reserves-storage.reserves.read",
            "course-reserves-storage.terms.read",
            "course-reserves-storage.course-types.read",
            "course-reserves-storage.departments.read",
            "course-reserves-storage.processing-statuses.read",
            "course-reserves-storage.copyright-statuses.read",
            "course-reserves-storage.roles.read",
            "inventory-storage.locations.collection.get",
            "inventory.items.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-courses.read-add-edit",
          "replaces": [
            "course-reserves.read-add-edit"
          ],
          "displayName": "Courses: Read, add, and edit courses",
          "description": "Allows user the ability to read, add and edit Course Records - but not to delete. (Does not include item add, edit and remove)",
          "subPermissions": [
            "ui-courses.read-all",
            "course-reserves-storage.courses.item.post",
            "course-reserves-storage.courses.item.put",
            "course-reserves-storage.courselistings.item.post",
            "course-reserves-storage.courselistings.item.put",
            "course-reserves-storage.courselisting.courses.item.post",
            "course-reserves-storage.courselistings.courses.item.put",
            "course-reserves-storage.courselistings.instructors.item.post",
            "course-reserves-storage.courselistings.instructors.item.put",
            "course-reserves-storage.courselistings.instructors.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-courses.maintain-courses",
          "replaces": [],
          "displayName": "Courses: Read, add, edit, and delete courses",
          "description": "Allows user the ability to fully edit and delete Course Records.",
          "subPermissions": [
            "ui-courses.read-all",
            "ui-courses.read-add-edit",
            "course-reserves-storage.courses.item.delete",
            "course-reserves-storage.courselistings.item.delete",
            "course-reserves-storage.courselistings.courses.item.delete",
            "course-reserves-storage.courselistings.reserves.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-courses.add-edit-items",
          "replaces": [],
          "displayName": "Courses: Add and edit a courses' reserved items",
          "description": "This permission allows a user to add and edit items on a course",
          "subPermissions": [
            "ui-courses.read-all",
            "course-reserves-storage.reserves.item.post",
            "course-reserves-storage.reserves.item.put",
            "course-reserves-storage.courselistings.reserves.item.put",
            "course-reserves-storage.courselistings.reserves.item.post",
            "inventory-storage.locations.collection.get",
            "inventory.items.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.item.put",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-courses.maintain-items",
          "replaces": [
            "course-reserves.maintain-items"
          ],
          "displayName": "Courses: Add, edit, and remove a courses' reserved items",
          "description": "This permission allows a user to add, edit, and remove items on a course",
          "subPermissions": [
            "ui-courses.read-all",
            "ui-courses.add-edit-items",
            "course-reserves-storage.reserves.write",
            "course-reserves-storage.courselistings.reserves.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-courses.view-settings",
          "replaces": [],
          "displayName": "Settings (Courses): Can view course settings",
          "description": "This permission allows the user to view all Course Settings",
          "subPermissions": [
            "settings.courses.enabled",
            "configuration.entries.collection.get",
            "course-reserves-storage.terms.read",
            "course-reserves-storage.course-types.read",
            "course-reserves-storage.departments.read",
            "course-reserves-storage.processing-statuses.read",
            "course-reserves-storage.copyright-statuses.read",
            "course-reserves-storage.roles.read"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-courses.maintain-settings",
          "replaces": [
            "course-reserves.maintain-settings"
          ],
          "displayName": "Settings (Courses): Can create, edit and delete course settings",
          "description": "This permission allows the user to Create, edit and delete all Course Settings",
          "subPermissions": [
            "settings.courses.enabled",
            "course-reserves-storage.terms.write",
            "course-reserves-storage.course-types.write",
            "course-reserves-storage.departments.write",
            "course-reserves-storage.processing-statuses.write",
            "course-reserves-storage.copyright-statuses.write",
            "course-reserves-storage.roles.write"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Maintain courses and reserve items for them"
    },
    {
      "id": "folio_data-export-7.0.10990000000085",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "data-export",
          "version": "5.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.data-export.enabled",
          "replaces": [],
          "displayName": "Data export: module enabled",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "settings.data-export.enabled",
          "replaces": [],
          "displayName": "Settings data-export enabled",
          "subPermissions": [
            "settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-data-export.view",
          "replaces": [],
          "displayName": "Data export: Can view only",
          "subPermissions": [
            "module.data-export.enabled",
            "data-export.related-users.collection.get",
            "data-export.job-executions.items.download.get",
            "data-export.job-executions.collection.get",
            "data-export.logs.collection.get",
            "data-export.mapping-profiles.collection.get",
            "data-export.job-profiles.collection.get",
            "data-export.mapping-profiles.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-data-export.edit",
          "replaces": [],
          "displayName": "Data export: Can upload files, export, download files and view logs",
          "subPermissions": [
            "ui-data-export.view",
            "data-export.export.post",
            "data-export.file-definitions.upload.post",
            "data-export.file-definitions.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-data-export.settings.view",
          "replaces": [],
          "displayName": "Settings (Data export): Can view only",
          "subPermissions": [
            "settings.data-export.enabled",
            "data-export.job-executions.collection.get",
            "data-export.job-profiles.collection.get",
            "data-export.job-profiles.item.get",
            "data-export.transformation-fields.collection.get",
            "data-export.mapping-profiles.collection.get",
            "data-export.mapping-profiles.item.get",
            "users.collection.get",
            "users.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-data-export.settings.edit",
          "replaces": [],
          "displayName": "Settings (Data export): Can view, add, update profiles",
          "subPermissions": [
            "ui-data-export.settings.view",
            "data-export.mapping-profiles.item.post",
            "data-export.mapping-profiles.item.put",
            "data-export.mapping-profiles.item.delete",
            "data-export.job-profiles.item.post",
            "data-export.job-profiles.item.put",
            "data-export.job-profiles.item.delete"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Data export manager"
    },
    {
      "id": "folio_data-import-9.0.109900000000155",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "data-import",
          "version": "3.2"
        },
        {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
        {
          "id": "data-import-converter-storage",
          "version": "1.5"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.data-import.enabled",
          "replaces": [],
          "displayName": "UI: Data import module is enabled",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "ui-data-import.manage",
          "replaces": [],
          "displayName": "Data import: Can upload files, import, and view logs",
          "subPermissions": [
            "module.data-import.enabled",
            "change-manager.jobExecutions.item.get",
            "change-manager.jobExecutions.children.collection.get",
            "change-manager.records.delete",
            "configuration.entries.collection.get",
            "converter-storage.actionprofile.item.get",
            "converter-storage.actionprofile.collection.get",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "converter-storage.mappingprofile.item.get",
            "converter-storage.mappingprofile.collection.get",
            "converter-storage.matchprofile.item.get",
            "converter-storage.matchprofile.collection.get",
            "converter-storage.profileassociations.item.get",
            "converter-storage.profileassociations.collection.get",
            "converter-storage.profileassociations.details.item.get",
            "converter-storage.profileassociations.masters.item.get",
            "converter-storage.profileSnapshots.get",
            "data-import.assembleStorageFile.post",
            "data-import.fileExtensions.item.get",
            "data-import.fileExtensions.collection.get",
            "data-import.jobexecution.cancel",
            "data-import.upload.file.post",
            "data-import.uploaddefinitions.delete",
            "data-import.uploaddefinitions.files.delete",
            "data-import.uploadDefinitions.files.item.post",
            "data-import.uploadDefinitions.processFiles.item.post",
            "data-import.uploadDefinitions.item.get",
            "data-import.uploadDefinitions.collection.get",
            "data-import.uploaddefinitions.post",
            "data-import.uploaddefinitions.put",
            "data-import.uploadUrl.item.get",
            "data-import.uploadUrl.subsequent.item.get",
            "invoice-storage.invoice-lines.item.get",
            "invoice-storage.invoices.item.get",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "metadata-provider.jobLogEntries.collection.get",
            "metadata-provider.jobLogEntries.records.item.get",
            "metadata-provider.journalRecords.collection.get",
            "metadata-provider.jobSummary.item.get",
            "source-storage.stream.marc-record-identifiers.collection.post",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "source-storage.records.matching.collection.post",
            "ui-data-import.view",
            "ui-orders.orders.view",
            "metadata-provider.incomingrecords.get",
            "source-storage.source-records.item.get",
            "source-storage.source-records.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-data-import.view",
          "replaces": [],
          "displayName": "Data import: Can view only",
          "subPermissions": [
            "module.data-import.enabled",
            "change-manager.jobExecutions.item.get",
            "change-manager.jobExecutions.children.collection.get",
            "data-import.downloadUrl.get",
            "data-import.splitconfig.get",
            "data-import.uploadDefinitions.item.get",
            "data-import.uploadDefinitions.collection.get",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "metadata-provider.jobLogEntries.collection.get",
            "metadata-provider.jobLogEntries.records.item.get",
            "metadata-provider.journalRecords.collection.get",
            "metadata-provider.jobSummary.item.get",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "metadata-provider.incomingrecords.get",
            "source-storage.source-records.item.get",
            "source-storage.source-records.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-data-import.logs.delete",
          "replaces": [],
          "displayName": "Data import: Can delete import logs",
          "subPermissions": [
            "ui-data-import.view",
            "change-manager.jobexecutions.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "settings.data-import.enabled",
          "replaces": [],
          "displayName": "Settings (Data import): Display list of settings pages for Data import",
          "subPermissions": [
            "settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-data-import.settings.manage",
          "replaces": [],
          "displayName": "Settings (Data import): Can view, create, edit, and remove",
          "subPermissions": [
            "settings.data-import.enabled",
            "acquisitions-units.units.collection.get",
            "batch-groups.collection.get",
            "configuration.entries.collection.get",
            "converter-storage.actionprofile.delete",
            "converter-storage.actionprofile.item.get",
            "converter-storage.actionprofile.collection.get",
            "converter-storage.actionprofile.post",
            "converter-storage.actionprofile.put",
            "converter-storage.field-protection-settings.delete",
            "converter-storage.field-protection-settings.item.get",
            "converter-storage.field-protection-settings.collection.get",
            "converter-storage.field-protection-settings.post",
            "converter-storage.field-protection-settings.put",
            "converter-storage.jobprofile.delete",
            "converter-storage.jobprofile.delete",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "converter-storage.jobprofile.post",
            "converter-storage.jobprofile.put",
            "converter-storage.jobprofilesnapshots.get",
            "converter-storage.jobprofilesnapshots.post",
            "converter-storage.mappingprofile.delete",
            "converter-storage.mappingprofile.item.get",
            "converter-storage.mappingprofile.collection.get",
            "converter-storage.mappingprofile.post",
            "converter-storage.mappingprofile.put",
            "converter-storage.matchprofile.delete",
            "converter-storage.matchprofile.item.get",
            "converter-storage.matchprofile.collection.get",
            "converter-storage.matchprofile.post",
            "converter-storage.matchprofile.put",
            "converter-storage.profileassociations.item.get",
            "converter-storage.profileassociations.collection.get",
            "converter-storage.profileassociations.details.item.get",
            "converter-storage.profileassociations.masters.item.get",
            "converter-storage.profileSnapshots.get",
            "data-import.fileExtensions.default.post",
            "data-import.fileExtensions.delete",
            "data-import.fileExtensions.item.get",
            "data-import.fileExtensions.collection.get",
            "data-import.fileExtensions.post",
            "data-import.fileExtensions.put",
            "data-import.splitconfig.get",
            "finance.expense-classes.collection.get",
            "finance.funds.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "mapping-rules.get",
            "mapping-rules.restore",
            "mapping-rules.update",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "organizations.organizations.collection.get",
            "tags.collection.get",
            "tags.item.post",
            "ui-orders.orders.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-data-import.settings.readOnly",
          "replaces": [],
          "displayName": "Settings (Data import): Can view only",
          "subPermissions": [
            "settings.data-import.enabled",
            "acquisitions-units.units.collection.get",
            "batch-groups.collection.get",
            "configuration.entries.collection.get",
            "converter-storage.actionprofile.item.get",
            "converter-storage.actionprofile.collection.get",
            "converter-storage.field-protection-settings.item.get",
            "converter-storage.field-protection-settings.collection.get",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "converter-storage.jobprofilesnapshots.get",
            "converter-storage.mappingprofile.item.get",
            "converter-storage.mappingprofile.collection.get",
            "converter-storage.matchprofile.item.get",
            "converter-storage.matchprofile.collection.get",
            "converter-storage.profileassociations.item.get",
            "converter-storage.profileassociations.collection.get",
            "converter-storage.profileassociations.details.item.get",
            "converter-storage.profileassociations.masters.item.get",
            "converter-storage.profileSnapshots.get",
            "data-import.fileExtensions.item.get",
            "data-import.fileExtensions.collection.get",
            "data-import.splitconfig.get",
            "finance.expense-classes.collection.get",
            "finance.funds.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "mapping-rules.get",
            "metadata-provider.jobExecutions.collection.get",
            "metadata-provider.jobExecutions.users.collection.get",
            "metadata-provider.jobExecutions.jobProfiles.collection.get",
            "tags.collection.get"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Data Import manager"
    },
    {
      "id": "folio_export-manager-5.0.109900000000115",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "data-export-spring",
          "version": "2.0"
        },
        {
          "id": "tags",
          "version": "1.0"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "organizations.organizations",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.export-manager.enabled",
          "replaces": [],
          "displayName": "UI: Export manager module is enabled",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "settings.export-manager.enabled",
          "replaces": [],
          "displayName": "Settings (Export manager): Export manager settings enabled",
          "subPermissions": [
            "settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-export-manager.export-manager.view",
          "replaces": [],
          "displayName": "Export manager: View",
          "description": "",
          "subPermissions": [
            "module.export-manager.enabled",
            "configuration.entries.collection.get",
            "organizations.organizations.collection.get",
            "organizations.organizations.item.get",
            "data-export.config.collection.get",
            "data-export.config.item.get",
            "data-export.job.collection.get",
            "data-export.job.item.get",
            "tags.collection.get",
            "usergroups.collection.get",
            "users.collection.get",
            "users.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-export-manager.jobs.downloadAndResend.execute",
          "replaces": [
            "ui-export-manager.jobs.downloadAndResend"
          ],
          "displayName": "Export manager: Download and resend files",
          "description": "",
          "subPermissions": [
            "data-export.job.item.post",
            "data-export.job.item.download",
            "data-export.job.item.resend"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-export-manager.export-manager.all",
          "replaces": [],
          "displayName": "Export manager: All",
          "description": "",
          "subPermissions": [
            "ui-export-manager.export-manager.view",
            "data-export.edifact.orders.create",
            "ui-export-manager.jobs.downloadAndResend.execute"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-export-manager.settings.view",
          "replaces": [],
          "displayName": "Settings (Export manager): Can view only settings",
          "subPermissions": [
            "settings.export-manager.enabled",
            "data-export.job-deletion-intervals.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-export-manager.settings.edit",
          "replaces": [],
          "displayName": "Settings (Export manager): Can view and edit settings",
          "subPermissions": [
            "ui-export-manager.settings.view",
            "data-export.job-deletion-intervals.item.put"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Description for export manager"
    },
    {
      "id": "folio_handler-stripes-registry-3.1.10990000000089",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [],
      "env": [],
      "name": "frontend registry for Stripes"
    },
    {
      "id": "folio_inventory-14.0.1099000000001130",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "alternative-title-types",
          "version": "1.0"
        },
        {
          "id": "audit-inventory",
          "version": "1.0"
        },
        {
          "id": "audit-config",
          "version": "1.0"
        },
        {
          "id": "audit-marc",
          "version": "1.0"
        },
        {
          "id": "call-number-types",
          "version": "1.0"
        },
        {
          "id": "browse-inventory",
          "version": "1.0"
        },
        {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "classification-types",
          "version": "1.1"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "contributor-name-types",
          "version": "1.2"
        },
        {
          "id": "contributor-types",
          "version": "2.0"
        },
        {
          "id": "data-export",
          "version": "5.0"
        },
        {
          "id": "data-import-converter-storage",
          "version": "1.3 1.4 1.5"
        },
        {
          "id": "electronic-access-relationships",
          "version": "1.0"
        },
        {
          "id": "holdings-note-types",
          "version": "1.0"
        },
        {
          "id": "holdings-sources",
          "version": "1.0"
        },
        {
          "id": "holdings-storage",
          "version": "3.0 4.4 5.0 6.0 7.0 8.0"
        },
        {
          "id": "holdings-types",
          "version": "1.0"
        },
        {
          "id": "identifier-types",
          "version": "1.1"
        },
        {
          "id": "ill-policies",
          "version": "1.0"
        },
        {
          "id": "instance-formats",
          "version": "2.0"
        },
        {
          "id": "instance-note-types",
          "version": "1.0"
        },
        {
          "id": "instance-relationship-types",
          "version": "1.0"
        },
        {
          "id": "instance-statuses",
          "version": "1.0"
        },
        {
          "id": "instance-storage",
          "version": "7.0 8.0 9.0 10.0 11.0"
        },
        {
          "id": "instance-types",
          "version": "2.0"
        },
        {
          "id": "inventory-record-bulk",
          "version": "1.0"
        },
        {
          "id": "inventory",
          "version": "10.10 11.0 12.0 13.0 14.0"
        },
        {
          "id": "item-note-types",
          "version": "1.0"
        },
        {
          "id": "item-storage",
          "version": "8.0 9.0 10.0 11.0"
        },
        {
          "id": "loan-types",
          "version": "2.0"
        },
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "material-types",
          "version": "2.0"
        },
        {
          "id": "modes-of-issuance",
          "version": "1.0"
        },
        {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
        {
          "id": "resource-ids-streaming",
          "version": "1.0"
        },
        {
          "id": "search-inventory",
          "version": "1.0"
        },
        {
          "id": "search-facets",
          "version": "1.0"
        },
        {
          "id": "browse-config",
          "version": "1.0"
        },
        {
          "id": "consortium-search",
          "version": "2.1"
        },
        {
          "id": "settings",
          "version": "1.1"
        },
        {
          "id": "source-storage-records",
          "version": "3.3"
        },
        {
          "id": "statistical-code-types",
          "version": "1.0"
        },
        {
          "id": "statistical-codes",
          "version": "1.0"
        },
        {
          "id": "tags",
          "version": "1.0"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "acquisition-methods",
          "version": "1.0"
        },
        {
          "id": "consortia",
          "version": "1.0"
        },
        {
          "id": "copycat-imports",
          "version": "1.1"
        },
        {
          "id": "copycat-profiles",
          "version": "1.2"
        },
        {
          "id": "finance.transactions",
          "version": "6.0"
        },
        {
          "id": "remote-storage-mappings",
          "version": "1.0 2.0"
        },
        {
          "id": "acquisitions-units",
          "version": "1.1"
        },
        {
          "id": "orders",
          "version": "13.0"
        },
        {
          "id": "orders.holding-summary",
          "version": "1.0"
        },
        {
          "id": "order-lines",
          "version": "4.0"
        },
        {
          "id": "orders-storage.settings",
          "version": "1.0"
        },
        {
          "id": "organizations.organizations",
          "version": "1.0"
        },
        {
          "id": "pieces",
          "version": "3.0"
        },
        {
          "id": "titles",
          "version": "1.2"
        },
        {
          "id": "linked-data",
          "version": "2.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.inventory.enabled",
          "replaces": [],
          "displayName": "Inventory: Module is enabled",
          "subPermissions": [
            "search.index.indices.item.post",
            "search.index.mappings.item.post",
            "search.index.records.collection.post",
            "search.instances.collection.get",
            "search.config.languages.item.post",
            "search.config.languages.collection.get",
            "search.config.languages.item.delete",
            "search.index.inventory.reindex.post",
            "search.facets.collection.get",
            "consortium-search.holdings.collection.get",
            "consortium-search.items.collection.get"
          ]
        },
        {
          "permissionName": "ui-inventory.all",
          "replaces": [
            "ui-inventory.all-permissions.TEMPORARY"
          ],
          "displayName": "Inventory: All permissions",
          "description": "Some subperms to support enabling/using the Inventory app",
          "subPermissions": [
            "ui-plugin-create-inventory-records.create",
            "ui-inventory.instance.view",
            "ui-inventory.instance.create",
            "ui-inventory.holdings.create",
            "ui-inventory.item.create",
            "ui-inventory.instance.edit",
            "ui-inventory.item.edit",
            "ui-inventory.holdings.edit",
            "ui-inventory.item.mark-as-missing.execute",
            "ui-inventory.item.delete",
            "ui-inventory.holdings.delete",
            "browse.contributors.instances.collection.get",
            "inventory-storage.bound-with-parts.collection.get",
            "source-storage.records.matching.collection.post",
            "users.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.call-number-browse.view",
          "replaces": [],
          "displayName": "Call number browse: View permissions ",
          "description": "Enable call number browse feature",
          "subPermissions": [
            "ui-inventory.instance.view",
            "browse.call-numbers.instances.collection.get",
            "browse.authorities.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.subjects.view",
          "replaces": [],
          "displayName": "Subject browse: View permissions",
          "description": "Enable subject browse feature",
          "subPermissions": [
            "ui-inventory.instance.view",
            "browse.subjects.instances.collection.get",
            "browse.authorities.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "settings.inventory.enabled",
          "replaces": [],
          "displayName": "Settings (Inventory): Module is enabled.",
          "subPermissions": [
            "settings.enabled",
            "audit.config.groups.settings.audit.inventory.collection.get",
            "perms.users.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-inventory.settings.material-types",
          "replaces": [
            "ui-inventory.settings.materialtypes"
          ],
          "displayName": "Settings (Inventory): Create, edit, delete material types",
          "subPermissions": [
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.delete",
            "inventory-storage.material-types.item.get",
            "inventory-storage.material-types.item.post",
            "inventory-storage.material-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.loan-types",
          "replaces": [
            "ui-inventory.settings.loantypes"
          ],
          "displayName": "Settings (Inventory): Create, edit, delete loan types",
          "subPermissions": [
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.loan-types.item.delete",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.loan-types.item.post",
            "inventory-storage.loan-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.statistical-code-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete statistical code types",
          "subPermissions": [
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-code-types.item.delete",
            "inventory-storage.statistical-code-types.item.get",
            "inventory-storage.statistical-code-types.item.post",
            "inventory-storage.statistical-code-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.instance-formats",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete formats",
          "subPermissions": [
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-formats.item.delete",
            "inventory-storage.instance-formats.item.get",
            "inventory-storage.instance-formats.item.post",
            "inventory-storage.instance-formats.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.electronic-access-relationships",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete URL relationships",
          "subPermissions": [
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.electronic-access-relationships.item.delete",
            "inventory-storage.electronic-access-relationships.item.get",
            "inventory-storage.electronic-access-relationships.item.post",
            "inventory-storage.electronic-access-relationships.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.holdings-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete holdings types",
          "subPermissions": [
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings-types.item.delete",
            "inventory-storage.holdings-types.item.get",
            "inventory-storage.holdings-types.item.post",
            "inventory-storage.holdings-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.call-number-browse",
          "replaces": [],
          "displayName": "Settings (Inventory): Configure call number browse",
          "subPermissions": [
            "settings.inventory.enabled",
            "inventory-storage.call-number-types.collection.get",
            "browse.config.collection.get",
            "browse.config.item.put",
            "perms.users.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.classification-browse",
          "replaces": [],
          "displayName": "Settings (Inventory): Configure classification browse",
          "subPermissions": [
            "settings.inventory.enabled",
            "inventory-storage.classification-types.collection.get",
            "browse.config.collection.get",
            "browse.config.item.put",
            "perms.users.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.classification-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete classification identifier types",
          "subPermissions": [
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.classification-types.item.delete",
            "inventory-storage.classification-types.item.get",
            "inventory-storage.classification-types.item.post",
            "inventory-storage.classification-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.identifier-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete resource identifier types",
          "subPermissions": [
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.identifier-types.item.delete",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.identifier-types.item.post",
            "inventory-storage.identifier-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.subject-sources",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete subject sources",
          "subPermissions": [
            "inventory-storage.subject-sources.collection.get",
            "inventory-storage.subject-sources.item.get",
            "inventory-storage.subject-sources.item.post",
            "inventory-storage.subject-sources.item.put",
            "inventory-storage.subject-sources.item.delete",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.subject-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete subject types",
          "subPermissions": [
            "inventory-storage.subject-types.collection.get",
            "inventory-storage.subject-types.item.get",
            "inventory-storage.subject-types.item.post",
            "inventory-storage.subject-types.item.put",
            "inventory-storage.subject-types.item.delete",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.instance-statuses",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete instance status types",
          "subPermissions": [
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-statuses.item.delete",
            "inventory-storage.instance-statuses.item.get",
            "inventory-storage.instance-statuses.item.post",
            "inventory-storage.instance-statuses.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.statistical-codes",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete statistical codes",
          "subPermissions": [
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.statistical-codes.item.delete",
            "inventory-storage.statistical-codes.item.get",
            "inventory-storage.statistical-codes.item.post",
            "inventory-storage.statistical-codes.item.put",
            "settings.inventory.enabled",
            "inventory-storage.statistical-code-types.collection.get",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.alternative-title-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete alternative title types",
          "subPermissions": [
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.alternative-title-types.item.delete",
            "inventory-storage.alternative-title-types.item.get",
            "inventory-storage.alternative-title-types.item.post",
            "inventory-storage.alternative-title-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.instance-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete locally defined resource types",
          "subPermissions": [
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-types.item.delete",
            "inventory-storage.instance-types.item.get",
            "inventory-storage.instance-types.item.post",
            "inventory-storage.instance-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.nature-of-content-terms",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete nature of content",
          "subPermissions": [
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.nature-of-content-terms.item.delete",
            "inventory-storage.nature-of-content-terms.item.get",
            "inventory-storage.nature-of-content-terms.item.post",
            "inventory-storage.nature-of-content-terms.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.modes-of-issuance",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete locally defined modes of issuance",
          "subPermissions": [
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.modes-of-issuance.item.delete",
            "inventory-storage.modes-of-issuance.item.get",
            "inventory-storage.modes-of-issuance.item.post",
            "inventory-storage.modes-of-issuance.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.instance-note-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete instance note types",
          "subPermissions": [
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instance-note-types.item.delete",
            "inventory-storage.instance-note-types.item.get",
            "inventory-storage.instance-note-types.item.post",
            "inventory-storage.instance-note-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.ill-policies",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete ILL policies",
          "subPermissions": [
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.ill-policies.item.delete",
            "inventory-storage.ill-policies.item.get",
            "inventory-storage.ill-policies.item.post",
            "inventory-storage.ill-policies.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.contributor-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete contributor types",
          "subPermissions": [
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-types.item.delete",
            "inventory-storage.contributor-types.item.get",
            "inventory-storage.contributor-types.item.post",
            "inventory-storage.contributor-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.call-number-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete call number types",
          "subPermissions": [
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.call-number-types.item.delete",
            "inventory-storage.call-number-types.item.get",
            "inventory-storage.call-number-types.item.post",
            "inventory-storage.call-number-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.single-record-import",
          "replaces": [],
          "displayName": "Settings (Inventory): Configure single-record import",
          "subPermissions": [
            "settings.inventory.enabled",
            "copycat.profiles.collection.get",
            "copycat.profiles.item.get",
            "copycat.profiles.item.post",
            "copycat.profiles.item.put",
            "copycat.profiles.item.delete",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get",
            "inventory-storage.identifier-types.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.holdings-note-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete holdings note types",
          "subPermissions": [
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-note-types.item.delete",
            "inventory-storage.holdings-note-types.item.get",
            "inventory-storage.holdings-note-types.item.post",
            "inventory-storage.holdings-note-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.holdings-sources",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete holdings sources",
          "subPermissions": [
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.holdings-sources.item.delete",
            "inventory-storage.holdings-sources.item.get",
            "inventory-storage.holdings-sources.item.post",
            "inventory-storage.holdings-sources.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.item-note-types",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit, delete item note types",
          "subPermissions": [
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-note-types.item.delete",
            "inventory-storage.item-note-types.item.get",
            "inventory-storage.item-note-types.item.post",
            "inventory-storage.item-note-types.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.fast-add",
          "replaces": [],
          "displayName": "Settings (Inventory): Edit fast add settings",
          "subPermissions": [
            "inventory-storage.instance-statuses.collection.get",
            "configuration.entries.collection.get",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "settings.inventory.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.hrid-handling",
          "replaces": [],
          "displayName": "Settings (Inventory): Create, edit and delete HRID handling",
          "subPermissions": [
            "configuration.entries.collection.get",
            "inventory-storage.hrid-settings.item.get",
            "inventory-storage.hrid-settings.item.put",
            "settings.inventory.enabled",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "mod-settings.global.read.ui-inventory.number-generator-settings.manage",
          "replaces": [],
          "displayName": "Settings (Inventory): Read the settings in the 'Number generator' section",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "mod-settings.global.write.ui-inventory.number-generator-settings.manage",
          "replaces": [],
          "displayName": "Settings (Inventory): Write the settings in the 'Number generator' section",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "ui-inventory.settings.manage-number-generator-options",
          "replaces": [],
          "displayName": "Settings (Inventory): Manage number generator options",
          "subPermissions": [
            "settings.inventory.enabled",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.global.read.ui-inventory.number-generator-settings.manage",
            "mod-settings.global.write.ui-inventory.number-generator-settings.manage"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.instance.view",
          "replaces": [],
          "displayName": "Inventory: View instances, holdings, and items",
          "subPermissions": [
            "module.inventory.enabled",
            "users.collection.get",
            "tags.collection.get",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "circulation.loans.collection.get",
            "circulation.loans.collection.get",
            "circulation.requests.collection.get",
            "configuration.entries.collection.get",
            "inventory.config.instances.blocked-fields.get",
            "inventory.instances.collection.get",
            "inventory.instances.item.get",
            "inventory.items.collection.get",
            "inventory.items-by-holdings-id.collection.get",
            "inventory.items.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-name-types.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-relationship-types.collection.get",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.hrid-settings.item.get",
            "inventory-storage.record-bulk.ids.get",
            "inventory-storage.subject-sources.collection.get",
            "inventory-storage.subject-types.collection.get",
            "data-export.quick.export.post",
            "orders.holding-summary.collection.get",
            "orders.pieces.collection.get",
            "orders.po-lines.collection.get",
            "orders.po-lines.item.get",
            "orders.collection.get",
            "orders.item.get",
            "orders-storage.settings.collection.get",
            "orders.titles.collection.get",
            "organizations.organizations.item.get",
            "acquisitions-units.units.collection.get",
            "browse.call-numbers.instances.collection.get",
            "browse.contributors.instances.collection.get",
            "browse.subjects.instances.collection.get",
            "browse.classification-numbers.instances.collection.get",
            "perms.users.get",
            "inventory-storage.bound-with-parts.collection.get",
            "consortium-search.locations.collection.get",
            "browse.config.collection.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-inventory.display-settings.manage",
            "inventory-storage.instance-date-types.collection.get",
            "audit.inventory.instance.collection.get",
            "audit.inventory.holdings.collection.get",
            "audit.inventory.item.collection.get",
            "audit.marc.bib.collection.get",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.inventory.collection.get",
            "consortia.sharing-instances.collection.get",
            "search.resources.ids.collection.get",
            "search.resources.ids.jobs.get",
            "search.resources.ids.jobs.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.instance.create",
          "replaces": [],
          "displayName": "Inventory: View, create instances",
          "subPermissions": [
            "ui-inventory.instance.view",
            "inventory.instances.item.post",
            "inventory-storage.instances.item.post",
            "browse.contributors.instances.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.instance.edit",
          "replaces": [],
          "displayName": "Inventory: View, create, edit instances",
          "subPermissions": [
            "ui-inventory.instance.create",
            "inventory.instances.item.put",
            "inventory-storage.instances.item.put",
            "browse.contributors.instances.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.instance.order.create",
          "replaces": [
            "ui-inventory.instance.createOrder"
          ],
          "displayName": "Inventory: Create order from instance",
          "subPermissions": [
            "ui-inventory.instance.view",
            "acquisitions-units.memberships.collection.get",
            "acquisitions-units.units.collection.get",
            "data-export.config.collection.get",
            "finance.exchange-rate.item.get",
            "finance.expense-classes.collection.get",
            "finance.funds.collection.get",
            "finance.funds.expense-classes.collection.get",
            "isbn-utils.convert-to-13.get",
            "isbn-utils.validator.get",
            "orders.acquisition-methods.collection.get",
            "orders.configuration.prefixes.collection.get",
            "orders.configuration.reasons-for-closure.collection.get",
            "orders.configuration.suffixes.collection.get",
            "orders.item.get",
            "orders.item.post",
            "orders.item.put",
            "orders.order-templates.collection.get",
            "orders.order-templates.item.get",
            "orders.po-lines.item.post",
            "orders.po-number.item.get",
            "orders.po-number.item.post",
            "organizations.organizations.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.item.create",
          "replaces": [],
          "displayName": "Inventory: View, create items",
          "subPermissions": [
            "ui-inventory.instance.view",
            "inventory.items.item.post",
            "inventory.instances.item.put",
            "inventory-storage.instances.item.put",
            "inventory-storage.bound-with-parts.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.item.edit",
          "replaces": [],
          "displayName": "Inventory: View, create, edit items",
          "subPermissions": [
            "ui-inventory.item.create",
            "inventory.items.item.put",
            "inventory-storage.bound-with-parts.item.delete",
            "inventory-storage.bound-withs.collection.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.item.move",
          "replaces": [],
          "displayName": "Inventory: Move items",
          "subPermissions": [
            "ui-inventory.item.create",
            "inventory.items.move.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.item.mark-as-missing.execute",
          "replaces": [
            "ui-inventory.item.markasmissing"
          ],
          "displayName": "Inventory: View, create, edit, mark missing items",
          "subPermissions": [
            "ui-inventory.item.edit",
            "inventory.items.item.mark-missing.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.item.delete",
          "replaces": [],
          "displayName": "Inventory: View, create, edit, delete items",
          "subPermissions": [
            "ui-inventory.item.edit",
            "inventory.items.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.holdings.create",
          "replaces": [],
          "displayName": "Inventory: View, create holdings",
          "subPermissions": [
            "ui-inventory.instance.view",
            "inventory-storage.holdings.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.holdings.edit",
          "replaces": [],
          "displayName": "Inventory: View, create, edit holdings",
          "subPermissions": [
            "ui-inventory.holdings.create",
            "inventory-storage.holdings.item.put",
            "inventory.config.holdings.blocked-fields.get",
            "inventory.holdings.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.holdings.move",
          "replaces": [],
          "displayName": "Inventory: Move holdings",
          "subPermissions": [
            "ui-inventory.instance.edit",
            "ui-inventory.holdings.create",
            "inventory.holdings.move.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.holdings.delete",
          "replaces": [],
          "displayName": "Inventory: View, create, edit, delete holdings",
          "subPermissions": [
            "ui-inventory.holdings.edit",
            "inventory-storage.holdings.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.instance.staff-suppressed-records.view",
          "replaces": [
            "ui-inventory.instance.view-staff-suppressed-records"
          ],
          "displayName": "Inventory: Enable staff suppress facet",
          "subPermissions": [
            "ui-inventory.instance.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.instance.set-records-for-deletion.execute",
          "replaces": [
            "ui-inventory.instance.set-deletion-and-staff-suppress"
          ],
          "displayName": "Inventory: Set records for deletion",
          "subPermissions": [
            "ui-inventory.instance.view",
            "source-storage.records.update"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.settings.list.view",
          "replaces": [],
          "displayName": "Settings (Inventory): View list of settings pages",
          "subPermissions": [
            "settings.inventory.enabled",
            "users.collection.get",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.material-types.item.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.loan-types.item.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-code-types.item.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-formats.item.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.electronic-access-relationships.item.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings-types.item.get",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.classification-types.item.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.identifier-types.item.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-statuses.item.get",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.statistical-codes.item.get",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.alternative-title-types.item.get",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-types.item.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.nature-of-content-terms.item.get",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.modes-of-issuance.item.get",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instance-note-types.item.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.ill-policies.item.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-types.item.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.call-number-types.item.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-note-types.item.get",
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.holdings-sources.item.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-note-types.item.get",
            "inventory-storage.hrid-settings.item.get",
            "configuration.entries.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.mark-withdrawn.execute",
          "replaces": [
            "ui-inventory.items.mark-items-withdrawn"
          ],
          "displayName": "Inventory: Mark items withdrawn",
          "subPermissions": [
            "inventory.items.item.mark-withdrawn.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.mark-intellectual-item.execute",
          "replaces": [
            "ui-inventory.items.mark-intellectual-item"
          ],
          "displayName": "Inventory: Mark items intellectual item",
          "subPermissions": [
            "inventory.items.item.mark-intellectual-item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.mark-restricted.execute",
          "replaces": [
            "ui-inventory.items.mark-restricted"
          ],
          "displayName": "Inventory: Mark items restricted",
          "subPermissions": [
            "inventory.items.item.mark-restricted.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.mark-unknown.execute",
          "replaces": [
            "ui-inventory.items.mark-unknown"
          ],
          "displayName": "Inventory: Mark items unknown",
          "subPermissions": [
            "inventory.items.item.mark-unknown.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.mark-unavailable.execute",
          "replaces": [
            "ui-inventory.items.mark-unavailable"
          ],
          "displayName": "Inventory: Mark items unavailable",
          "subPermissions": [
            "inventory.items.item.mark-unavailable.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.mark-long-missing.execute",
          "replaces": [
            "ui-inventory.items.mark-long-missing"
          ],
          "displayName": "Inventory: Mark items long missing",
          "subPermissions": [
            "inventory.items.item.mark-long-missing.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.mark-in-process-non-requestable.execute",
          "replaces": [
            "ui-inventory.items.mark-in-process-non-requestable"
          ],
          "displayName": "Inventory: Mark items in process (non-requestable)",
          "subPermissions": [
            "inventory.items.item.mark-in-process-non-requestable.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.mark-in-process.execute",
          "replaces": [
            "ui-inventory.items.mark-in-process"
          ],
          "displayName": "Inventory: Mark items in process",
          "subPermissions": [
            "inventory.items.item.mark-in-process.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.items.in-transit-report.create",
          "replaces": [
            "ui-inventory.items.create-in-transit-report"
          ],
          "displayName": "Inventory: Create and download In transit items report",
          "subPermissions": [
            "circulation.inventory.items-in-transit-report.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-inventory.single-record-import",
          "replaces": [],
          "displayName": "Inventory: Import single bibliographic records",
          "subPermissions": [
            "ui-inventory.instance.view",
            "copycat.profiles.collection.get",
            "copycat.imports.post",
            "converter-storage.jobprofile.item.get",
            "converter-storage.jobprofile.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "mod-settings.global.read.ui-inventory.display-settings.manage",
          "replaces": [],
          "displayName": "Settings (Inventory): read the settings in the 'Display settings' section",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "mod-settings.global.write.ui-inventory.display-settings.manage",
          "replaces": [],
          "displayName": "Settings (Inventory): write the settings in the 'Display settings' section",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "ui-inventory.settings.displaySettings",
          "replaces": [],
          "displayName": "Settings (Inventory): Can view and edit general settings",
          "subPermissions": [
            "settings.inventory.enabled",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.global.read.ui-inventory.display-settings.manage",
            "mod-settings.global.write.ui-inventory.display-settings.manage",
            "audit.config.groups.collection.get",
            "audit.config.groups.settings.audit.inventory.collection.get",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.item.put",
            "audit.config.groups.settings.audit.inventory.records.page.size.item.put"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Inventory manager"
    },
    {
      "id": "folio_marc-authorities-8.0.1099000000001046",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "search-authorities",
          "version": "1.0"
        },
        {
          "id": "search-facets",
          "version": "1.0"
        },
        {
          "id": "browse-authorities",
          "version": "1.0"
        },
        {
          "id": "source-storage-records",
          "version": "3.3"
        },
        {
          "id": "marc-records-editor",
          "version": "6.0"
        },
        {
          "id": "audit-config",
          "version": "1.0"
        },
        {
          "id": "audit-marc",
          "version": "1.0"
        },
        {
          "id": "resource-ids-streaming",
          "version": "1.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.marc-authorities.enabled",
          "replaces": [],
          "displayName": "UI: MARC Authorities module is enabled",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "ui-marc-authorities.authority-record.view",
          "replaces": [],
          "displayName": "MARC Authority: View MARC authority record",
          "subPermissions": [
            "module.marc-authorities.enabled",
            "browse.authorities.collection.get",
            "marc-records-editor.item.get",
            "marc-records-editor.links.suggestion.post",
            "search.authorities.collection.get",
            "search.facets.collection.get",
            "source-storage.records.collection.get",
            "source-storage.records.item.get",
            "source-storage.records.formatted.item.get",
            "source-storage.stream.records.collection.get",
            "inventory-storage.authorities.item.get",
            "data-export.quick.export.post",
            "instance-authority.linking-rules.collection.get",
            "instance-authority-links.authority-statistics.collection.get",
            "instance-authority-links.instance-statistics.collection.get",
            "inventory-storage.authorities.collection.get",
            "inventory-storage.authority-source-files.collection.get",
            "inventory-storage.authority-source-files.item.get",
            "perms.users.get",
            "mapping-rules.get",
            "audit.marc.authority.collection.get",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.authority.collection.get",
            "users.collection.get",
            "search.resources.ids.collection.get",
            "search.resources.ids.jobs.get",
            "search.resources.ids.jobs.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-marc-authorities.authority-record.create",
          "replaces": [],
          "displayName": "MARC Authority: Create new MARC authority record",
          "subPermissions": [
            "ui-marc-authorities.authority-record.view",
            "inventory-storage.authority-source-files.hrid.post",
            "marc-records-editor.item.post",
            "instance-authority-links.instances.collection.post",
            "instance-authority-links.authorities.bulk.post",
            "marc-records-editor.status.item.get",
            "marc-specifications.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-marc-authorities.authority-record.edit",
          "replaces": [],
          "displayName": "MARC Authority: Edit MARC authority record",
          "subPermissions": [
            "ui-marc-authorities.authority-record.view",
            "marc-records-editor.item.put",
            "instance-authority-links.authorities.bulk.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-marc-authorities.authority-record.delete",
          "replaces": [],
          "displayName": "MARC Authority: Delete MARC authority record",
          "subPermissions": [
            "inventory-storage.authorities.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "settings.marc-authorities.enabled",
          "replaces": [],
          "displayName": "Settings (MARC authority): Module is enabled.",
          "subPermissions": [
            "settings.enabled",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.authority.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-marc-authorities.settings.authority-files.view",
          "replaces": [],
          "displayName": "Settings (MARC authority): View authority files",
          "subPermissions": [
            "settings.marc-authorities.enabled",
            "inventory-storage.authority-source-files.collection.get",
            "inventory-storage.authority-source-files.item.get",
            "perms.users.get",
            "users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-marc-authorities.settings.authority-files.all",
          "replaces": [],
          "displayName": "Settings (MARC authority): View, create, edit, delete authority files",
          "subPermissions": [
            "settings.marc-authorities.enabled",
            "ui-marc-authorities.settings.authority-files.view",
            "inventory-storage.authority-source-files.item.post",
            "inventory-storage.authority-source-files.item.put",
            "inventory-storage.authority-source-files.item.patch",
            "inventory-storage.authority-source-files.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-marc-authorities.settings.version-history",
          "replaces": [],
          "displayName": "Settings (MARC authority): Configure version history",
          "subPermissions": [
            "settings.marc-authorities.enabled",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.authority.collection.get",
            "audit.config.groups.settings.item.put",
            "audit.config.groups.settings.audit.authority.records.page.size.item.put"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "MARC Authorities module"
    },
    {
      "id": "folio_myprofile-11.0.109900000000131",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "settings",
          "version": "1.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.myprofile.enabled",
          "replaces": [],
          "displayName": "UI: My-profile module is enabled",
          "subPermissions": []
        },
        {
          "permissionName": "settings.myprofile.enabled",
          "replaces": [],
          "displayName": "Settings (My profile): display list of settings pages",
          "subPermissions": [
            "settings.enabled",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.owner.read.stripes-core.prefs.manage",
            "mod-settings.owner.write.stripes-core.prefs.manage",
            "mod-settings.global.read.stripes-core.prefs.manage"
          ]
        },
        {
          "permissionName": "ui-myprofile.settings.change-password",
          "replaces": [],
          "displayName": "Settings (My profile): Can change your local password",
          "description": "Some subperms can be deleted later when submodules use modern permission names",
          "subPermissions": [
            "settings.myprofile.enabled",
            "users.collection.get",
            "users-bl.item.get",
            "users.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-myprofile.settings.main-nav-order.manage",
          "replaces": [],
          "displayName": "Settings (My profile): Can change application order in main navigation",
          "subPermissions": [
            "settings.myprofile.enabled",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.entries.item.delete",
            "mod-settings.owner.read.stripes-core.prefs.manage",
            "mod-settings.owner.write.stripes-core.prefs.manage"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "My profile"
    },
    {
      "id": "folio_plugin-bursar-export-5.0.109900000000220",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "users",
          "version": "15.0 16.0"
        },
        {
          "id": "feesfines",
          "version": "16.0 17.0 18.0 19.0"
        },
        {
          "id": "data-export-spring",
          "version": "2.0"
        },
        {
          "id": "service-points",
          "version": "3.0"
        },
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "ui-plugin-bursar-export.bursar-exports.all",
          "replaces": [],
          "displayName": "Transfer exports: Modify configuration and start jobs",
          "subPermissions": [
            "ui-plugin-bursar-export.bursar-exports.manual",
            "data-export.config.item.post",
            "data-export.config.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-plugin-bursar-export.bursar-exports.manual",
          "replaces": [],
          "displayName": "Transfer exports: Start manual jobs",
          "subPermissions": [
            "ui-plugin-bursar-export.bursar-exports.view",
            "data-export.job.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-plugin-bursar-export.bursar-exports.view",
          "replaces": [],
          "displayName": "Transfer exports: View configuration",
          "subPermissions": [
            "settings.tenant-settings.enabled",
            "usergroups.collection.get",
            "owners.collection.get",
            "transfers.collection.get",
            "feefines.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.locations.collection.get",
            "data-export.config.collection.get"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Bursar export"
    },
    {
      "id": "folio_plugin-create-inventory-records-7.0.10990000000087",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "inventory",
          "version": "10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "source-storage-records",
          "version": "2.0 3.0"
        },
        {
          "id": "instance-storage",
          "version": "7.0 8.0 9.0 10.0 11.0"
        },
        {
          "id": "holdings-storage",
          "version": "3.0 4.0 5.0 6.0 7.0 8.0"
        },
        {
          "id": "item-storage",
          "version": "8.0 9.0 10.0 11.0"
        },
        {
          "id": "loan-types",
          "version": "2.0"
        },
        {
          "id": "material-types",
          "version": "2.0"
        },
        {
          "id": "item-note-types",
          "version": "1.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "identifier-types",
          "version": "1.1"
        },
        {
          "id": "contributor-types",
          "version": "2.0"
        },
        {
          "id": "contributor-name-types",
          "version": "1.2"
        },
        {
          "id": "instance-types",
          "version": "2.0"
        },
        {
          "id": "nature-of-content-terms",
          "version": "1.0"
        },
        {
          "id": "instance-formats",
          "version": "2.0"
        },
        {
          "id": "classification-types",
          "version": "1.1"
        },
        {
          "id": "statistical-code-types",
          "version": "1.0"
        },
        {
          "id": "statistical-codes",
          "version": "1.0"
        },
        {
          "id": "modes-of-issuance",
          "version": "1.0"
        },
        {
          "id": "instance-statuses",
          "version": "1.0"
        },
        {
          "id": "instance-relationship-types",
          "version": "1.0"
        },
        {
          "id": "instance-note-types",
          "version": "1.0"
        },
        {
          "id": "alternative-title-types",
          "version": "1.0"
        },
        {
          "id": "holdings-types",
          "version": "1.0"
        },
        {
          "id": "call-number-types",
          "version": "1.0"
        },
        {
          "id": "electronic-access-relationships",
          "version": "1.0"
        },
        {
          "id": "ill-policies",
          "version": "1.0"
        },
        {
          "id": "holdings-note-types",
          "version": "1.0"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        },
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "settings",
          "version": "1.1"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.ui-plugin-create-inventory-records.enabled",
          "replaces": [],
          "displayName": "UI: create-inventory-records plugin is enabled",
          "subPermissions": []
        },
        {
          "permissionName": "ui-plugin-create-inventory-records.create",
          "replaces": [],
          "displayName": "Fast add: Create",
          "subPermissions": [
            "inventory.instances.item.post",
            "inventory-storage.instances.item.post",
            "inventory.items.item.post",
            "inventory-storage.holdings.item.post",
            "configuration.entries.collection.get",
            "inventory.config.instances.blocked-fields.get",
            "inventory.instances.collection.get",
            "inventory.instances.item.get",
            "inventory.items.collection.get",
            "inventory.items.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.contributor-name-types.collection.get",
            "inventory-storage.call-number-types.collection.get",
            "inventory-storage.item-note-types.collection.get",
            "inventory-storage.item-damaged-statuses.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.classification-types.collection.get",
            "inventory-storage.alternative-title-types.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.instance-relationship-types.collection.get",
            "inventory-storage.instance-note-types.collection.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.electronic-access-relationships.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.ill-policies.collection.get",
            "inventory-storage.holdings-note-types.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.loan-types.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.hrid-settings.item.get",
            "inventory-storage.record-bulk.ids.get",
            "mod-settings.global.read.ui-inventory.number-generator-settings.manage"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Create inventory records for Stripes"
    },
    {
      "id": "folio_plugin-find-authority-5.1.10990000000088",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.ui-plugin-find-authority.enabled",
          "replaces": [],
          "displayName": "UI: find authorities plugin is enabled",
          "subPermissions": []
        }
      ],
      "env": [],
      "name": "Stripes plugin to find authorities"
    },
    {
      "id": "folio_plugin-find-import-profile-9.0.10990000000053",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "data-import",
          "version": "3.2"
        },
        {
          "id": "source-manager-job-executions",
          "version": "3.4"
        },
        {
          "id": "data-import-converter-storage",
          "version": "1.5"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [],
      "env": [],
      "name": "Find and select Data Import Profiles plugin for Stripes"
    },
    {
      "id": "folio_plugin-find-instance-9.1.109900000000101",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "contributor-types",
          "version": "2.0"
        },
        {
          "id": "instance-types",
          "version": "2.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "search-inventory",
          "version": "1.0"
        },
        {
          "id": "search-facets",
          "version": "1.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [],
      "env": [],
      "name": "Instance-finder for Stripes"
    },
    {
      "id": "folio_plugin-find-package-title-7.0.10990000000063",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.ui-plugin-find-package-title.enabled",
          "replaces": [],
          "displayName": "UI: find packages and titles plugin is enabled",
          "subPermissions": []
        }
      ],
      "env": [],
      "name": "Stripes plugin to find packages and titles"
    },
    {
      "id": "folio_plugin-find-user-8.0.10990000000086",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.ui-plugin-find-user.enabled",
          "replaces": [],
          "displayName": "UI: find-user plugin is enabled",
          "subPermissions": []
        }
      ],
      "env": [],
      "name": "User-finder for Stripes"
    },
    {
      "id": "folio_quick-marc-10.1.109900000000372",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "inventory",
          "version": "14.0"
        },
        {
          "id": "marc-records-editor",
          "version": "6.0"
        },
        {
          "id": "search-authorities",
          "version": "1.0"
        },
        {
          "id": "marc-specifications",
          "version": "1.0"
        },
        {
          "id": "authority-source-files",
          "version": "2.0"
        },
        {
          "id": "instance-authority-links",
          "version": "2.1"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "ui-quick-marc.quick-marc-editor.view",
          "replaces": [],
          "displayName": "quickMARC: View MARC bibliographic record",
          "subPermissions": [
            "marc-records-editor.item.get",
            "inventory.instances.item.get",
            "instance-authority-links.instances.collection.get",
            "instance-authority.linking-rules.collection.get",
            "audit.config.groups.settings.collection.get",
            "audit.config.groups.settings.audit.inventory.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-editor.create",
          "replaces": [],
          "displayName": "quickMARC: Create a new MARC bibliographic record",
          "subPermissions": [
            "ui-quick-marc.quick-marc-editor.view",
            "marc-records-editor.item.put",
            "marc-records-editor.item.post",
            "marc-records-editor.links.suggestion.post",
            "instance-authority-links.instances.collection.post",
            "marc-records-editor.status.item.get",
            "marc-specifications.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-editor.all",
          "replaces": [],
          "displayName": "quickMARC: View, edit MARC bibliographic record",
          "subPermissions": [
            "ui-quick-marc.quick-marc-editor.view",
            "perms.users.get",
            "marc-records-editor.item.put",
            "marc-records-editor.links.suggestion.post",
            "instance-authority-links.instances.collection.put",
            "marc-specifications.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-holdings-editor.view",
          "replaces": [],
          "displayName": "quickMARC: View MARC holdings record",
          "subPermissions": [
            "marc-records-editor.item.get",
            "inventory.instances.item.get",
            "instance-authority.linking-rules.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-holdings-editor.all",
          "replaces": [],
          "displayName": "quickMARC: View, edit MARC holdings record",
          "subPermissions": [
            "ui-quick-marc.quick-marc-holdings-editor.view",
            "marc-records-editor.item.put",
            "marc-specifications.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-holdings-editor.create",
          "replaces": [],
          "displayName": "quickMARC: Create a new MARC holdings record",
          "subPermissions": [
            "ui-quick-marc.quick-marc-holdings-editor.view",
            "marc-records-editor.status.item.get",
            "marc-records-editor.item.post",
            "marc-specifications.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-editor.derive.execute",
          "replaces": [
            "ui-quick-marc.quick-marc-editor.duplicate"
          ],
          "displayName": "quickMARC: Derive new MARC bibliographic record",
          "subPermissions": [
            "ui-quick-marc.quick-marc-editor.view",
            "marc-records-editor.status.item.get",
            "marc-records-editor.item.put",
            "marc-records-editor.item.post",
            "marc-records-editor.links.suggestion.post",
            "instance-authority-links.instances.collection.put",
            "marc-specifications.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-authorities-editor.create",
          "replaces": [],
          "displayName": "quickMARC: Create a new MARC authority record",
          "subPermissions": [
            "ui-marc-authorities.authority-record.view",
            "inventory-storage.authority-source-files.hrid.post",
            "marc-records-editor.item.post",
            "instance-authority-links.instances.collection.post",
            "instance-authority-links.authorities.bulk.post",
            "marc-records-editor.status.item.get",
            "marc-specifications.item.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-authorities-editor.all",
          "replaces": [],
          "displayName": "quickMARC: View, edit MARC authorities record",
          "subPermissions": [
            "marc-records-editor.item.get",
            "marc-records-editor.item.put",
            "inventory-storage.locations.collection.get",
            "marc-specifications.item.get",
            "search.authorities.collection.get",
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "marc-records-editor.validate.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.quick-marc-authority-records.link-unlink.execute",
          "replaces": [
            "ui-quick-marc.quick-marc-authority-records.linkUnlink"
          ],
          "displayName": "quickMARC: Can Link/unlink authority records to bib records",
          "subPermissions": [
            "instance-authority.linking-rules.collection.get",
            "inventory-storage.authority-source-files.collection.get",
            "marc-records-editor.links.suggestion.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-quick-marc.settings.lccn-duplicate-check.edit",
          "replaces": [],
          "displayName": "Edit, View: Enable duplicate LCCN (010 $a) checking of MARC bibliographic and authority records",
          "subPermissions": [
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.global.write.ui-quick-marc.lccn-duplicate-check.manage"
          ],
          "visible": false
        },
        {
          "permissionName": "mod-settings.global.read.ui-quick-marc.lccn-duplicate-check.manage",
          "replaces": [],
          "displayName": "Settings (MARC): read LCCN duplicate check settings",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "mod-settings.global.write.ui-quick-marc.lccn-duplicate-check.manage",
          "replaces": [],
          "displayName": "Settings (MARC): write LCCN duplicate check settings",
          "subPermissions": [],
          "visible": false
        }
      ],
      "env": [],
      "name": "Quick MARC editor"
    },
    {
      "id": "folio_remote-storage-7.0.10990000000057",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "remote-storage-configurations",
          "version": "1.1"
        },
        {
          "id": "remote-storage-mappings",
          "version": "1.0"
        },
        {
          "id": "remote-storage-extended-mappings",
          "version": "1.0"
        },
        {
          "id": "remote-storage-providers",
          "version": "1.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "settings.remote-storage.enabled",
          "replaces": [],
          "displayName": "Settings (Remote storages): Module is enabled.",
          "subPermissions": [
            "settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-remote-storage.settings.remote-storages.view",
          "replaces": [],
          "displayName": "Remote storage: View",
          "subPermissions": [
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "remote-storage.configurations.collection.get",
            "remote-storage.configurations.item.get",
            "remote-storage.mappings.item.get",
            "remote-storage.mappings.collection.get",
            "remote-storage.extended-mappings.collection.get",
            "remote-storage.extended-mappings.item.get",
            "remote-storage.extended-mappings-locations.collection.get",
            "remote-storage.providers.collection.get",
            "settings.remote-storage.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-remote-storage.settings.remote-storages.edit",
          "replaces": [],
          "displayName": "Remote storage: Create, edit, delete",
          "subPermissions": [
            "ui-remote-storage.settings.remote-storages.view",
            "remote-storage.configurations.item.post",
            "remote-storage.configurations.item.put",
            "remote-storage.configurations.item.delete",
            "remote-storage.mappings.item.post",
            "remote-storage.mappings.item.delete",
            "remote-storage.extended-mappings.item.post",
            "remote-storage.extended-mappings.item.delete"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Description for remote storage"
    },
    {
      "id": "folio_requests-13.0.109900000000303",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "cancellation-reason-storage",
          "version": "1.1"
        },
        {
          "id": "circulation",
          "version": "14.2"
        },
        {
          "id": "inventory",
          "version": "10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "request-storage",
          "version": "6.0"
        },
        {
          "id": "pick-slips",
          "version": "0.1"
        },
        {
          "id": "search-slips",
          "version": "0.1"
        },
        {
          "id": "automated-patron-blocks",
          "version": "0.1"
        },
        {
          "id": "loan-policy-storage",
          "version": "2.3"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "circulation-bff-loans",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.requests.enabled",
          "replaces": [],
          "displayName": "UI: Requests module is enabled",
          "subPermissions": []
        },
        {
          "permissionName": "ui-requests.moveRequest.execute",
          "replaces": [
            "ui-requests.moveRequest"
          ],
          "displayName": "Requests: Move to new item, reorder queue",
          "subPermissions": [
            "circulation.requests.item.move.post",
            "circulation.rules.request-policy.get",
            "ui-requests.reorderQueue.execute"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-requests.reorderQueue.execute",
          "replaces": [
            "ui-requests.reorderQueue"
          ],
          "displayName": "Requests: Reorder queue",
          "subPermissions": [
            "circulation.requests.queue-item.collection.get",
            "circulation.requests.queue-instance.collection.get",
            "circulation.requests.queue.item-reorder.collection.post",
            "circulation.requests.queue.instance-reorder.collection.post",
            "circulation.requests.allowed-service-points.get",
            "circulation-bff.requests.allowed-service-points.get",
            "circulation.rules.request-policy.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-requests.all",
          "replaces": [],
          "displayName": "Requests: All permissions",
          "description": "All permissions for the Requests app",
          "subPermissions": [
            "ui-requests.view",
            "ui-requests.create",
            "ui-requests.edit",
            "ui-requests.moveRequest.execute",
            "ui-requests.reorderQueue.execute"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-requests.view",
          "replaces": [],
          "displayName": "Requests: View",
          "subPermissions": [
            "module.requests.enabled",
            "circulation.loans.collection.get",
            "circulation.settings.item.get",
            "circulation.requests.collection.get",
            "circulation.requests.item.get",
            "circulation-storage.cancellation-reasons.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.item.get",
            "users.collection.get",
            "users.item.get",
            "proxiesfor.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "addresstypes.collection.get",
            "usergroups.collection.get",
            "configuration.entries.collection.get",
            "inventory.items.collection.get",
            "inventory.items.item.get",
            "inventory.instances.item.get",
            "inventory.instances.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.locations.collection.get",
            "manualblocks.collection.get",
            "circulation.requests.hold-shelf-clearance-report.get",
            "circulation.settings.collection.get",
            "tlr.settings.get",
            "mod-settings.global.read.circulation",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "circulation.search-slips.get",
            "circulation.pick-slips.get",
            "circulation-bff.search-slips.collection.get",
            "circulation-bff.pick-slips.collection.get",
            "circulation-storage.staff-slips.collection.get",
            "tags.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation.print-events-entry.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-requests.create",
          "replaces": [],
          "displayName": "Requests: View, create",
          "subPermissions": [
            "ui-requests.view",
            "automated-patron-blocks.collection.get",
            "patron-blocks.automated-patron-blocks.collection.get",
            "circulation.requests.item.post",
            "circulation.requests.allowed-service-points.get",
            "circulation-bff.requests.allowed-service-points.get",
            "circulation-storage.requests.item.post",
            "circulation-storage.request-preferences.collection.get",
            "inventory-storage.locations.item.get",
            "circulation-bff.requests.search-instances.get",
            "circulation-bff.requests.post",
            "consortium-search.locations.collection.get",
            "search.instances.collection.get",
            "search.facets.collection.get",
            "inventory-storage.material-types.collection.get",
            "inventory-storage.nature-of-content-terms.collection.get",
            "inventory-storage.holdings-types.collection.get",
            "inventory-storage.modes-of-issuance.collection.get",
            "inventory-storage.instance-statuses.collection.get",
            "inventory-storage.statistical-code-types.collection.get",
            "inventory-storage.instance-formats.collection.get",
            "inventory-storage.statistical-codes.collection.get",
            "inventory-storage.instance-types.collection.get",
            "inventory-storage.holdings-sources.collection.get",
            "inventory-storage.instance-date-types.collection.get",
            "inventory-storage.contributor-types.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-requests.edit",
          "replaces": [],
          "displayName": "Requests: View, edit, cancel",
          "subPermissions": [
            "ui-requests.view",
            "circulation.requests.item.put",
            "circulation.requests.allowed-service-points.get",
            "circulation-bff.requests.allowed-service-points.get",
            "circulation-storage.requests.collection.delete",
            "circulation-storage.requests.item.put",
            "circulation-storage.requests.item.delete",
            "circulation-storage.request-preferences.collection.get",
            "tags.item.post"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Requests manager"
    },
    {
      "id": "folio_serials-management-2.1.109900000000813",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "serials-management",
          "version": "1.0 2.0"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "orders",
          "version": "12.1 13.0"
        },
        {
          "id": "order-lines",
          "version": "3.0 4.0"
        },
        {
          "id": "organizations",
          "version": "2.0"
        },
        {
          "id": "material-types",
          "version": "2.2"
        },
        {
          "id": "pieces",
          "version": "3.0"
        },
        {
          "id": "acquisitions-units",
          "version": "1.1"
        },
        {
          "id": "holdings-storage",
          "version": "6.0 7.0 8.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "titles",
          "version": "1.2"
        },
        {
          "id": "identifier-types",
          "version": "1.2"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.serials-management.enabled",
          "replaces": [],
          "displayName": "UI: ui-serials-management module is enabled",
          "subPermissions": [
            "serials-management.refdata.read",
            "serials-management.locales.collection.get"
          ]
        },
        {
          "permissionName": "settings.serials-management.enabled",
          "replaces": [],
          "displayName": "Settings (serials-management): display list of settings pages",
          "subPermissions": [
            "settings.enabled"
          ]
        },
        {
          "permissionName": "ui-serials-management.serials.view",
          "replaces": [],
          "displayName": "Serials: Search & view serials",
          "description": "A user with this permission can search and view existing serials. This includes the permission to see and access the Serials app in the Folio interface and permission to view publication patterns.",
          "subPermissions": [
            "module.serials-management.enabled",
            "serials-management.serials.view",
            "serials-management.rulesets.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.serials.edit",
          "replaces": [],
          "displayName": "Serials: Edit serials",
          "description": "Grants all permissions included in Serials: Search & view serials plus the ability to edit serials. It does not include the ability to create Publication patterns.",
          "subPermissions": [
            "ui-serials-management.serials.view",
            "serials-management.serials.edit"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.serials.manage",
          "replaces": [],
          "displayName": "Serials: Manage serials",
          "description": "Grants all permissions included in Serials: Edit serials plus the ability to delete serials.",
          "subPermissions": [
            "ui-serials-management.serials.edit",
            "serials-management.serials.manage"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.rulesets.edit",
          "replaces": [],
          "displayName": "Serials: Edit publication patterns",
          "description": "Grants all permissions included in Serials: Edit serials plus the ability to create publication patterns.",
          "subPermissions": [
            "ui-serials-management.serials.edit",
            "serials-management.rulesets.edit",
            "serials-management.modelRulesets.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.modelrulesets.manage",
          "replaces": [],
          "displayName": "Serials: Manage publication pattern templates",
          "description": "Grants permissions to create and delete publication pattern templates.",
          "subPermissions": [
            "serials-management.modelRulesets.manage"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.predictedpieces.view",
          "replaces": [],
          "displayName": "Serials: Search & view predicted pieces",
          "description": "Grants all permissions included in Serials: Search & view serials plus the ability to search and view predicted pieces.",
          "subPermissions": [
            "ui-serials-management.serials.view",
            "serials-management.predictedPieceSets.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.predictedpieces.edit",
          "replaces": [],
          "displayName": "Serials: Create predicted pieces",
          "description": "Grants all permissions included in Serials: Search & view predicted pieces plus the ability to creatre predicted pieces based on publication patterns.",
          "subPermissions": [
            "ui-serials-management.predictedpieces.view",
            "serials-management.predictedPieceSets.edit"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.predictedpieces.delete",
          "replaces": [],
          "displayName": "Serials: Delete predicted pieces",
          "description": "Grants all permissions included in Serials: Search & view predicted pieces plus the ability to delete predicted pieces that are not linked to receiving pieces.",
          "subPermissions": [
            "ui-serials-management.predictedpieces.view",
            "serials-management.predictedPieceSets.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.picklists.view",
          "replaces": [],
          "displayName": "Settings (Serials): View pick lists and values",
          "description": "A user with this permission can access the settings for the Serials app and view pick lists and pick list values.",
          "subPermissions": [
            "settings.serials-management.enabled",
            "serials-management.refdata.read"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-serials-management.picklists.manage",
          "replaces": [],
          "displayName": "Settings (Serials): Manage pick lists and values",
          "description": "Grants all permissions included in 'Settings (Serials): View pick lists and values' plus the ability to manage pick lists and pick list values.",
          "subPermissions": [
            "ui-serials-management.picklists.view",
            "serials-management.refdata.manage",
            "settings.configuration.manage"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "FOLIO app for serials-management"
    },
    {
      "id": "folio_servicepoints-8.0.10990000000041",
      "replaces": [],
      "tags": [],
      "requires": [],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [],
      "env": [],
      "name": "Service Points handler for Stripes"
    },
    {
      "id": "folio_stripes-authority-components-6.1.109900000000143",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "search-authorities",
          "version": "1.0"
        },
        {
          "id": "search-facets",
          "version": "1.0"
        },
        {
          "id": "browse-authorities",
          "version": "1.0"
        },
        {
          "id": "authority-source-files",
          "version": "2.0"
        },
        {
          "id": "source-storage-records",
          "version": "3.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [],
      "env": [],
      "name": "Component library for Stripes Authority modules"
    },
    {
      "id": "folio_stripes-inventory-components-2.1.109000000764",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "instance-date-types",
          "version": "1.0"
        },
        {
          "id": "settings",
          "version": "1.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [],
      "env": [],
      "name": "Shared components for inventory-related modules"
    },
    {
      "id": "folio_stripes-marc-components-2.0.109900000000173",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "instance-authority-linking-rules",
          "version": "1.1"
        },
        {
          "id": "audit-marc",
          "version": "1.0"
        }
      ],
      "provides": [],
      "optional": [],
      "filters": [],
      "permissionSets": [],
      "env": [],
      "name": "Component library for Stripes Marc modules"
    },
    {
      "id": "folio_tenant-settings-11.0.109900000000113",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "settings",
          "version": "1.0"
        },
        {
          "id": "users",
          "version": "15.0 16.0"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "location-units",
          "version": "2.0"
        },
        {
          "id": "locations",
          "version": "3.0"
        },
        {
          "id": "login-saml",
          "version": "2.0"
        },
        {
          "id": "remote-storage-configurations",
          "version": "1.0"
        },
        {
          "id": "remote-storage-mappings",
          "version": "1.0 2.0"
        },
        {
          "id": "service-points",
          "version": "3.5"
        },
        {
          "id": "reading-room",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "settings.tenant-settings.enabled",
          "replaces": [],
          "displayName": "Settings: enabled",
          "subPermissions": [
            "settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-tenant-settings.settings.view",
          "replaces": [],
          "displayName": "Settings (tenant): View",
          "subPermissions": [
            "settings.tenant-settings.enabled",
            "ui-tenant-settings.settings.addresses.view",
            "ui-tenant-settings.settings.locale.view",
            "ui-tenant-settings.settings.plugins.view",
            "ui-tenant-settings.settings.sso.view",
            "ui-tenant-settings.settings.servicepoints.view",
            "ui-tenant-settings.settings.location.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.addresses.view",
          "replaces": [],
          "displayName": "Settings (tenant): Can view tenant addresses",
          "subPermissions": [
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "users.collection.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-tenant-settings.settings.addresses",
          "replaces": [],
          "displayName": "Settings (tenant): Can manage tenant addresses",
          "subPermissions": [
            "ui-tenant-settings.settings.addresses.view",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "configuration.entries.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.locale.view",
          "replaces": [],
          "displayName": "Settings (tenant): Can view language, localization, and currency",
          "subPermissions": [
            "mod-settings.entries.collection.get",
            "mod-settings.global.read.stripes-core.prefs.manage",
            "settings.tenant-settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-tenant-settings.settings.locale",
          "replaces": [],
          "displayName": "Settings (tenant): Can edit language, localization, and currency",
          "subPermissions": [
            "ui-tenant-settings.settings.locale.view",
            "mod-settings.global.write.stripes-core.prefs.manage",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.plugins.view",
          "replaces": [],
          "displayName": "Settings (tenant): Can view preferred plugins",
          "subPermissions": [
            "configuration.entries.collection.get",
            "configuration.entries.item.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-tenant-settings.settings.plugins",
          "replaces": [],
          "displayName": "Settings (tenant): Can maintain preferred plugins",
          "subPermissions": [
            "ui-tenant-settings.settings.plugins.view",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "configuration.entries.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.sso.view",
          "replaces": [],
          "displayName": "Settings (tenant): Can view SSO settings",
          "subPermissions": [
            "login-saml.configuration.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-tenant-settings.settings.sso",
          "replaces": [],
          "displayName": "Settings (tenant): Can maintain SSO settings",
          "subPermissions": [
            "ui-tenant-settings.settings.sso.view",
            "login-saml.configuration.put",
            "login-saml.regenerate"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.location.view",
          "replaces": [],
          "displayName": "Settings (Tenant): View locations",
          "subPermissions": [
            "settings.tenant-settings.enabled",
            "users.item.get",
            "users.collection.get",
            "inventory.items.collection.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.institutions.item.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.campuses.item.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.location-units.libraries.item.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.locations.item.get",
            "inventory-storage.service-points.collection.get",
            "remote-storage.configurations.collection.get",
            "remote-storage.configurations.item.get",
            "remote-storage.mappings.collection.get",
            "remote-storage.mappings.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.location",
          "replaces": [],
          "displayName": "Settings (tenant): Can create, edit and remove locations",
          "subPermissions": [
            "ui-tenant-settings.settings.location.view",
            "inventory-storage.location-units.institutions.item.post",
            "inventory-storage.location-units.institutions.item.put",
            "inventory-storage.location-units.institutions.item.delete",
            "inventory-storage.location-units.campuses.item.post",
            "inventory-storage.location-units.campuses.item.put",
            "inventory-storage.location-units.campuses.item.delete",
            "inventory-storage.location-units.libraries.item.post",
            "inventory-storage.location-units.libraries.item.put",
            "inventory-storage.location-units.libraries.item.delete",
            "inventory-storage.locations.item.post",
            "inventory-storage.locations.item.put",
            "inventory-storage.locations.item.delete",
            "remote-storage.mappings.item.post",
            "remote-storage.mappings.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.location.floating.view",
          "replaces": [],
          "displayName": "Settings (tenant): Can view floating collection flag",
          "subPermissions": [
            "ui-tenant-settings.settings.location.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.location.floating.edit",
          "replaces": [],
          "displayName": "Settings (tenant): Can view and edit floating collection flag",
          "subPermissions": [
            "ui-tenant-settings.settings.location",
            "ui-tenant-settings.settings.location.floating.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.servicepoints.view",
          "replaces": [],
          "displayName": "Settings (tenant): Can view service points",
          "subPermissions": [
            "settings.tenant-settings.enabled",
            "users.item.get",
            "users.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.institutions.collection.get",
            "inventory-storage.location-units.campuses.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points.item.get",
            "circulation-storage.staff-slips.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-tenant-settings.settings.servicepoints",
          "replaces": [],
          "displayName": "Settings (tenant): Can create and edit service points",
          "subPermissions": [
            "ui-tenant-settings.settings.servicepoints.view",
            "inventory-storage.service-points.item.post",
            "inventory-storage.service-points.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.reading-room-access.view",
          "replaces": [],
          "displayName": "Settings (tenant): Can view reading room access",
          "subPermissions": [
            "reading-room.collection.get",
            "inventory-storage.service-points.collection.get",
            "settings.tenant-settings.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-tenant-settings.settings.reading-room-access.all",
          "replaces": [],
          "displayName": "Settings (tenant): Can create, edit and remove reading room access",
          "subPermissions": [
            "ui-tenant-settings.settings.reading-room-access.view",
            "reading-room.item.put",
            "reading-room.item.post",
            "reading-room.item.delete"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "Tenant settings"
    },
    {
      "id": "folio_users-13.0.10990000000799",
      "replaces": [],
      "tags": [],
      "requires": [
        {
          "id": "users",
          "version": "16.4"
        },
        {
          "id": "configuration",
          "version": "2.0"
        },
        {
          "id": "permissions",
          "version": "5.7"
        },
        {
          "id": "login",
          "version": "7.3"
        },
        {
          "id": "users-bl",
          "version": "6.1"
        },
        {
          "id": "settings",
          "version": "1.1"
        },
        {
          "id": "staging-users",
          "version": "1.0"
        },
        {
          "id": "tags",
          "version": "1.0"
        }
      ],
      "provides": [],
      "optional": [
        {
          "id": "actual-cost-record-storage",
          "version": "0.4"
        },
        {
          "id": "add-info",
          "version": "0.1"
        },
        {
          "id": "automated-patron-blocks",
          "version": "0.1"
        },
        {
          "id": "batch-print",
          "version": "1.0"
        },
        {
          "id": "circulation",
          "version": "9.0 10.0 11.0 12.0 13.0 14.0"
        },
        {
          "id": "consortia",
          "version": "1.0"
        },
        {
          "id": "feesfines",
          "version": "19.1"
        },
        {
          "id": "loan-policy-storage",
          "version": "1.0 2.0"
        },
        {
          "id": "loan-storage",
          "version": "4.0 5.0 6.0 7.0"
        },
        {
          "id": "notes",
          "version": "4.0"
        },
        {
          "id": "request-storage",
          "version": "2.5 3.0 4.0 5.0 6.0"
        },
        {
          "id": "reading-room-patron-permission",
          "version": "1.0"
        },
        {
          "id": "roles",
          "version": "1.0"
        },
        {
          "id": "circulation-bff-loans",
          "version": "1.6"
        },
        {
          "id": "users-keycloak",
          "version": "1.0"
        }
      ],
      "filters": [],
      "permissionSets": [
        {
          "permissionName": "module.users.enabled",
          "replaces": [],
          "displayName": "UI: Users module is enabled",
          "subPermissions": []
        },
        {
          "permissionName": "settings.users.enabled",
          "replaces": [],
          "displayName": "Settings (Users): display list of settings pages",
          "subPermissions": [
            "settings.enabled"
          ]
        },
        {
          "permissionName": "ui-users.view",
          "replaces": [],
          "displayName": "Users: Can view user profile",
          "description": "Some subperms can be deleted later when submodules use modern permission names",
          "subPermissions": [
            "module.users.enabled",
            "users-bl.collection.get",
            "users-bl.item.get",
            "addresstypes.collection.get",
            "users.collection.get",
            "users.item.get",
            "users-keycloak.collection.get",
            "users-keycloak.item.get",
            "usergroups.collection.get",
            "configuration.entries.collection.get",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "user-settings.custom-fields.collection.get",
            "user-settings.custom-fields.item.get",
            "user-settings.custom-fields.item.stats.get",
            "departments.collection.get",
            "departments.item.get",
            "circulation-storage.request-preferences.collection.get",
            "users.configurations.item.get",
            "users-keycloak.auth-users.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.edit",
          "replaces": [],
          "displayName": "Users: Can edit user profile",
          "description": "Some subperms can be deleted later when bl does updates and ModulePermissions can be used",
          "subPermissions": [
            "ui-users.view",
            "users-bl.item.put",
            "users.item.put",
            "users-keycloak.item.get",
            "users-keycloak.item.put",
            "tags.collection.get",
            "tags.item.post",
            "circulation-storage.request-preferences.item.post",
            "circulation-storage.request-preferences.item.put",
            "users-keycloak.auth-users.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.delete",
          "replaces": [],
          "displayName": "Users: Can delete user profile if user does not have any open transactions",
          "description": "Delete user when user does not have any open transactions",
          "subPermissions": [
            "users-bl.item.delete",
            "users-keycloak.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.open-transactions.view",
          "replaces": [
            "ui-users.opentransactions"
          ],
          "displayName": "Users: Can check open transactions",
          "description": "Check if user does have any open transactions",
          "subPermissions": [
            "users-bl.transactions.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.create",
          "replaces": [],
          "displayName": "Users: Can create and edit users",
          "description": "Some subperms can be deleted later when bl does updates and ModulePermissions can be used",
          "subPermissions": [
            "ui-users.edit",
            "users-bl.item.post",
            "users.item.post",
            "users-keycloak.item.post",
            "perms.users.item.post",
            "login.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.perms.view",
          "replaces": [
            "ui-users.viewperms"
          ],
          "displayName": "Users: Can view permissions assigned to users",
          "description": "Also includes basic permissions to view users",
          "subPermissions": [
            "ui-users.view",
            "perms.users.get",
            "perms.permissions.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.perms.edit",
          "replaces": [
            "ui-users.editperms"
          ],
          "displayName": "Users: Can assign and unassign permissions to users",
          "description": "",
          "subPermissions": [
            "ui-users.edit",
            "ui-users.perms.view",
            "perms.users.item.put",
            "perms.users.item.post",
            "perms.users.item.delete",
            "perms.users.assign.immutable",
            "perms.users.assign.mutable"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.roles.view",
          "replaces": [],
          "displayName": "Users: Can view user/role assignments",
          "description": "Also includes basic permissions to view roles, users, patron groups",
          "subPermissions": [
            "ui-users.view",
            "ui-authorization-roles.users.settings.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.roles.manage",
          "replaces": [],
          "displayName": "Users: Can manage user/role assignments",
          "description": "",
          "subPermissions": [
            "ui-users.roles.view",
            "ui-users.edit",
            "ui-authorization-roles.users.settings.manage"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.user-service-points.view",
          "replaces": [
            "ui-users.viewuserservicepoints"
          ],
          "displayName": "Users: Can view service points assigned to users",
          "description": "Also includes basic permissions to view users",
          "subPermissions": [
            "ui-users.view",
            "inventory-storage.service-points.collection.get",
            "inventory-storage.service-points-users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.user-service-points.edit",
          "replaces": [
            "ui-users.edituserservicepoints"
          ],
          "displayName": "Users: Can assign and unassign service points to users",
          "description": "",
          "subPermissions": [
            "ui-users.edit",
            "ui-users.user-service-points.view",
            "inventory-storage.service-points-users.item.post",
            "inventory-storage.service-points-users.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.permsets.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view permission sets",
          "description": "",
          "subPermissions": [
            "perms.permissions.get",
            "settings.users.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.permsets.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove permission sets",
          "description": "",
          "subPermissions": [
            "ui-users.settings.permsets.view",
            "perms.permissions.item.put",
            "perms.permissions.item.post",
            "perms.permissions.item.delete",
            "perms.users.assign.immutable",
            "perms.users.assign.mutable"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.usergroups.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view patron groups",
          "subPermissions": [
            "usergroups.collection.get",
            "usergroups.item.get",
            "users.collection.get",
            "settings.users.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.usergroups.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove patron groups",
          "subPermissions": [
            "ui-users.settings.usergroups.view",
            "usergroups.item.delete",
            "usergroups.item.post",
            "usergroups.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.addresstypes.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view address types",
          "subPermissions": [
            "addresstypes.collection.get",
            "addresstypes.item.get",
            "settings.users.enabled"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.addresstypes.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove address types",
          "subPermissions": [
            "ui-users.settings.addresstypes.view",
            "addresstypes.item.post",
            "addresstypes.item.put",
            "addresstypes.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.proxies.view",
          "replaces": [
            "ui-users.viewproxies"
          ],
          "displayName": "Users: Can view proxies assigned to users",
          "subPermissions": [
            "ui-users.view",
            "proxiesfor.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.proxies.all",
          "replaces": [
            "ui-users.editproxies"
          ],
          "displayName": "Users: Can create, edit and remove proxies",
          "description": "",
          "subPermissions": [
            "ui-users.edit",
            "ui-users.proxies.view",
            "proxiesfor.item.get",
            "proxiesfor.item.post",
            "proxiesfor.item.put",
            "proxiesfor.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.comments.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view if comment required",
          "subPermissions": [
            "comments.collection.get",
            "comments.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.comments.all",
          "replaces": [],
          "displayName": "Settings (Users): Can edit if comment required",
          "subPermissions": [
            "ui-users.settings.comments.view",
            "comments.item.delete",
            "comments.item.put",
            "comments.item.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.feefines.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view feefines-related entries",
          "subPermissions": [
            "ui-users.settings.owners.view",
            "ui-users.settings.manual-charges.view",
            "ui-users.settings.waives.view",
            "ui-users.settings.payments.view",
            "ui-users.settings.refunds.view",
            "ui-users.settings.comments.view",
            "ui-users.settings.transfers.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.feefines.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove all feefines-related entries",
          "subPermissions": [
            "settings.users.enabled",
            "ui-users.settings.owners.all",
            "ui-users.settings.feefines",
            "ui-users.settings.waives.all",
            "ui-users.settings.payments.all",
            "ui-users.settings.refunds.all",
            "ui-users.settings.comments.all",
            "ui-users.settings.transfers.all",
            "ui-users.settings.manual-charges.all",
            "ui-plugin-bursar-export.bursar-exports.all"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.manual-charges.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view manual charges",
          "subPermissions": [
            "feefines.collection.get",
            "feefines.item.get",
            "inventory-storage.service-points.collection.get",
            "owners.collection.get",
            "templates.collection.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.manual-charges.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove manual charges",
          "subPermissions": [
            "ui-users.settings.manual-charges.view",
            "feefines.item.delete",
            "feefines.item.post",
            "feefines.item.put",
            "feefine-reports.refund.post"
          ],
          "visible": true
        },
        {
          "permissionName": "mod-settings.global.read.ui-users.number-generator-settings.manage",
          "replaces": [],
          "displayName": "Settings (Users): Read the settings in the 'Number generator' section",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "mod-settings.global.write.ui-users.number-generator-settings.manage",
          "replaces": [],
          "displayName": "Settings (Users): Write the settings in the 'Number generator' section",
          "subPermissions": [],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.number-generator-options.all",
          "replaces": [],
          "displayName": "Settings (Users): Manage number generator options",
          "subPermissions": [
            "settings.users.enabled",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put",
            "mod-settings.global.read.ui-users.number-generator-settings.manage",
            "mod-settings.global.write.ui-users.number-generator-settings.manage"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.customfields.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view custom fields",
          "subPermissions": [
            "settings.users.enabled",
            "configuration.entries.collection.get",
            "mod-settings.entries.collection.get",
            "mod-settings.entries.item.get",
            "user-settings.custom-fields.collection.get",
            "user-settings.custom-fields.item.option.stats.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.customfields.edit",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit, and view custom fields",
          "subPermissions": [
            "ui-users.settings.customfields.view",
            "user-settings.custom-fields.collection.put",
            "user-settings.custom-fields.item.post",
            "user-settings.custom-fields.item.put",
            "configuration.entries.item.post",
            "configuration.entries.item.put",
            "mod-settings.entries.item.post",
            "mod-settings.entries.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.customfields.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit, view and delete custom fields",
          "subPermissions": [
            "ui-users.settings.customfields.view",
            "ui-users.settings.customfields.edit",
            "user-settings.custom-fields.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.owners.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view owners",
          "subPermissions": [
            "inventory-storage.service-points.collection.get",
            "owners.collection.get",
            "owners.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.owners.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove owners",
          "subPermissions": [
            "ui-users.settings.owners.view",
            "owners.item.delete",
            "owners.item.post",
            "owners.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.payments.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view payment methods",
          "subPermissions": [
            "owners.collection.get",
            "payments.collection.get",
            "payments.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.payments.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove payment methods",
          "subPermissions": [
            "ui-users.settings.payments.view",
            "payments.item.delete",
            "payments.item.post",
            "payments.item.put",
            "users.collection.get",
            "users-keycloak.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.refunds.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view refund reasons",
          "subPermissions": [
            "refunds.collection.get",
            "refunds.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.refunds.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove refunds reasons",
          "subPermissions": [
            "ui-users.settings.refunds.view",
            "refunds.item.delete",
            "refunds.item.post",
            "refunds.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.waives.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view waive reasons",
          "subPermissions": [
            "waives.collection.get",
            "waives.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.waives.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove waive reasons",
          "subPermissions": [
            "ui-users.settings.waives.view",
            "waives.item.delete",
            "waives.item.post",
            "waives.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.accounts.all",
          "replaces": [
            "ui-users.accounts"
          ],
          "displayName": "Fee/Fine History: Can create, edit and remove accounts",
          "subPermissions": [
            "accounts.collection.get",
            "accounts.item.delete",
            "accounts.item.get",
            "accounts.item.post",
            "accounts.item.put",
            "feefineactions.collection.get",
            "payments.collection.get",
            "waives.collection.get",
            "owners.collection.get",
            "feefines.collection.get",
            "transfers.collection.get",
            "inventory-storage.service-points-users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.fee-fine-actions.all",
          "replaces": [
            "ui-users.feefineactions"
          ],
          "displayName": "Fee/Fine Details: Can create, edit and remove fee/fine actions",
          "subPermissions": [
            "feefineactions.collection.get",
            "feefineactions.item.delete",
            "feefineactions.item.get",
            "feefineactions.item.post",
            "feefineactions.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.transfers.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view transfer accounts",
          "subPermissions": [
            "owners.collection.get",
            "transfers.collection.get",
            "transfers.item.get",
            "settings.users.enabled"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.transfers.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove transfer accounts ",
          "subPermissions": [
            "ui-users.settings.transfers.view",
            "transfers.item.delete",
            "transfers.item.post",
            "transfers.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.manual-pay.execute",
          "replaces": [
            "ui-users.manual_pay"
          ],
          "displayName": "Fees/Fines: Can pay",
          "subPermissions": [
            "ui-users.accounts.all",
            "ui-users.fee-fine-actions.all",
            "comments.collection.get",
            "comments.item.get",
            "payments.collection.get",
            "payments.item.get",
            "feesfines.accounts.check-pay.post",
            "feesfines.accounts-bulk.check-pay.post",
            "feesfines.accounts.pay.post",
            "feesfines.accounts-bulk.pay.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.manual-waive.execute",
          "replaces": [
            "ui-users.manual_waive"
          ],
          "displayName": "Fees/Fines: Can waive",
          "subPermissions": [
            "ui-users.accounts.all",
            "ui-users.fee-fine-actions.all",
            "comments.collection.get",
            "comments.item.get",
            "waives.collection.get",
            "waives.item.get",
            "feesfines.accounts.check-waive.post",
            "feesfines.accounts-bulk.check-waive.post",
            "feesfines.accounts.waive.post",
            "feesfines.accounts-bulk.waive.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.manual-charge.execute",
          "replaces": [
            "ui-users.manual_charge"
          ],
          "displayName": "Fees/Fines: Can charge",
          "subPermissions": [
            "owners.collection.get",
            "owners.item.get",
            "feefines.collection.get",
            "feefines.item.get",
            "ui-users.manual-pay.execute"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.patron-blocks.all",
          "replaces": [
            "ui-users.patron_blocks"
          ],
          "displayName": "Users: Can create, edit and remove patron blocks",
          "subPermissions": [
            "manualblocks.collection.get",
            "manual-block-templates.collection.get",
            "manualblocks.item.delete",
            "manualblocks.item.get",
            "manualblocks.item.post",
            "manualblocks.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.conditions.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view patron blocks conditions",
          "subPermissions": [
            "settings.users.enabled",
            "patron-blocks.patron-block-conditions.collection.get",
            "patron-blocks.patron-block-conditions.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.conditions.edit",
          "replaces": [],
          "displayName": "Settings (Users): Can view and edit patron blocks conditions",
          "subPermissions": [
            "ui-users.settings.conditions.view",
            "patron-blocks.patron-block-conditions.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.patron-block-templates.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view patron blocks templates",
          "subPermissions": [
            "settings.users.enabled",
            "users.collection.get",
            "manual-block-templates.collection.get",
            "manual-block-templates.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.patron-block-templates.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove patron blocks templates",
          "subPermissions": [
            "ui-users.settings.patron-block-templates.view",
            "manual-block-templates.item.post",
            "manual-block-templates.item.put",
            "manual-block-templates.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.limits.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view patron blocks limits",
          "subPermissions": [
            "ui-users.settings.conditions.view",
            "patron-blocks.patron-block-limits.collection.get",
            "patron-blocks.patron-block-limits.item.get",
            "usergroups.collection.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.limits.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit and remove patron blocks limits",
          "subPermissions": [
            "ui-users.settings.conditions.edit",
            "ui-users.settings.limits.view",
            "patron-blocks.patron-block-limits.item.post",
            "patron-blocks.patron-block-limits.item.put",
            "patron-blocks.patron-block-limits.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.feesfines.view",
          "replaces": [],
          "displayName": "Users: Can view fees/fines and loans",
          "description": "Also includes basic permissions to view users",
          "subPermissions": [
            "ui-users.view",
            "ui-users.loans.view",
            "accounts.collection.get",
            "accounts.item.get",
            "comments.collection.get",
            "comments.item.get",
            "feefineactions.collection.get",
            "feefines.collection.get",
            "feefines.item.get",
            "owners.collection.get",
            "owners.item.get",
            "payments.collection.get",
            "payments.item.get",
            "refunds.collection.get",
            "refunds.item.get",
            "transfers.collection.get",
            "waives.collection.get",
            "waives.item.get",
            "inventory-storage.service-points-users.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.feesfines.actions.all",
          "replaces": [],
          "displayName": "Users: Can create, edit and remove fees/fines",
          "subPermissions": [
            "ui-users.feesfines.view",
            "ui-users.manual-charge.execute",
            "ui-users.manual-pay.execute",
            "ui-users.manual-waive.execute",
            "feesfines.accounts.check-transfer.post",
            "feesfines.accounts.check-refund.post",
            "feesfines.accounts.transfer.post",
            "feesfines.accounts-bulk.transfer.post",
            "feesfines.accounts.cancel.post",
            "feesfines.accounts-bulk.cancel.post",
            "feesfines.accounts.refund.post",
            "feesfines.accounts-bulk.refund.post",
            "circulation-storage.loans.item.get",
            "inventory.items.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans-renew.create",
          "replaces": [
            "ui-users.loans.renew"
          ],
          "displayName": "Users: User loans renew",
          "description": "Also includes backend permissions to perform loans renew",
          "subPermissions": [
            "circulation.renew-by-barcode.post",
            "inventory-storage.location-units.libraries.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans-renew-override.create",
          "replaces": [
            "ui-users.loans.renew-override"
          ],
          "displayName": "Users: User loans renew through override",
          "description": "Also includes backend permissions to perform loans renew through override",
          "subPermissions": [
            "circulation.override-renewal-block.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans-add-info.create",
          "replaces": [
            "ui-users.loans.add-patron-info",
            "ui-users.loans.add-staff-info"
          ],
          "displayName": "Users: User loans: add staff or patron information",
          "subPermissions": [
            "circulation.loans.add-info.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans-declare-item-lost.execute",
          "replaces": [
            "ui-users.loans.declare-item-lost"
          ],
          "displayName": "Users: User loans declare lost",
          "description": "Also includes backend permissions to declare items lost",
          "subPermissions": [
            "circulation.loans.declare-item-lost.post",
            "circulation-bff.loans.declare-item-lost.execute",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans-declare-claimed-returned-item-as-missing.execute",
          "replaces": [
            "ui-users.loans.declare-claimed-returned-item-as-missing"
          ],
          "displayName": "Users: User loans mark claimed returned missing",
          "description": "Also includes backend permission to declare claimed returned item as missing",
          "subPermissions": [
            "circulation.loans.declare-claimed-returned-item-as-missing.post",
            "circulation-bff.loans.declare-claimed-returned-item-as-missing.execute",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans-claim-item-returned.execute",
          "replaces": [
            "ui-users.loans.claim-item-returned"
          ],
          "displayName": "Users: User loans claim returned",
          "description": "Also includes backend permissions to claim items returned",
          "subPermissions": [
            "circulation.loans.claim-item-returned.post",
            "circulation-bff.loans.claim-item-returned.execute",
            "circulation-storage.loans.item.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans.view",
          "replaces": [],
          "displayName": "Users: User loans view",
          "description": "Also includes basic permissions to view users",
          "subPermissions": [
            "ui-users.view",
            "circulation.loans.collection.get",
            "circulation.requests.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loans-history.collection.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "circulation-storage.staff-slips.collection.get",
            "accounts.collection.get",
            "comments.collection.get",
            "circulation-bff.loans.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans-due-date.edit",
          "replaces": [
            "ui-users.loans.change-due-date"
          ],
          "displayName": "Users: User loans change due date",
          "description": "Also includes backend permissions to perform change due date",
          "subPermissions": [
            "circulation.loans.item.put",
            "circulation.renew-by-barcode.post",
            "circulation-storage.loans.item.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.fixed-due-date-schedules.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans.all",
          "replaces": [],
          "displayName": "Users: User loans view, change due date, renew",
          "description": "Also includes requests, loan-policies and accounts permissions",
          "subPermissions": [
            "ui-users.view",
            "ui-users.loans-due-date.edit",
            "ui-users.loans-renew.create",
            "ui-users.loans.view",
            "circulation.loans.item.put",
            "circulation.renew-by-barcode.post",
            "circulation-storage.loans-history.collection.get",
            "circulation-storage.loan-policies.collection.get",
            "circulation-storage.loan-policies.item.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "accounts.collection.get",
            "feefineactions.collection.get",
            "owners.collection.get",
            "payments.collection.get",
            "comments.collection.get",
            "waives.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.material-types.collection.get",
            "manualblocks.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.loans-anonymize.execute",
          "replaces": [
            "ui-users.loans.anonymize"
          ],
          "displayName": "Users: User loans anonymize",
          "subPermissions": [
            "circulation.loans.collection.anonymize.user.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.requests.all",
          "replaces": [],
          "displayName": "Users: View requests",
          "description": "Also includes basic permissions to view users and loans",
          "subPermissions": [
            "ui-users.view",
            "circulation.loans.collection.get",
            "circulation.requests.collection.get",
            "circulation.requests.item.get",
            "circulation-storage.cancellation-reasons.collection.get",
            "circulation-storage.loans.collection.get",
            "circulation-storage.loans.item.get",
            "circulation-storage.requests.collection.get",
            "circulation-storage.requests.collection.delete",
            "circulation-storage.requests.item.get",
            "circulation-storage.requests.item.delete",
            "circulation-storage.circulation-rules.get",
            "circulation-storage.fixed-due-date-schedules.collection.get",
            "inventory.items.collection.get",
            "inventory.items.item.get",
            "inventory.instances.item.get",
            "inventory.instances.collection.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.get",
            "inventory-storage.instances.item.get",
            "inventory-storage.instances.collection.get",
            "inventory-storage.locations.collection.get",
            "inventory-storage.location-units.libraries.collection.get",
            "inventory-storage.material-types.collection.get",
            "circulation-storage.loan-policies.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.reset.password",
          "replaces": [],
          "displayName": "Users: Create/reset password",
          "subPermissions": [
            "login.credentials-existence.get",
            "ui-users.view",
            "ui-users.edit",
            "users-bl.password-reset-link.generate",
            "users-keycloak.password-reset-link.generate"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.departments.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view departments",
          "subPermissions": [
            "settings.users.enabled",
            "departments.collection.get",
            "departments.item.get"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.departments.edit",
          "replaces": [],
          "displayName": "Settings (Users): Edit departments",
          "subPermissions": [
            "settings.users.enabled",
            "departments.item.put"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.departments.create",
          "replaces": [],
          "displayName": "Settings (Users): Create departments",
          "subPermissions": [
            "settings.users.enabled",
            "departments.item.post"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.departments.delete",
          "replaces": [],
          "displayName": "Settings (Users): Delete departments",
          "subPermissions": [
            "settings.users.enabled",
            "departments.item.delete"
          ],
          "visible": false
        },
        {
          "permissionName": "ui-users.settings.departments.create.edit.view",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit, and view departments",
          "subPermissions": [
            "ui-users.settings.departments.create",
            "ui-users.settings.departments.edit",
            "ui-users.settings.departments.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.departments.all",
          "replaces": [],
          "displayName": "Settings (Users): Can create, edit, view, and delete departments",
          "subPermissions": [
            "ui-users.settings.departments.create",
            "ui-users.settings.departments.edit",
            "ui-users.settings.departments.view",
            "ui-users.settings.departments.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.override-patron-block.execute",
          "replaces": [
            "ui-users.overridePatronBlock"
          ],
          "displayName": "User: Can override patron blocks",
          "subPermissions": [
            "circulation.override-patron-block.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.override-item-block.execute",
          "replaces": [
            "ui-users.overrideItemBlock"
          ],
          "displayName": "User: Can override item blocks",
          "subPermissions": [
            "circulation.override-item-limit-block.post",
            "circulation.override-item-not-loanable-block.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.cash-drawer-report.execute",
          "replaces": [
            "ui-users.cashDrawerReport"
          ],
          "displayName": "Users: Create and download Cash drawer reconciliation report",
          "subPermissions": [
            "feesfines.feefine-reports.cash-drawer-reconciliation.post",
            "feesfines.feefine-reports.cash-drawer-reconciliation-source.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.financial-transaction-report.execute",
          "replaces": [
            "ui-users.financialTransactionReport"
          ],
          "displayName": "Users: Create and download Financial transaction detail report",
          "subPermissions": [
            "feefine-reports.financial-transactions-detail.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.manual-process-refunds-report.execute",
          "replaces": [
            "ui-users.manualProcessRefundsReport"
          ],
          "displayName": "Users: Create and download Refunds to process manually report",
          "subPermissions": [
            "ui-users.view",
            "feefine-reports.refund.post",
            "owners.collection.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.lost-items-requiring-actual-cost.execute",
          "replaces": [
            "ui-users.lost-items.requiring-actual-cost"
          ],
          "displayName": "Users: Can process lost items requiring actual cost",
          "subPermissions": [
            "ui-users.view",
            "ui-users.loans.view",
            "ui-users.feesfines.actions.all",
            "ui-inventory.instance.view",
            "actual-cost-record-storage.actual-cost-records.collection.get",
            "actual-cost-fee-fine-bill.post",
            "actual-cost-fee-fine-cancel.post"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.profile-pictures.view",
          "replaces": [],
          "displayName": "Users: Can view profile pictures",
          "description": "Also includes basic permissions to view users",
          "subPermissions": [
            "ui-users.view",
            "users.profile-picture.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.profile-pictures.all",
          "replaces": [],
          "displayName": "Users: Can view, edit, and delete profile pictures",
          "description": "Also includes basic permissions to edit user profile",
          "subPermissions": [
            "ui-users.profile-pictures.view",
            "ui-users.edit",
            "users.profile-picture.item.post",
            "users.profile-picture.item.put",
            "users.profile-picture.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.general.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view general entries",
          "description": "Permission to view all general entries of settings",
          "subPermissions": [
            "ui-users.settings.addresstypes.view",
            "ui-users.settings.customfields.view",
            "ui-users.settings.usergroups.view",
            "ui-users.settings.permsets.view",
            "ui-users.settings.departments.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.patron-blocks.view",
          "replaces": [],
          "displayName": "Settings (Users): Can view all patron blocks entries",
          "description": "Permission to view conditions, limits and templated in patron block section of settings",
          "subPermissions": [
            "ui-users.settings.conditions.view",
            "ui-users.settings.limits.view",
            "ui-users.settings.patron-block-templates.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.settings.view",
          "replaces": [],
          "displayName": "Settings (Users): View all settings",
          "subPermissions": [
            "ui-users.settings.general.view",
            "ui-users.settings.feefines.view",
            "ui-users.settings.patron-blocks.view"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.patron-notice-print-jobs.view",
          "replaces": [
            "ui-users.view-patron-notice-print-jobs"
          ],
          "displayName": "Users: View patron notice print jobs",
          "subPermissions": [
            "ui-users.view",
            "batch-print.entries.collection.get",
            "batch-print.entries.item.get",
            "batch-print.print.read"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.patron-notice-print-jobs.delete",
          "replaces": [
            "ui-users.remove-patron-notice-print-jobs"
          ],
          "displayName": "Users: View and remove patron notice print jobs",
          "subPermissions": [
            "ui-circulation.settings.view-patron-notice-print-jobs",
            "batch-print.entries.item.delete"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.reading-room-access.view",
          "replaces": [],
          "displayName": "Users: Can view reading room access",
          "subPermissions": [
            "ui-users.view",
            "reading-room.patron-permission.item.get"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.reading-room-access.edit",
          "replaces": [],
          "displayName": "Users: Can view, and edit reading room access",
          "subPermissions": [
            "ui-users.edit",
            "ui-users.reading-room-access.view",
            "reading-room.patron-permission.item.put"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.patron-pre-registrations.execute",
          "replaces": [],
          "displayName": "Users: Can merge patron preregistration data",
          "description": "Edits existing user or creates new user, based on pre-registration record",
          "subPermissions": [
            "staging-users.item.put",
            "perms.users.item.post",
            "ui-users.edit"
          ],
          "visible": true
        },
        {
          "permissionName": "ui-users.patron-pre-registrations.view",
          "replaces": [],
          "displayName": "Users: Can view patron preregistration data",
          "subPermissions": [
            "module.users.enabled",
            "ui-users.view",
            "staging-users.collection.get"
          ],
          "visible": true
        }
      ],
      "env": [],
      "name": "User management"
    }
  ],
  "platform": "base",
  "dependencies": [
    {
      "name": "app-platform-minimal",
      "version": "^2.1.0-SNAPSHOT",
      "optional": false
    }
  ],
  "id": "app-platform-complete-3.0.0-SNAPSHOT.5821",
  "name": "app-platform-complete",
  "version": "3.0.0-SNAPSHOT.5821"
}